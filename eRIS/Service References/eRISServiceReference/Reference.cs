//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace eRIS.eRISServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fCurrentWorkflowResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fCurrentWorkflowResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string chartField;
        
        private string locationField;
        
        private string modalityField;
        
        private System.Nullable<long> totalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string chart {
            get {
                return this.chartField;
            }
            set {
                if ((object.ReferenceEquals(this.chartField, value) != true)) {
                    this.chartField = value;
                    this.RaisePropertyChanged("chart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modality {
            get {
                return this.modalityField;
            }
            set {
                if ((object.ReferenceEquals(this.modalityField, value) != true)) {
                    this.modalityField = value;
                    this.RaisePropertyChanged("modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> totals {
            get {
                return this.totalsField;
            }
            set {
                if ((this.totalsField.Equals(value) != true)) {
                    this.totalsField = value;
                    this.RaisePropertyChanged("totals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fCurrentWorkflowDetailsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fCurrentWorkflowDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccessionNumberField;
        
        private string ArrivedField;
        
        private string CompletedField;
        
        private string ExamField;
        
        private string ExamDateField;
        
        private string ModalityField;
        
        private string PatientField;
        
        private string RadField;
        
        private string ScheduledField;
        
        private string SignedField;
        
        private string SiteCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNumber {
            get {
                return this.AccessionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNumberField, value) != true)) {
                    this.AccessionNumberField = value;
                    this.RaisePropertyChanged("AccessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arrived {
            get {
                return this.ArrivedField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivedField, value) != true)) {
                    this.ArrivedField = value;
                    this.RaisePropertyChanged("Arrived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletedField, value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exam {
            get {
                return this.ExamField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamField, value) != true)) {
                    this.ExamField = value;
                    this.RaisePropertyChanged("Exam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamDate {
            get {
                return this.ExamDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamDateField, value) != true)) {
                    this.ExamDateField = value;
                    this.RaisePropertyChanged("ExamDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rad {
            get {
                return this.RadField;
            }
            set {
                if ((object.ReferenceEquals(this.RadField, value) != true)) {
                    this.RadField = value;
                    this.RaisePropertyChanged("Rad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scheduled {
            get {
                return this.ScheduledField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduledField, value) != true)) {
                    this.ScheduledField = value;
                    this.RaisePropertyChanged("Scheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signed {
            get {
                return this.SignedField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedField, value) != true)) {
                    this.SignedField = value;
                    this.RaisePropertyChanged("Signed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetPermissionsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetPermissionsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private int RadGroupField;
        
        private string ShortNameField;
        
        private bool isAdminField;
        
        private bool isClerkField;
        
        private bool isCoderField;
        
        private bool isCoderAssignableField;
        
        private bool isCoderLimitedField;
        
        private bool isManagerField;
        
        private bool isPatientField;
        
        private bool isPhysicianField;
        
        private bool isRISAdminField;
        
        private bool isRadiologistField;
        
        private bool isRadiologistADIField;
        
        private bool isTechField;
        
        private bool isTeleradField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadGroup {
            get {
                return this.RadGroupField;
            }
            set {
                if ((this.RadGroupField.Equals(value) != true)) {
                    this.RadGroupField = value;
                    this.RaisePropertyChanged("RadGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                if ((this.isAdminField.Equals(value) != true)) {
                    this.isAdminField = value;
                    this.RaisePropertyChanged("isAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isClerk {
            get {
                return this.isClerkField;
            }
            set {
                if ((this.isClerkField.Equals(value) != true)) {
                    this.isClerkField = value;
                    this.RaisePropertyChanged("isClerk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCoder {
            get {
                return this.isCoderField;
            }
            set {
                if ((this.isCoderField.Equals(value) != true)) {
                    this.isCoderField = value;
                    this.RaisePropertyChanged("isCoder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCoderAssignable {
            get {
                return this.isCoderAssignableField;
            }
            set {
                if ((this.isCoderAssignableField.Equals(value) != true)) {
                    this.isCoderAssignableField = value;
                    this.RaisePropertyChanged("isCoderAssignable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCoderLimited {
            get {
                return this.isCoderLimitedField;
            }
            set {
                if ((this.isCoderLimitedField.Equals(value) != true)) {
                    this.isCoderLimitedField = value;
                    this.RaisePropertyChanged("isCoderLimited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isManager {
            get {
                return this.isManagerField;
            }
            set {
                if ((this.isManagerField.Equals(value) != true)) {
                    this.isManagerField = value;
                    this.RaisePropertyChanged("isManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPatient {
            get {
                return this.isPatientField;
            }
            set {
                if ((this.isPatientField.Equals(value) != true)) {
                    this.isPatientField = value;
                    this.RaisePropertyChanged("isPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPhysician {
            get {
                return this.isPhysicianField;
            }
            set {
                if ((this.isPhysicianField.Equals(value) != true)) {
                    this.isPhysicianField = value;
                    this.RaisePropertyChanged("isPhysician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRISAdmin {
            get {
                return this.isRISAdminField;
            }
            set {
                if ((this.isRISAdminField.Equals(value) != true)) {
                    this.isRISAdminField = value;
                    this.RaisePropertyChanged("isRISAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRadiologist {
            get {
                return this.isRadiologistField;
            }
            set {
                if ((this.isRadiologistField.Equals(value) != true)) {
                    this.isRadiologistField = value;
                    this.RaisePropertyChanged("isRadiologist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRadiologistADI {
            get {
                return this.isRadiologistADIField;
            }
            set {
                if ((this.isRadiologistADIField.Equals(value) != true)) {
                    this.isRadiologistADIField = value;
                    this.RaisePropertyChanged("isRadiologistADI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTech {
            get {
                return this.isTechField;
            }
            set {
                if ((this.isTechField.Equals(value) != true)) {
                    this.isTechField = value;
                    this.RaisePropertyChanged("isTech");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTelerad {
            get {
                return this.isTeleradField;
            }
            set {
                if ((this.isTeleradField.Equals(value) != true)) {
                    this.isTeleradField = value;
                    this.RaisePropertyChanged("isTelerad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetPersonnelResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetPersonnelResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        private string TypeField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetUsersResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetUsersResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        private System.Nullable<int> RadGroupField;
        
        private System.Nullable<bool> isCoderAssignableField;
        
        private System.Nullable<bool> isRadiologistADIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RadGroup {
            get {
                return this.RadGroupField;
            }
            set {
                if ((this.RadGroupField.Equals(value) != true)) {
                    this.RadGroupField = value;
                    this.RaisePropertyChanged("RadGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isCoderAssignable {
            get {
                return this.isCoderAssignableField;
            }
            set {
                if ((this.isCoderAssignableField.Equals(value) != true)) {
                    this.isCoderAssignableField = value;
                    this.RaisePropertyChanged("isCoderAssignable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isRadiologistADI {
            get {
                return this.isRadiologistADIField;
            }
            set {
                if ((this.isRadiologistADIField.Equals(value) != true)) {
                    this.isRadiologistADIField = value;
                    this.RaisePropertyChanged("isRadiologistADI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sLoginResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sLoginResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FirstNameField;
        
        private int IDField;
        
        private string LastNameField;
        
        private System.Nullable<int> RadGroupField;
        
        private string TypeField;
        
        private string UserIDField;
        
        private System.Nullable<bool> isAdminField;
        
        private System.Nullable<bool> isClerkField;
        
        private System.Nullable<bool> isCoderField;
        
        private System.Nullable<bool> isCoderLimitedField;
        
        private System.Nullable<bool> isManagerField;
        
        private System.Nullable<bool> isPatientField;
        
        private System.Nullable<bool> isPhysicianField;
        
        private System.Nullable<bool> isRISAdminField;
        
        private System.Nullable<bool> isRadiologistField;
        
        private System.Nullable<bool> isRadiologistADIField;
        
        private System.Nullable<bool> isTechField;
        
        private System.Nullable<bool> isTeleradField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RadGroup {
            get {
                return this.RadGroupField;
            }
            set {
                if ((this.RadGroupField.Equals(value) != true)) {
                    this.RadGroupField = value;
                    this.RaisePropertyChanged("RadGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                if ((this.isAdminField.Equals(value) != true)) {
                    this.isAdminField = value;
                    this.RaisePropertyChanged("isAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isClerk {
            get {
                return this.isClerkField;
            }
            set {
                if ((this.isClerkField.Equals(value) != true)) {
                    this.isClerkField = value;
                    this.RaisePropertyChanged("isClerk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isCoder {
            get {
                return this.isCoderField;
            }
            set {
                if ((this.isCoderField.Equals(value) != true)) {
                    this.isCoderField = value;
                    this.RaisePropertyChanged("isCoder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isCoderLimited {
            get {
                return this.isCoderLimitedField;
            }
            set {
                if ((this.isCoderLimitedField.Equals(value) != true)) {
                    this.isCoderLimitedField = value;
                    this.RaisePropertyChanged("isCoderLimited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isManager {
            get {
                return this.isManagerField;
            }
            set {
                if ((this.isManagerField.Equals(value) != true)) {
                    this.isManagerField = value;
                    this.RaisePropertyChanged("isManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isPatient {
            get {
                return this.isPatientField;
            }
            set {
                if ((this.isPatientField.Equals(value) != true)) {
                    this.isPatientField = value;
                    this.RaisePropertyChanged("isPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isPhysician {
            get {
                return this.isPhysicianField;
            }
            set {
                if ((this.isPhysicianField.Equals(value) != true)) {
                    this.isPhysicianField = value;
                    this.RaisePropertyChanged("isPhysician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isRISAdmin {
            get {
                return this.isRISAdminField;
            }
            set {
                if ((this.isRISAdminField.Equals(value) != true)) {
                    this.isRISAdminField = value;
                    this.RaisePropertyChanged("isRISAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isRadiologist {
            get {
                return this.isRadiologistField;
            }
            set {
                if ((this.isRadiologistField.Equals(value) != true)) {
                    this.isRadiologistField = value;
                    this.RaisePropertyChanged("isRadiologist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isRadiologistADI {
            get {
                return this.isRadiologistADIField;
            }
            set {
                if ((this.isRadiologistADIField.Equals(value) != true)) {
                    this.isRadiologistADIField = value;
                    this.RaisePropertyChanged("isRadiologistADI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isTech {
            get {
                return this.isTechField;
            }
            set {
                if ((this.isTechField.Equals(value) != true)) {
                    this.isTechField = value;
                    this.RaisePropertyChanged("isTech");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isTelerad {
            get {
                return this.isTeleradField;
            }
            set {
                if ((this.isTeleradField.Equals(value) != true)) {
                    this.isTeleradField = value;
                    this.RaisePropertyChanged("isTelerad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sStudiesReadPerDayResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sStudiesReadPerDayResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> ExamsField;
        
        private string LocationField;
        
        private string ModalityField;
        
        private System.Nullable<double> RVUsField;
        
        private string RadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Exams {
            get {
                return this.ExamsField;
            }
            set {
                if ((this.ExamsField.Equals(value) != true)) {
                    this.ExamsField = value;
                    this.RaisePropertyChanged("Exams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RVUs {
            get {
                return this.RVUsField;
            }
            set {
                if ((this.RVUsField.Equals(value) != true)) {
                    this.RVUsField = value;
                    this.RaisePropertyChanged("RVUs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rad {
            get {
                return this.RadField;
            }
            set {
                if ((object.ReferenceEquals(this.RadField, value) != true)) {
                    this.RadField = value;
                    this.RaisePropertyChanged("Rad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sStudiesReadPerHourResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sStudiesReadPerHourResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> Column1Field;
        
        private System.Nullable<int> TotalExamsField;
        
        private System.Nullable<double> TotalRVUsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Column1 {
            get {
                return this.Column1Field;
            }
            set {
                if ((this.Column1Field.Equals(value) != true)) {
                    this.Column1Field = value;
                    this.RaisePropertyChanged("Column1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalExams {
            get {
                return this.TotalExamsField;
            }
            set {
                if ((this.TotalExamsField.Equals(value) != true)) {
                    this.TotalExamsField = value;
                    this.RaisePropertyChanged("TotalExams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TotalRVUs {
            get {
                return this.TotalRVUsField;
            }
            set {
                if ((this.TotalRVUsField.Equals(value) != true)) {
                    this.TotalRVUsField = value;
                    this.RaisePropertyChanged("TotalRVUs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetRadGroupResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetRadGroupResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sUsersLogPerDayResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sUsersLogPerDayResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CreatedField;
        
        private string CreatedByUserField;
        
        private string DescriptionField;
        
        private System.Nullable<long> SourceIDField;
        
        private string UsersLogTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsersLogType {
            get {
                return this.UsersLogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersLogTypeField, value) != true)) {
                    this.UsersLogTypeField = value;
                    this.RaisePropertyChanged("UsersLogType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sUsersLogBySourceResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sUsersLogBySourceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CreatedField;
        
        private string CreatedByUserField;
        
        private string DescriptionField;
        
        private string UsersLogTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsersLogType {
            get {
                return this.UsersLogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersLogTypeField, value) != true)) {
                    this.UsersLogTypeField = value;
                    this.RaisePropertyChanged("UsersLogType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sUsersLogByUserResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sUsersLogByUserResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CreatedField;
        
        private string CreatedByUserField;
        
        private string DescriptionField;
        
        private System.Nullable<long> SourceIDField;
        
        private string UsersLogTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsersLogType {
            get {
                return this.UsersLogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersLogTypeField, value) != true)) {
                    this.UsersLogTypeField = value;
                    this.RaisePropertyChanged("UsersLogType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sMessagesLogPerDayResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sMessagesLogPerDayResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CreatedField;
        
        private string DescriptionField;
        
        private string MessagesLogSourceField;
        
        private string MessagesLogTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessagesLogSource {
            get {
                return this.MessagesLogSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesLogSourceField, value) != true)) {
                    this.MessagesLogSourceField = value;
                    this.RaisePropertyChanged("MessagesLogSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessagesLogType {
            get {
                return this.MessagesLogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesLogTypeField, value) != true)) {
                    this.MessagesLogTypeField = value;
                    this.RaisePropertyChanged("MessagesLogType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fTurnaroundTimeResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fTurnaroundTimeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccessionNumberField;
        
        private string ArrivedField;
        
        private string CompletedField;
        
        private string ExamField;
        
        private string ExamDateField;
        
        private string HourToDisplayField;
        
        private System.Nullable<int> HourofDayField;
        
        private string LocationField;
        
        private System.Nullable<int> MinutesField;
        
        private string ModalityField;
        
        private string PatientField;
        
        private string ScheduledField;
        
        private string SignedField;
        
        private System.Nullable<char> StatField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNumber {
            get {
                return this.AccessionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNumberField, value) != true)) {
                    this.AccessionNumberField = value;
                    this.RaisePropertyChanged("AccessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arrived {
            get {
                return this.ArrivedField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivedField, value) != true)) {
                    this.ArrivedField = value;
                    this.RaisePropertyChanged("Arrived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletedField, value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exam {
            get {
                return this.ExamField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamField, value) != true)) {
                    this.ExamField = value;
                    this.RaisePropertyChanged("Exam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamDate {
            get {
                return this.ExamDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamDateField, value) != true)) {
                    this.ExamDateField = value;
                    this.RaisePropertyChanged("ExamDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HourToDisplay {
            get {
                return this.HourToDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.HourToDisplayField, value) != true)) {
                    this.HourToDisplayField = value;
                    this.RaisePropertyChanged("HourToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HourofDay {
            get {
                return this.HourofDayField;
            }
            set {
                if ((this.HourofDayField.Equals(value) != true)) {
                    this.HourofDayField = value;
                    this.RaisePropertyChanged("HourofDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scheduled {
            get {
                return this.ScheduledField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduledField, value) != true)) {
                    this.ScheduledField = value;
                    this.RaisePropertyChanged("Scheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signed {
            get {
                return this.SignedField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedField, value) != true)) {
                    this.SignedField = value;
                    this.RaisePropertyChanged("Signed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Stat {
            get {
                return this.StatField;
            }
            set {
                if ((this.StatField.Equals(value) != true)) {
                    this.StatField = value;
                    this.RaisePropertyChanged("Stat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fInterpretationTimeResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fInterpretationTimeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string HourToDisplayField;
        
        private System.Nullable<int> HourofDayField;
        
        private string LocationField;
        
        private System.Nullable<int> MinutesField;
        
        private string ModalityField;
        
        private System.Nullable<char> StatField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HourToDisplay {
            get {
                return this.HourToDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.HourToDisplayField, value) != true)) {
                    this.HourToDisplayField = value;
                    this.RaisePropertyChanged("HourToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HourofDay {
            get {
                return this.HourofDayField;
            }
            set {
                if ((this.HourofDayField.Equals(value) != true)) {
                    this.HourofDayField = value;
                    this.RaisePropertyChanged("HourofDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Stat {
            get {
                return this.StatField;
            }
            set {
                if ((this.StatField.Equals(value) != true)) {
                    this.StatField = value;
                    this.RaisePropertyChanged("Stat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fPatientLongWaitResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fPatientLongWaitResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> ExamsField;
        
        private System.Nullable<int> HourOfDayField;
        
        private string HourToDisplayField;
        
        private string LocationField;
        
        private string ModalityField;
        
        private System.Nullable<int> PercentWaitingField;
        
        private System.Nullable<char> StatField;
        
        private System.Nullable<int> WaitingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Exams {
            get {
                return this.ExamsField;
            }
            set {
                if ((this.ExamsField.Equals(value) != true)) {
                    this.ExamsField = value;
                    this.RaisePropertyChanged("Exams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HourOfDay {
            get {
                return this.HourOfDayField;
            }
            set {
                if ((this.HourOfDayField.Equals(value) != true)) {
                    this.HourOfDayField = value;
                    this.RaisePropertyChanged("HourOfDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HourToDisplay {
            get {
                return this.HourToDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.HourToDisplayField, value) != true)) {
                    this.HourToDisplayField = value;
                    this.RaisePropertyChanged("HourToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PercentWaiting {
            get {
                return this.PercentWaitingField;
            }
            set {
                if ((this.PercentWaitingField.Equals(value) != true)) {
                    this.PercentWaitingField = value;
                    this.RaisePropertyChanged("PercentWaiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Stat {
            get {
                return this.StatField;
            }
            set {
                if ((this.StatField.Equals(value) != true)) {
                    this.StatField = value;
                    this.RaisePropertyChanged("Stat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Waiting {
            get {
                return this.WaitingField;
            }
            set {
                if ((this.WaitingField.Equals(value) != true)) {
                    this.WaitingField = value;
                    this.RaisePropertyChanged("Waiting");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fPatientShortWaitResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fPatientShortWaitResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> ExamsField;
        
        private System.Nullable<int> HourOfDayField;
        
        private string HourToDisplayField;
        
        private string LocationField;
        
        private string ModalityField;
        
        private System.Nullable<int> PercentWaitingField;
        
        private System.Nullable<char> StatField;
        
        private System.Nullable<int> WaitingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Exams {
            get {
                return this.ExamsField;
            }
            set {
                if ((this.ExamsField.Equals(value) != true)) {
                    this.ExamsField = value;
                    this.RaisePropertyChanged("Exams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HourOfDay {
            get {
                return this.HourOfDayField;
            }
            set {
                if ((this.HourOfDayField.Equals(value) != true)) {
                    this.HourOfDayField = value;
                    this.RaisePropertyChanged("HourOfDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HourToDisplay {
            get {
                return this.HourToDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.HourToDisplayField, value) != true)) {
                    this.HourToDisplayField = value;
                    this.RaisePropertyChanged("HourToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PercentWaiting {
            get {
                return this.PercentWaitingField;
            }
            set {
                if ((this.PercentWaitingField.Equals(value) != true)) {
                    this.PercentWaitingField = value;
                    this.RaisePropertyChanged("PercentWaiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Stat {
            get {
                return this.StatField;
            }
            set {
                if ((this.StatField.Equals(value) != true)) {
                    this.StatField = value;
                    this.RaisePropertyChanged("Stat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Waiting {
            get {
                return this.WaitingField;
            }
            set {
                if ((this.WaitingField.Equals(value) != true)) {
                    this.WaitingField = value;
                    this.RaisePropertyChanged("Waiting");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fPatientWaitResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fPatientWaitResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string HourToDisplayField;
        
        private System.Nullable<int> HourofDayField;
        
        private string LocationField;
        
        private string ModalityField;
        
        private System.Nullable<char> StatField;
        
        private System.Nullable<int> WaitingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HourToDisplay {
            get {
                return this.HourToDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.HourToDisplayField, value) != true)) {
                    this.HourToDisplayField = value;
                    this.RaisePropertyChanged("HourToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HourofDay {
            get {
                return this.HourofDayField;
            }
            set {
                if ((this.HourofDayField.Equals(value) != true)) {
                    this.HourofDayField = value;
                    this.RaisePropertyChanged("HourofDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Stat {
            get {
                return this.StatField;
            }
            set {
                if ((this.StatField.Equals(value) != true)) {
                    this.StatField = value;
                    this.RaisePropertyChanged("Stat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Waiting {
            get {
                return this.WaitingField;
            }
            set {
                if ((this.WaitingField.Equals(value) != true)) {
                    this.WaitingField = value;
                    this.RaisePropertyChanged("Waiting");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fCompletedPerTechResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fCompletedPerTechResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClerkField;
        
        private System.Nullable<int> ExamTimeField;
        
        private string LocationField;
        
        private System.Nullable<int> StudiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Clerk {
            get {
                return this.ClerkField;
            }
            set {
                if ((object.ReferenceEquals(this.ClerkField, value) != true)) {
                    this.ClerkField = value;
                    this.RaisePropertyChanged("Clerk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExamTime {
            get {
                return this.ExamTimeField;
            }
            set {
                if ((this.ExamTimeField.Equals(value) != true)) {
                    this.ExamTimeField = value;
                    this.RaisePropertyChanged("ExamTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Studies {
            get {
                return this.StudiesField;
            }
            set {
                if ((this.StudiesField.Equals(value) != true)) {
                    this.StudiesField = value;
                    this.RaisePropertyChanged("Studies");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fRegisteredPatientsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fRegisteredPatientsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClerkField;
        
        private string LocationField;
        
        private System.Nullable<int> RegisteredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Clerk {
            get {
                return this.ClerkField;
            }
            set {
                if ((object.ReferenceEquals(this.ClerkField, value) != true)) {
                    this.ClerkField = value;
                    this.RaisePropertyChanged("Clerk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Registered {
            get {
                return this.RegisteredField;
            }
            set {
                if ((this.RegisteredField.Equals(value) != true)) {
                    this.RegisteredField = value;
                    this.RaisePropertyChanged("Registered");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fRegistrationTimeResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fRegistrationTimeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClerkField;
        
        private string LocationField;
        
        private System.Nullable<int> RegistrationTimeField;
        
        private System.Nullable<int> StudiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Clerk {
            get {
                return this.ClerkField;
            }
            set {
                if ((object.ReferenceEquals(this.ClerkField, value) != true)) {
                    this.ClerkField = value;
                    this.RaisePropertyChanged("Clerk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegistrationTime {
            get {
                return this.RegistrationTimeField;
            }
            set {
                if ((this.RegistrationTimeField.Equals(value) != true)) {
                    this.RegistrationTimeField = value;
                    this.RaisePropertyChanged("RegistrationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Studies {
            get {
                return this.StudiesField;
            }
            set {
                if ((this.StudiesField.Equals(value) != true)) {
                    this.StudiesField = value;
                    this.RaisePropertyChanged("Studies");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fFirstLastAppointmentResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fFirstLastAppointmentResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> FirstApptField;
        
        private System.Nullable<double> LastApptField;
        
        private string LocationField;
        
        private string ModalityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> FirstAppt {
            get {
                return this.FirstApptField;
            }
            set {
                if ((this.FirstApptField.Equals(value) != true)) {
                    this.FirstApptField = value;
                    this.RaisePropertyChanged("FirstAppt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> LastAppt {
            get {
                return this.LastApptField;
            }
            set {
                if ((this.LastApptField.Equals(value) != true)) {
                    this.LastApptField = value;
                    this.RaisePropertyChanged("LastAppt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fScheduledPatientsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fScheduledPatientsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CancelledField;
        
        private System.Nullable<int> CompletedField;
        
        private string LocationField;
        
        private string ModalityField;
        
        private System.Nullable<int> ScheduledField;
        
        private System.Nullable<int> SignedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Cancelled {
            get {
                return this.CancelledField;
            }
            set {
                if ((this.CancelledField.Equals(value) != true)) {
                    this.CancelledField = value;
                    this.RaisePropertyChanged("Cancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Scheduled {
            get {
                return this.ScheduledField;
            }
            set {
                if ((this.ScheduledField.Equals(value) != true)) {
                    this.ScheduledField = value;
                    this.RaisePropertyChanged("Scheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Signed {
            get {
                return this.SignedField;
            }
            set {
                if ((this.SignedField.Equals(value) != true)) {
                    this.SignedField = value;
                    this.RaisePropertyChanged("Signed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetOrdersPendingResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetOrdersPendingResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExFacilityField;
        
        private int IDField;
        
        private string ReasonFailedField;
        
        private System.Nullable<char> StatusField;
        
        private string hl7MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExFacility {
            get {
                return this.ExFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.ExFacilityField, value) != true)) {
                    this.ExFacilityField = value;
                    this.RaisePropertyChanged("ExFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonFailed {
            get {
                return this.ReasonFailedField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonFailedField, value) != true)) {
                    this.ReasonFailedField = value;
                    this.RaisePropertyChanged("ReasonFailed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hl7Message {
            get {
                return this.hl7MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.hl7MessageField, value) != true)) {
                    this.hl7MessageField = value;
                    this.RaisePropertyChanged("hl7Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListOrdersPendingResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListOrdersPendingResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExFacilityField;
        
        private int IDField;
        
        private string ReasonFailedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExFacility {
            get {
                return this.ExFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.ExFacilityField, value) != true)) {
                    this.ExFacilityField = value;
                    this.RaisePropertyChanged("ExFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonFailed {
            get {
                return this.ReasonFailedField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonFailedField, value) != true)) {
                    this.ReasonFailedField = value;
                    this.RaisePropertyChanged("ReasonFailed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetInterfaceXrefResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetInterfaceXrefResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExFacilityField;
        
        private string ExValueField;
        
        private string InValueField;
        
        private string ValueTypeField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExFacility {
            get {
                return this.ExFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.ExFacilityField, value) != true)) {
                    this.ExFacilityField = value;
                    this.RaisePropertyChanged("ExFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExValue {
            get {
                return this.ExValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExValueField, value) != true)) {
                    this.ExValueField = value;
                    this.RaisePropertyChanged("ExValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InValue {
            get {
                return this.InValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InValueField, value) != true)) {
                    this.InValueField = value;
                    this.RaisePropertyChanged("InValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListInterfaceXrefResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListInterfaceXrefResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExFacilityField;
        
        private string ExValueField;
        
        private string InValueField;
        
        private string ValueTypeField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExFacility {
            get {
                return this.ExFacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.ExFacilityField, value) != true)) {
                    this.ExFacilityField = value;
                    this.RaisePropertyChanged("ExFacility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExValue {
            get {
                return this.ExValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExValueField, value) != true)) {
                    this.ExValueField = value;
                    this.RaisePropertyChanged("ExValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InValue {
            get {
                return this.InValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InValueField, value) != true)) {
                    this.InValueField = value;
                    this.RaisePropertyChanged("InValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListInterfaceResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListInterfaceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string FacilityField;
        
        private int IDField;
        
        private System.Nullable<byte> InterfaceTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facility {
            get {
                return this.FacilityField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityField, value) != true)) {
                    this.FacilityField = value;
                    this.RaisePropertyChanged("Facility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> InterfaceType {
            get {
                return this.InterfaceTypeField;
            }
            set {
                if ((this.InterfaceTypeField.Equals(value) != true)) {
                    this.InterfaceTypeField = value;
                    this.RaisePropertyChanged("InterfaceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListPatientsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListPatientsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PatientField;
        
        private string PatientIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDField, value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListProceduresResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListProceduresResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string ExamField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exam {
            get {
                return this.ExamField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamField, value) != true)) {
                    this.ExamField = value;
                    this.RaisePropertyChanged("Exam");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListProvidersResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListProvidersResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CarrierIDField;
        
        private string ProviderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierID {
            get {
                return this.CarrierIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierIDField, value) != true)) {
                    this.CarrierIDField = value;
                    this.RaisePropertyChanged("CarrierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListReferrersResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListReferrersResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IDField;
        
        private string ReferrerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referrer {
            get {
                return this.ReferrerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferrerField, value) != true)) {
                    this.ReferrerField = value;
                    this.RaisePropertyChanged("Referrer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sMessagesSummaryResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sMessagesSummaryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private System.Nullable<int> ProcessedField;
        
        private System.Nullable<System.DateTime> UpdatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Processed {
            get {
                return this.ProcessedField;
            }
            set {
                if ((this.ProcessedField.Equals(value) != true)) {
                    this.ProcessedField = value;
                    this.RaisePropertyChanged("Processed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sPhyCoderTotalsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sPhyCoderTotalsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> AllCodedTodayField;
        
        private System.Nullable<int> AvailableToCodeField;
        
        private System.Nullable<int> ICodedTodayField;
        
        private System.Nullable<int> IPendingField;
        
        private System.Nullable<int> MissingDemographicsField;
        
        private System.Nullable<int> MissingOrderField;
        
        private System.Nullable<int> MissingReportField;
        
        private System.Nullable<int> PendingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AllCodedToday {
            get {
                return this.AllCodedTodayField;
            }
            set {
                if ((this.AllCodedTodayField.Equals(value) != true)) {
                    this.AllCodedTodayField = value;
                    this.RaisePropertyChanged("AllCodedToday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AvailableToCode {
            get {
                return this.AvailableToCodeField;
            }
            set {
                if ((this.AvailableToCodeField.Equals(value) != true)) {
                    this.AvailableToCodeField = value;
                    this.RaisePropertyChanged("AvailableToCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ICodedToday {
            get {
                return this.ICodedTodayField;
            }
            set {
                if ((this.ICodedTodayField.Equals(value) != true)) {
                    this.ICodedTodayField = value;
                    this.RaisePropertyChanged("ICodedToday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IPending {
            get {
                return this.IPendingField;
            }
            set {
                if ((this.IPendingField.Equals(value) != true)) {
                    this.IPendingField = value;
                    this.RaisePropertyChanged("IPending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MissingDemographics {
            get {
                return this.MissingDemographicsField;
            }
            set {
                if ((this.MissingDemographicsField.Equals(value) != true)) {
                    this.MissingDemographicsField = value;
                    this.RaisePropertyChanged("MissingDemographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MissingOrder {
            get {
                return this.MissingOrderField;
            }
            set {
                if ((this.MissingOrderField.Equals(value) != true)) {
                    this.MissingOrderField = value;
                    this.RaisePropertyChanged("MissingOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MissingReport {
            get {
                return this.MissingReportField;
            }
            set {
                if ((this.MissingReportField.Equals(value) != true)) {
                    this.MissingReportField = value;
                    this.RaisePropertyChanged("MissingReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Pending {
            get {
                return this.PendingField;
            }
            set {
                if ((this.PendingField.Equals(value) != true)) {
                    this.PendingField = value;
                    this.RaisePropertyChanged("Pending");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class Report : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AssignedDateField;
        
        private System.Nullable<long> AssignedToField;
        
        private string Charge1Field;
        
        private string Charge10Field;
        
        private string Charge11Field;
        
        private string Charge12Field;
        
        private string Charge13Field;
        
        private string Charge14Field;
        
        private string Charge15Field;
        
        private string Charge2Field;
        
        private string Charge3Field;
        
        private string Charge4Field;
        
        private string Charge5Field;
        
        private string Charge6Field;
        
        private string Charge7Field;
        
        private string Charge8Field;
        
        private string Charge9Field;
        
        private System.Nullable<bool> CheckForAfterHoursField;
        
        private System.Nullable<bool> CheckForPQRIField;
        
        private System.Nullable<bool> CheckForSameDayReportsField;
        
        private System.Nullable<long> CodedByField;
        
        private System.Nullable<System.DateTime> CodedDateField;
        
        private System.Nullable<System.DateTime> DictatedDateField;
        
        private string Dosage1Field;
        
        private string Dosage10Field;
        
        private string Dosage11Field;
        
        private string Dosage12Field;
        
        private string Dosage13Field;
        
        private string Dosage14Field;
        
        private string Dosage15Field;
        
        private string Dosage2Field;
        
        private string Dosage3Field;
        
        private string Dosage4Field;
        
        private string Dosage5Field;
        
        private string Dosage6Field;
        
        private string Dosage7Field;
        
        private string Dosage8Field;
        
        private string Dosage9Field;
        
        private string ExamNumberField;
        
        private string ICD1Field;
        
        private string ICD10Field;
        
        private string ICD11Field;
        
        private string ICD12Field;
        
        private string ICD13Field;
        
        private string ICD14Field;
        
        private string ICD15Field;
        
        private string ICD2Field;
        
        private string ICD3Field;
        
        private string ICD4Field;
        
        private string ICD5Field;
        
        private string ICD6Field;
        
        private string ICD7Field;
        
        private string ICD8Field;
        
        private string ICD9Field;
        
        private long IDField;
        
        private string LocationCodeField;
        
        private string ModalityField;
        
        private string Modifier1Field;
        
        private string Modifier10Field;
        
        private string Modifier11Field;
        
        private string Modifier12Field;
        
        private string Modifier13Field;
        
        private string Modifier14Field;
        
        private string Modifier15Field;
        
        private string Modifier2Field;
        
        private string Modifier3Field;
        
        private string Modifier4Field;
        
        private string Modifier5Field;
        
        private string Modifier6Field;
        
        private string Modifier7Field;
        
        private string Modifier8Field;
        
        private string Modifier9Field;
        
        private string NotesField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private System.Nullable<decimal> Price1Field;
        
        private System.Nullable<decimal> Price10Field;
        
        private System.Nullable<decimal> Price11Field;
        
        private System.Nullable<decimal> Price12Field;
        
        private System.Nullable<decimal> Price13Field;
        
        private System.Nullable<decimal> Price14Field;
        
        private System.Nullable<decimal> Price15Field;
        
        private System.Nullable<decimal> Price2Field;
        
        private System.Nullable<decimal> Price3Field;
        
        private System.Nullable<decimal> Price4Field;
        
        private System.Nullable<decimal> Price5Field;
        
        private System.Nullable<decimal> Price6Field;
        
        private System.Nullable<decimal> Price7Field;
        
        private System.Nullable<decimal> Price8Field;
        
        private System.Nullable<decimal> Price9Field;
        
        private System.Nullable<long> RadIDField;
        
        private string RadNameField;
        
        private System.Nullable<bool> RadReviewField;
        
        private string Report1Field;
        
        private System.Nullable<System.DateTime> SignedDateField;
        
        private System.Nullable<char> StatusField;
        
        private System.Nullable<int> TotalChargesField;
        
        private System.Nullable<double> TotalRVUField;
        
        private System.Nullable<int> Unit1Field;
        
        private System.Nullable<int> Unit10Field;
        
        private System.Nullable<int> Unit11Field;
        
        private System.Nullable<int> Unit12Field;
        
        private System.Nullable<int> Unit13Field;
        
        private System.Nullable<int> Unit14Field;
        
        private System.Nullable<int> Unit15Field;
        
        private System.Nullable<int> Unit2Field;
        
        private System.Nullable<int> Unit3Field;
        
        private System.Nullable<int> Unit4Field;
        
        private System.Nullable<int> Unit5Field;
        
        private System.Nullable<int> Unit6Field;
        
        private System.Nullable<int> Unit7Field;
        
        private System.Nullable<int> Unit8Field;
        
        private System.Nullable<int> Unit9Field;
        
        private string VisitNumberField;
        
        private string WorkstationIDField;
        
        private System.Nullable<char> hasDemographicsField;
        
        private System.Nullable<char> hasOrderField;
        
        private System.Nullable<char> verifiedDemographicsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.AssignedDateField;
            }
            set {
                if ((this.AssignedDateField.Equals(value) != true)) {
                    this.AssignedDateField = value;
                    this.RaisePropertyChanged("AssignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((this.AssignedToField.Equals(value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge1 {
            get {
                return this.Charge1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge1Field, value) != true)) {
                    this.Charge1Field = value;
                    this.RaisePropertyChanged("Charge1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge10 {
            get {
                return this.Charge10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge10Field, value) != true)) {
                    this.Charge10Field = value;
                    this.RaisePropertyChanged("Charge10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge11 {
            get {
                return this.Charge11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge11Field, value) != true)) {
                    this.Charge11Field = value;
                    this.RaisePropertyChanged("Charge11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge12 {
            get {
                return this.Charge12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge12Field, value) != true)) {
                    this.Charge12Field = value;
                    this.RaisePropertyChanged("Charge12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge13 {
            get {
                return this.Charge13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge13Field, value) != true)) {
                    this.Charge13Field = value;
                    this.RaisePropertyChanged("Charge13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge14 {
            get {
                return this.Charge14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge14Field, value) != true)) {
                    this.Charge14Field = value;
                    this.RaisePropertyChanged("Charge14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge15 {
            get {
                return this.Charge15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge15Field, value) != true)) {
                    this.Charge15Field = value;
                    this.RaisePropertyChanged("Charge15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge2 {
            get {
                return this.Charge2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge2Field, value) != true)) {
                    this.Charge2Field = value;
                    this.RaisePropertyChanged("Charge2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge3 {
            get {
                return this.Charge3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge3Field, value) != true)) {
                    this.Charge3Field = value;
                    this.RaisePropertyChanged("Charge3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge4 {
            get {
                return this.Charge4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge4Field, value) != true)) {
                    this.Charge4Field = value;
                    this.RaisePropertyChanged("Charge4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge5 {
            get {
                return this.Charge5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge5Field, value) != true)) {
                    this.Charge5Field = value;
                    this.RaisePropertyChanged("Charge5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge6 {
            get {
                return this.Charge6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge6Field, value) != true)) {
                    this.Charge6Field = value;
                    this.RaisePropertyChanged("Charge6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge7 {
            get {
                return this.Charge7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge7Field, value) != true)) {
                    this.Charge7Field = value;
                    this.RaisePropertyChanged("Charge7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge8 {
            get {
                return this.Charge8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge8Field, value) != true)) {
                    this.Charge8Field = value;
                    this.RaisePropertyChanged("Charge8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge9 {
            get {
                return this.Charge9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge9Field, value) != true)) {
                    this.Charge9Field = value;
                    this.RaisePropertyChanged("Charge9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForAfterHours {
            get {
                return this.CheckForAfterHoursField;
            }
            set {
                if ((this.CheckForAfterHoursField.Equals(value) != true)) {
                    this.CheckForAfterHoursField = value;
                    this.RaisePropertyChanged("CheckForAfterHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForPQRI {
            get {
                return this.CheckForPQRIField;
            }
            set {
                if ((this.CheckForPQRIField.Equals(value) != true)) {
                    this.CheckForPQRIField = value;
                    this.RaisePropertyChanged("CheckForPQRI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForSameDayReports {
            get {
                return this.CheckForSameDayReportsField;
            }
            set {
                if ((this.CheckForSameDayReportsField.Equals(value) != true)) {
                    this.CheckForSameDayReportsField = value;
                    this.RaisePropertyChanged("CheckForSameDayReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CodedBy {
            get {
                return this.CodedByField;
            }
            set {
                if ((this.CodedByField.Equals(value) != true)) {
                    this.CodedByField = value;
                    this.RaisePropertyChanged("CodedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CodedDate {
            get {
                return this.CodedDateField;
            }
            set {
                if ((this.CodedDateField.Equals(value) != true)) {
                    this.CodedDateField = value;
                    this.RaisePropertyChanged("CodedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DictatedDate {
            get {
                return this.DictatedDateField;
            }
            set {
                if ((this.DictatedDateField.Equals(value) != true)) {
                    this.DictatedDateField = value;
                    this.RaisePropertyChanged("DictatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage1 {
            get {
                return this.Dosage1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage1Field, value) != true)) {
                    this.Dosage1Field = value;
                    this.RaisePropertyChanged("Dosage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage10 {
            get {
                return this.Dosage10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage10Field, value) != true)) {
                    this.Dosage10Field = value;
                    this.RaisePropertyChanged("Dosage10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage11 {
            get {
                return this.Dosage11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage11Field, value) != true)) {
                    this.Dosage11Field = value;
                    this.RaisePropertyChanged("Dosage11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage12 {
            get {
                return this.Dosage12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage12Field, value) != true)) {
                    this.Dosage12Field = value;
                    this.RaisePropertyChanged("Dosage12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage13 {
            get {
                return this.Dosage13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage13Field, value) != true)) {
                    this.Dosage13Field = value;
                    this.RaisePropertyChanged("Dosage13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage14 {
            get {
                return this.Dosage14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage14Field, value) != true)) {
                    this.Dosage14Field = value;
                    this.RaisePropertyChanged("Dosage14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage15 {
            get {
                return this.Dosage15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage15Field, value) != true)) {
                    this.Dosage15Field = value;
                    this.RaisePropertyChanged("Dosage15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage2 {
            get {
                return this.Dosage2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage2Field, value) != true)) {
                    this.Dosage2Field = value;
                    this.RaisePropertyChanged("Dosage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage3 {
            get {
                return this.Dosage3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage3Field, value) != true)) {
                    this.Dosage3Field = value;
                    this.RaisePropertyChanged("Dosage3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage4 {
            get {
                return this.Dosage4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage4Field, value) != true)) {
                    this.Dosage4Field = value;
                    this.RaisePropertyChanged("Dosage4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage5 {
            get {
                return this.Dosage5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage5Field, value) != true)) {
                    this.Dosage5Field = value;
                    this.RaisePropertyChanged("Dosage5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage6 {
            get {
                return this.Dosage6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage6Field, value) != true)) {
                    this.Dosage6Field = value;
                    this.RaisePropertyChanged("Dosage6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage7 {
            get {
                return this.Dosage7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage7Field, value) != true)) {
                    this.Dosage7Field = value;
                    this.RaisePropertyChanged("Dosage7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage8 {
            get {
                return this.Dosage8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage8Field, value) != true)) {
                    this.Dosage8Field = value;
                    this.RaisePropertyChanged("Dosage8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage9 {
            get {
                return this.Dosage9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage9Field, value) != true)) {
                    this.Dosage9Field = value;
                    this.RaisePropertyChanged("Dosage9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD1 {
            get {
                return this.ICD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD1Field, value) != true)) {
                    this.ICD1Field = value;
                    this.RaisePropertyChanged("ICD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD10 {
            get {
                return this.ICD10Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD10Field, value) != true)) {
                    this.ICD10Field = value;
                    this.RaisePropertyChanged("ICD10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD11 {
            get {
                return this.ICD11Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD11Field, value) != true)) {
                    this.ICD11Field = value;
                    this.RaisePropertyChanged("ICD11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD12 {
            get {
                return this.ICD12Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD12Field, value) != true)) {
                    this.ICD12Field = value;
                    this.RaisePropertyChanged("ICD12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD13 {
            get {
                return this.ICD13Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD13Field, value) != true)) {
                    this.ICD13Field = value;
                    this.RaisePropertyChanged("ICD13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD14 {
            get {
                return this.ICD14Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD14Field, value) != true)) {
                    this.ICD14Field = value;
                    this.RaisePropertyChanged("ICD14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD15 {
            get {
                return this.ICD15Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD15Field, value) != true)) {
                    this.ICD15Field = value;
                    this.RaisePropertyChanged("ICD15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD2 {
            get {
                return this.ICD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD2Field, value) != true)) {
                    this.ICD2Field = value;
                    this.RaisePropertyChanged("ICD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD3 {
            get {
                return this.ICD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD3Field, value) != true)) {
                    this.ICD3Field = value;
                    this.RaisePropertyChanged("ICD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD4 {
            get {
                return this.ICD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD4Field, value) != true)) {
                    this.ICD4Field = value;
                    this.RaisePropertyChanged("ICD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD5 {
            get {
                return this.ICD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD5Field, value) != true)) {
                    this.ICD5Field = value;
                    this.RaisePropertyChanged("ICD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD6 {
            get {
                return this.ICD6Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD6Field, value) != true)) {
                    this.ICD6Field = value;
                    this.RaisePropertyChanged("ICD6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD7 {
            get {
                return this.ICD7Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD7Field, value) != true)) {
                    this.ICD7Field = value;
                    this.RaisePropertyChanged("ICD7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD8 {
            get {
                return this.ICD8Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD8Field, value) != true)) {
                    this.ICD8Field = value;
                    this.RaisePropertyChanged("ICD8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD9 {
            get {
                return this.ICD9Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9Field, value) != true)) {
                    this.ICD9Field = value;
                    this.RaisePropertyChanged("ICD9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier1 {
            get {
                return this.Modifier1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier1Field, value) != true)) {
                    this.Modifier1Field = value;
                    this.RaisePropertyChanged("Modifier1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier10 {
            get {
                return this.Modifier10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier10Field, value) != true)) {
                    this.Modifier10Field = value;
                    this.RaisePropertyChanged("Modifier10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier11 {
            get {
                return this.Modifier11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier11Field, value) != true)) {
                    this.Modifier11Field = value;
                    this.RaisePropertyChanged("Modifier11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier12 {
            get {
                return this.Modifier12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier12Field, value) != true)) {
                    this.Modifier12Field = value;
                    this.RaisePropertyChanged("Modifier12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier13 {
            get {
                return this.Modifier13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier13Field, value) != true)) {
                    this.Modifier13Field = value;
                    this.RaisePropertyChanged("Modifier13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier14 {
            get {
                return this.Modifier14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier14Field, value) != true)) {
                    this.Modifier14Field = value;
                    this.RaisePropertyChanged("Modifier14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier15 {
            get {
                return this.Modifier15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier15Field, value) != true)) {
                    this.Modifier15Field = value;
                    this.RaisePropertyChanged("Modifier15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier2 {
            get {
                return this.Modifier2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier2Field, value) != true)) {
                    this.Modifier2Field = value;
                    this.RaisePropertyChanged("Modifier2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier3 {
            get {
                return this.Modifier3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier3Field, value) != true)) {
                    this.Modifier3Field = value;
                    this.RaisePropertyChanged("Modifier3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier4 {
            get {
                return this.Modifier4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier4Field, value) != true)) {
                    this.Modifier4Field = value;
                    this.RaisePropertyChanged("Modifier4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier5 {
            get {
                return this.Modifier5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier5Field, value) != true)) {
                    this.Modifier5Field = value;
                    this.RaisePropertyChanged("Modifier5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier6 {
            get {
                return this.Modifier6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier6Field, value) != true)) {
                    this.Modifier6Field = value;
                    this.RaisePropertyChanged("Modifier6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier7 {
            get {
                return this.Modifier7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier7Field, value) != true)) {
                    this.Modifier7Field = value;
                    this.RaisePropertyChanged("Modifier7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier8 {
            get {
                return this.Modifier8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier8Field, value) != true)) {
                    this.Modifier8Field = value;
                    this.RaisePropertyChanged("Modifier8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier9 {
            get {
                return this.Modifier9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier9Field, value) != true)) {
                    this.Modifier9Field = value;
                    this.RaisePropertyChanged("Modifier9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price1 {
            get {
                return this.Price1Field;
            }
            set {
                if ((this.Price1Field.Equals(value) != true)) {
                    this.Price1Field = value;
                    this.RaisePropertyChanged("Price1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price10 {
            get {
                return this.Price10Field;
            }
            set {
                if ((this.Price10Field.Equals(value) != true)) {
                    this.Price10Field = value;
                    this.RaisePropertyChanged("Price10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price11 {
            get {
                return this.Price11Field;
            }
            set {
                if ((this.Price11Field.Equals(value) != true)) {
                    this.Price11Field = value;
                    this.RaisePropertyChanged("Price11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price12 {
            get {
                return this.Price12Field;
            }
            set {
                if ((this.Price12Field.Equals(value) != true)) {
                    this.Price12Field = value;
                    this.RaisePropertyChanged("Price12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price13 {
            get {
                return this.Price13Field;
            }
            set {
                if ((this.Price13Field.Equals(value) != true)) {
                    this.Price13Field = value;
                    this.RaisePropertyChanged("Price13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price14 {
            get {
                return this.Price14Field;
            }
            set {
                if ((this.Price14Field.Equals(value) != true)) {
                    this.Price14Field = value;
                    this.RaisePropertyChanged("Price14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price15 {
            get {
                return this.Price15Field;
            }
            set {
                if ((this.Price15Field.Equals(value) != true)) {
                    this.Price15Field = value;
                    this.RaisePropertyChanged("Price15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price2 {
            get {
                return this.Price2Field;
            }
            set {
                if ((this.Price2Field.Equals(value) != true)) {
                    this.Price2Field = value;
                    this.RaisePropertyChanged("Price2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price3 {
            get {
                return this.Price3Field;
            }
            set {
                if ((this.Price3Field.Equals(value) != true)) {
                    this.Price3Field = value;
                    this.RaisePropertyChanged("Price3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price4 {
            get {
                return this.Price4Field;
            }
            set {
                if ((this.Price4Field.Equals(value) != true)) {
                    this.Price4Field = value;
                    this.RaisePropertyChanged("Price4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price5 {
            get {
                return this.Price5Field;
            }
            set {
                if ((this.Price5Field.Equals(value) != true)) {
                    this.Price5Field = value;
                    this.RaisePropertyChanged("Price5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price6 {
            get {
                return this.Price6Field;
            }
            set {
                if ((this.Price6Field.Equals(value) != true)) {
                    this.Price6Field = value;
                    this.RaisePropertyChanged("Price6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price7 {
            get {
                return this.Price7Field;
            }
            set {
                if ((this.Price7Field.Equals(value) != true)) {
                    this.Price7Field = value;
                    this.RaisePropertyChanged("Price7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price8 {
            get {
                return this.Price8Field;
            }
            set {
                if ((this.Price8Field.Equals(value) != true)) {
                    this.Price8Field = value;
                    this.RaisePropertyChanged("Price8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price9 {
            get {
                return this.Price9Field;
            }
            set {
                if ((this.Price9Field.Equals(value) != true)) {
                    this.Price9Field = value;
                    this.RaisePropertyChanged("Price9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RadID {
            get {
                return this.RadIDField;
            }
            set {
                if ((this.RadIDField.Equals(value) != true)) {
                    this.RadIDField = value;
                    this.RaisePropertyChanged("RadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RadName {
            get {
                return this.RadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RadNameField, value) != true)) {
                    this.RadNameField = value;
                    this.RaisePropertyChanged("RadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RadReview {
            get {
                return this.RadReviewField;
            }
            set {
                if ((this.RadReviewField.Equals(value) != true)) {
                    this.RadReviewField = value;
                    this.RaisePropertyChanged("RadReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Report1 {
            get {
                return this.Report1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Report1Field, value) != true)) {
                    this.Report1Field = value;
                    this.RaisePropertyChanged("Report1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCharges {
            get {
                return this.TotalChargesField;
            }
            set {
                if ((this.TotalChargesField.Equals(value) != true)) {
                    this.TotalChargesField = value;
                    this.RaisePropertyChanged("TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TotalRVU {
            get {
                return this.TotalRVUField;
            }
            set {
                if ((this.TotalRVUField.Equals(value) != true)) {
                    this.TotalRVUField = value;
                    this.RaisePropertyChanged("TotalRVU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit1 {
            get {
                return this.Unit1Field;
            }
            set {
                if ((this.Unit1Field.Equals(value) != true)) {
                    this.Unit1Field = value;
                    this.RaisePropertyChanged("Unit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit10 {
            get {
                return this.Unit10Field;
            }
            set {
                if ((this.Unit10Field.Equals(value) != true)) {
                    this.Unit10Field = value;
                    this.RaisePropertyChanged("Unit10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit11 {
            get {
                return this.Unit11Field;
            }
            set {
                if ((this.Unit11Field.Equals(value) != true)) {
                    this.Unit11Field = value;
                    this.RaisePropertyChanged("Unit11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit12 {
            get {
                return this.Unit12Field;
            }
            set {
                if ((this.Unit12Field.Equals(value) != true)) {
                    this.Unit12Field = value;
                    this.RaisePropertyChanged("Unit12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit13 {
            get {
                return this.Unit13Field;
            }
            set {
                if ((this.Unit13Field.Equals(value) != true)) {
                    this.Unit13Field = value;
                    this.RaisePropertyChanged("Unit13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit14 {
            get {
                return this.Unit14Field;
            }
            set {
                if ((this.Unit14Field.Equals(value) != true)) {
                    this.Unit14Field = value;
                    this.RaisePropertyChanged("Unit14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit15 {
            get {
                return this.Unit15Field;
            }
            set {
                if ((this.Unit15Field.Equals(value) != true)) {
                    this.Unit15Field = value;
                    this.RaisePropertyChanged("Unit15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit2 {
            get {
                return this.Unit2Field;
            }
            set {
                if ((this.Unit2Field.Equals(value) != true)) {
                    this.Unit2Field = value;
                    this.RaisePropertyChanged("Unit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit3 {
            get {
                return this.Unit3Field;
            }
            set {
                if ((this.Unit3Field.Equals(value) != true)) {
                    this.Unit3Field = value;
                    this.RaisePropertyChanged("Unit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit4 {
            get {
                return this.Unit4Field;
            }
            set {
                if ((this.Unit4Field.Equals(value) != true)) {
                    this.Unit4Field = value;
                    this.RaisePropertyChanged("Unit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit5 {
            get {
                return this.Unit5Field;
            }
            set {
                if ((this.Unit5Field.Equals(value) != true)) {
                    this.Unit5Field = value;
                    this.RaisePropertyChanged("Unit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit6 {
            get {
                return this.Unit6Field;
            }
            set {
                if ((this.Unit6Field.Equals(value) != true)) {
                    this.Unit6Field = value;
                    this.RaisePropertyChanged("Unit6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit7 {
            get {
                return this.Unit7Field;
            }
            set {
                if ((this.Unit7Field.Equals(value) != true)) {
                    this.Unit7Field = value;
                    this.RaisePropertyChanged("Unit7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit8 {
            get {
                return this.Unit8Field;
            }
            set {
                if ((this.Unit8Field.Equals(value) != true)) {
                    this.Unit8Field = value;
                    this.RaisePropertyChanged("Unit8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit9 {
            get {
                return this.Unit9Field;
            }
            set {
                if ((this.Unit9Field.Equals(value) != true)) {
                    this.Unit9Field = value;
                    this.RaisePropertyChanged("Unit9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkstationID {
            get {
                return this.WorkstationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstationIDField, value) != true)) {
                    this.WorkstationIDField = value;
                    this.RaisePropertyChanged("WorkstationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasDemographics {
            get {
                return this.hasDemographicsField;
            }
            set {
                if ((this.hasDemographicsField.Equals(value) != true)) {
                    this.hasDemographicsField = value;
                    this.RaisePropertyChanged("hasDemographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasOrder {
            get {
                return this.hasOrderField;
            }
            set {
                if ((this.hasOrderField.Equals(value) != true)) {
                    this.hasOrderField = value;
                    this.RaisePropertyChanged("hasOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> verifiedDemographics {
            get {
                return this.verifiedDemographicsField;
            }
            set {
                if ((this.verifiedDemographicsField.Equals(value) != true)) {
                    this.verifiedDemographicsField = value;
                    this.RaisePropertyChanged("verifiedDemographics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class Order : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExamNumberField;
        
        private string HL7MessageField;
        
        private long IDField;
        
        private string LocationCodeField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string OriginalExamNumberField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private string ProcedureCodeField;
        
        private string ProcedureNameField;
        
        private System.Nullable<char> StatusField;
        
        private string Status1Field;
        
        private string Status2Field;
        
        private string VisitNumberField;
        
        private System.Nullable<char> hasReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HL7Message {
            get {
                return this.HL7MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.HL7MessageField, value) != true)) {
                    this.HL7MessageField = value;
                    this.RaisePropertyChanged("HL7Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalExamNumber {
            get {
                return this.OriginalExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalExamNumberField, value) != true)) {
                    this.OriginalExamNumberField = value;
                    this.RaisePropertyChanged("OriginalExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCode {
            get {
                return this.ProcedureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeField, value) != true)) {
                    this.ProcedureCodeField = value;
                    this.RaisePropertyChanged("ProcedureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureName {
            get {
                return this.ProcedureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureNameField, value) != true)) {
                    this.ProcedureNameField = value;
                    this.RaisePropertyChanged("ProcedureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status1 {
            get {
                return this.Status1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Status1Field, value) != true)) {
                    this.Status1Field = value;
                    this.RaisePropertyChanged("Status1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status2 {
            get {
                return this.Status2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Status2Field, value) != true)) {
                    this.Status2Field = value;
                    this.RaisePropertyChanged("Status2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasReport {
            get {
                return this.hasReportField;
            }
            set {
                if ((this.hasReportField.Equals(value) != true)) {
                    this.hasReportField = value;
                    this.RaisePropertyChanged("hasReport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetDemographicsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetDemographicsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AdmitDateField;
        
        private System.Nullable<System.DateTime> DOBField;
        
        private System.Nullable<char> GovernmentalCarrierField;
        
        private long IDField;
        
        private string Insurance1Field;
        
        private string Insurance2Field;
        
        private string Insurance3Field;
        
        private string LocationCodeField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private string PreAuthorizationField;
        
        private System.Nullable<char> StatusField;
        
        private System.Nullable<bool> VIPField;
        
        private string VisitNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AdmitDate {
            get {
                return this.AdmitDateField;
            }
            set {
                if ((this.AdmitDateField.Equals(value) != true)) {
                    this.AdmitDateField = value;
                    this.RaisePropertyChanged("AdmitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> GovernmentalCarrier {
            get {
                return this.GovernmentalCarrierField;
            }
            set {
                if ((this.GovernmentalCarrierField.Equals(value) != true)) {
                    this.GovernmentalCarrierField = value;
                    this.RaisePropertyChanged("GovernmentalCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insurance1 {
            get {
                return this.Insurance1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Insurance1Field, value) != true)) {
                    this.Insurance1Field = value;
                    this.RaisePropertyChanged("Insurance1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insurance2 {
            get {
                return this.Insurance2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Insurance2Field, value) != true)) {
                    this.Insurance2Field = value;
                    this.RaisePropertyChanged("Insurance2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insurance3 {
            get {
                return this.Insurance3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Insurance3Field, value) != true)) {
                    this.Insurance3Field = value;
                    this.RaisePropertyChanged("Insurance3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreAuthorization {
            get {
                return this.PreAuthorizationField;
            }
            set {
                if ((object.ReferenceEquals(this.PreAuthorizationField, value) != true)) {
                    this.PreAuthorizationField = value;
                    this.RaisePropertyChanged("PreAuthorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VIP {
            get {
                return this.VIPField;
            }
            set {
                if ((this.VIPField.Equals(value) != true)) {
                    this.VIPField = value;
                    this.RaisePropertyChanged("VIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetOrdersResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetOrdersResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExamNumberField;
        
        private long IDField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string OriginalExamNumberField;
        
        private string ProcedureNameField;
        
        private System.Nullable<char> StatusField;
        
        private string Status1Field;
        
        private string Status2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalExamNumber {
            get {
                return this.OriginalExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalExamNumberField, value) != true)) {
                    this.OriginalExamNumberField = value;
                    this.RaisePropertyChanged("OriginalExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureName {
            get {
                return this.ProcedureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureNameField, value) != true)) {
                    this.ProcedureNameField = value;
                    this.RaisePropertyChanged("ProcedureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status1 {
            get {
                return this.Status1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Status1Field, value) != true)) {
                    this.Status1Field = value;
                    this.RaisePropertyChanged("Status1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status2 {
            get {
                return this.Status2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Status2Field, value) != true)) {
                    this.Status2Field = value;
                    this.RaisePropertyChanged("Status2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetReportResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetReportResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AssignedDateField;
        
        private System.Nullable<long> AssignedToField;
        
        private string Charge1Field;
        
        private string Charge10Field;
        
        private string Charge11Field;
        
        private string Charge12Field;
        
        private string Charge13Field;
        
        private string Charge14Field;
        
        private string Charge15Field;
        
        private string Charge2Field;
        
        private string Charge3Field;
        
        private string Charge4Field;
        
        private string Charge5Field;
        
        private string Charge6Field;
        
        private string Charge7Field;
        
        private string Charge8Field;
        
        private string Charge9Field;
        
        private System.Nullable<bool> CheckForAfterHoursField;
        
        private System.Nullable<bool> CheckForPQRIField;
        
        private System.Nullable<bool> CheckForSameDayReportsField;
        
        private System.Nullable<long> CodedByField;
        
        private System.Nullable<System.DateTime> CodedDateField;
        
        private System.Nullable<System.DateTime> DictatedDateField;
        
        private string Dosage1Field;
        
        private string Dosage10Field;
        
        private string Dosage11Field;
        
        private string Dosage12Field;
        
        private string Dosage13Field;
        
        private string Dosage14Field;
        
        private string Dosage15Field;
        
        private string Dosage2Field;
        
        private string Dosage3Field;
        
        private string Dosage4Field;
        
        private string Dosage5Field;
        
        private string Dosage6Field;
        
        private string Dosage7Field;
        
        private string Dosage8Field;
        
        private string Dosage9Field;
        
        private string ExamNumberField;
        
        private string ICD1Field;
        
        private string ICD10Field;
        
        private string ICD11Field;
        
        private string ICD12Field;
        
        private string ICD13Field;
        
        private string ICD14Field;
        
        private string ICD15Field;
        
        private string ICD2Field;
        
        private string ICD3Field;
        
        private string ICD4Field;
        
        private string ICD5Field;
        
        private string ICD6Field;
        
        private string ICD7Field;
        
        private string ICD8Field;
        
        private string ICD9Field;
        
        private long IDField;
        
        private string LocationCodeField;
        
        private string ModalityField;
        
        private string Modifier1Field;
        
        private string Modifier10Field;
        
        private string Modifier11Field;
        
        private string Modifier12Field;
        
        private string Modifier13Field;
        
        private string Modifier14Field;
        
        private string Modifier15Field;
        
        private string Modifier2Field;
        
        private string Modifier3Field;
        
        private string Modifier4Field;
        
        private string Modifier5Field;
        
        private string Modifier6Field;
        
        private string Modifier7Field;
        
        private string Modifier8Field;
        
        private string Modifier9Field;
        
        private string NotesField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private System.Nullable<decimal> Price1Field;
        
        private System.Nullable<decimal> Price10Field;
        
        private System.Nullable<decimal> Price11Field;
        
        private System.Nullable<decimal> Price12Field;
        
        private System.Nullable<decimal> Price13Field;
        
        private System.Nullable<decimal> Price14Field;
        
        private System.Nullable<decimal> Price15Field;
        
        private System.Nullable<decimal> Price2Field;
        
        private System.Nullable<decimal> Price3Field;
        
        private System.Nullable<decimal> Price4Field;
        
        private System.Nullable<decimal> Price5Field;
        
        private System.Nullable<decimal> Price6Field;
        
        private System.Nullable<decimal> Price7Field;
        
        private System.Nullable<decimal> Price8Field;
        
        private System.Nullable<decimal> Price9Field;
        
        private System.Nullable<long> RadIDField;
        
        private string RadNameField;
        
        private System.Nullable<bool> RadReviewField;
        
        private string ReportField;
        
        private System.Nullable<System.DateTime> SignedDateField;
        
        private System.Nullable<char> StatusField;
        
        private System.Nullable<int> TotalChargesField;
        
        private System.Nullable<double> TotalRVUField;
        
        private System.Nullable<int> Unit1Field;
        
        private System.Nullable<int> Unit10Field;
        
        private System.Nullable<int> Unit11Field;
        
        private System.Nullable<int> Unit12Field;
        
        private System.Nullable<int> Unit13Field;
        
        private System.Nullable<int> Unit14Field;
        
        private System.Nullable<int> Unit15Field;
        
        private System.Nullable<int> Unit2Field;
        
        private System.Nullable<int> Unit3Field;
        
        private System.Nullable<int> Unit4Field;
        
        private System.Nullable<int> Unit5Field;
        
        private System.Nullable<int> Unit6Field;
        
        private System.Nullable<int> Unit7Field;
        
        private System.Nullable<int> Unit8Field;
        
        private System.Nullable<int> Unit9Field;
        
        private string VisitNumberField;
        
        private string WorkstationIDField;
        
        private System.Nullable<char> hasDemographicsField;
        
        private System.Nullable<char> hasOrderField;
        
        private System.Nullable<char> verifiedDemographicsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.AssignedDateField;
            }
            set {
                if ((this.AssignedDateField.Equals(value) != true)) {
                    this.AssignedDateField = value;
                    this.RaisePropertyChanged("AssignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((this.AssignedToField.Equals(value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge1 {
            get {
                return this.Charge1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge1Field, value) != true)) {
                    this.Charge1Field = value;
                    this.RaisePropertyChanged("Charge1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge10 {
            get {
                return this.Charge10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge10Field, value) != true)) {
                    this.Charge10Field = value;
                    this.RaisePropertyChanged("Charge10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge11 {
            get {
                return this.Charge11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge11Field, value) != true)) {
                    this.Charge11Field = value;
                    this.RaisePropertyChanged("Charge11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge12 {
            get {
                return this.Charge12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge12Field, value) != true)) {
                    this.Charge12Field = value;
                    this.RaisePropertyChanged("Charge12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge13 {
            get {
                return this.Charge13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge13Field, value) != true)) {
                    this.Charge13Field = value;
                    this.RaisePropertyChanged("Charge13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge14 {
            get {
                return this.Charge14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge14Field, value) != true)) {
                    this.Charge14Field = value;
                    this.RaisePropertyChanged("Charge14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge15 {
            get {
                return this.Charge15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge15Field, value) != true)) {
                    this.Charge15Field = value;
                    this.RaisePropertyChanged("Charge15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge2 {
            get {
                return this.Charge2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge2Field, value) != true)) {
                    this.Charge2Field = value;
                    this.RaisePropertyChanged("Charge2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge3 {
            get {
                return this.Charge3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge3Field, value) != true)) {
                    this.Charge3Field = value;
                    this.RaisePropertyChanged("Charge3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge4 {
            get {
                return this.Charge4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge4Field, value) != true)) {
                    this.Charge4Field = value;
                    this.RaisePropertyChanged("Charge4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge5 {
            get {
                return this.Charge5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge5Field, value) != true)) {
                    this.Charge5Field = value;
                    this.RaisePropertyChanged("Charge5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge6 {
            get {
                return this.Charge6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge6Field, value) != true)) {
                    this.Charge6Field = value;
                    this.RaisePropertyChanged("Charge6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge7 {
            get {
                return this.Charge7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge7Field, value) != true)) {
                    this.Charge7Field = value;
                    this.RaisePropertyChanged("Charge7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge8 {
            get {
                return this.Charge8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge8Field, value) != true)) {
                    this.Charge8Field = value;
                    this.RaisePropertyChanged("Charge8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge9 {
            get {
                return this.Charge9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge9Field, value) != true)) {
                    this.Charge9Field = value;
                    this.RaisePropertyChanged("Charge9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForAfterHours {
            get {
                return this.CheckForAfterHoursField;
            }
            set {
                if ((this.CheckForAfterHoursField.Equals(value) != true)) {
                    this.CheckForAfterHoursField = value;
                    this.RaisePropertyChanged("CheckForAfterHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForPQRI {
            get {
                return this.CheckForPQRIField;
            }
            set {
                if ((this.CheckForPQRIField.Equals(value) != true)) {
                    this.CheckForPQRIField = value;
                    this.RaisePropertyChanged("CheckForPQRI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForSameDayReports {
            get {
                return this.CheckForSameDayReportsField;
            }
            set {
                if ((this.CheckForSameDayReportsField.Equals(value) != true)) {
                    this.CheckForSameDayReportsField = value;
                    this.RaisePropertyChanged("CheckForSameDayReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CodedBy {
            get {
                return this.CodedByField;
            }
            set {
                if ((this.CodedByField.Equals(value) != true)) {
                    this.CodedByField = value;
                    this.RaisePropertyChanged("CodedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CodedDate {
            get {
                return this.CodedDateField;
            }
            set {
                if ((this.CodedDateField.Equals(value) != true)) {
                    this.CodedDateField = value;
                    this.RaisePropertyChanged("CodedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DictatedDate {
            get {
                return this.DictatedDateField;
            }
            set {
                if ((this.DictatedDateField.Equals(value) != true)) {
                    this.DictatedDateField = value;
                    this.RaisePropertyChanged("DictatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage1 {
            get {
                return this.Dosage1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage1Field, value) != true)) {
                    this.Dosage1Field = value;
                    this.RaisePropertyChanged("Dosage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage10 {
            get {
                return this.Dosage10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage10Field, value) != true)) {
                    this.Dosage10Field = value;
                    this.RaisePropertyChanged("Dosage10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage11 {
            get {
                return this.Dosage11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage11Field, value) != true)) {
                    this.Dosage11Field = value;
                    this.RaisePropertyChanged("Dosage11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage12 {
            get {
                return this.Dosage12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage12Field, value) != true)) {
                    this.Dosage12Field = value;
                    this.RaisePropertyChanged("Dosage12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage13 {
            get {
                return this.Dosage13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage13Field, value) != true)) {
                    this.Dosage13Field = value;
                    this.RaisePropertyChanged("Dosage13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage14 {
            get {
                return this.Dosage14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage14Field, value) != true)) {
                    this.Dosage14Field = value;
                    this.RaisePropertyChanged("Dosage14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage15 {
            get {
                return this.Dosage15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage15Field, value) != true)) {
                    this.Dosage15Field = value;
                    this.RaisePropertyChanged("Dosage15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage2 {
            get {
                return this.Dosage2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage2Field, value) != true)) {
                    this.Dosage2Field = value;
                    this.RaisePropertyChanged("Dosage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage3 {
            get {
                return this.Dosage3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage3Field, value) != true)) {
                    this.Dosage3Field = value;
                    this.RaisePropertyChanged("Dosage3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage4 {
            get {
                return this.Dosage4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage4Field, value) != true)) {
                    this.Dosage4Field = value;
                    this.RaisePropertyChanged("Dosage4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage5 {
            get {
                return this.Dosage5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage5Field, value) != true)) {
                    this.Dosage5Field = value;
                    this.RaisePropertyChanged("Dosage5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage6 {
            get {
                return this.Dosage6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage6Field, value) != true)) {
                    this.Dosage6Field = value;
                    this.RaisePropertyChanged("Dosage6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage7 {
            get {
                return this.Dosage7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage7Field, value) != true)) {
                    this.Dosage7Field = value;
                    this.RaisePropertyChanged("Dosage7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage8 {
            get {
                return this.Dosage8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage8Field, value) != true)) {
                    this.Dosage8Field = value;
                    this.RaisePropertyChanged("Dosage8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage9 {
            get {
                return this.Dosage9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage9Field, value) != true)) {
                    this.Dosage9Field = value;
                    this.RaisePropertyChanged("Dosage9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD1 {
            get {
                return this.ICD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD1Field, value) != true)) {
                    this.ICD1Field = value;
                    this.RaisePropertyChanged("ICD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD10 {
            get {
                return this.ICD10Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD10Field, value) != true)) {
                    this.ICD10Field = value;
                    this.RaisePropertyChanged("ICD10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD11 {
            get {
                return this.ICD11Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD11Field, value) != true)) {
                    this.ICD11Field = value;
                    this.RaisePropertyChanged("ICD11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD12 {
            get {
                return this.ICD12Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD12Field, value) != true)) {
                    this.ICD12Field = value;
                    this.RaisePropertyChanged("ICD12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD13 {
            get {
                return this.ICD13Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD13Field, value) != true)) {
                    this.ICD13Field = value;
                    this.RaisePropertyChanged("ICD13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD14 {
            get {
                return this.ICD14Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD14Field, value) != true)) {
                    this.ICD14Field = value;
                    this.RaisePropertyChanged("ICD14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD15 {
            get {
                return this.ICD15Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD15Field, value) != true)) {
                    this.ICD15Field = value;
                    this.RaisePropertyChanged("ICD15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD2 {
            get {
                return this.ICD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD2Field, value) != true)) {
                    this.ICD2Field = value;
                    this.RaisePropertyChanged("ICD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD3 {
            get {
                return this.ICD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD3Field, value) != true)) {
                    this.ICD3Field = value;
                    this.RaisePropertyChanged("ICD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD4 {
            get {
                return this.ICD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD4Field, value) != true)) {
                    this.ICD4Field = value;
                    this.RaisePropertyChanged("ICD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD5 {
            get {
                return this.ICD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD5Field, value) != true)) {
                    this.ICD5Field = value;
                    this.RaisePropertyChanged("ICD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD6 {
            get {
                return this.ICD6Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD6Field, value) != true)) {
                    this.ICD6Field = value;
                    this.RaisePropertyChanged("ICD6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD7 {
            get {
                return this.ICD7Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD7Field, value) != true)) {
                    this.ICD7Field = value;
                    this.RaisePropertyChanged("ICD7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD8 {
            get {
                return this.ICD8Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD8Field, value) != true)) {
                    this.ICD8Field = value;
                    this.RaisePropertyChanged("ICD8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD9 {
            get {
                return this.ICD9Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9Field, value) != true)) {
                    this.ICD9Field = value;
                    this.RaisePropertyChanged("ICD9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier1 {
            get {
                return this.Modifier1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier1Field, value) != true)) {
                    this.Modifier1Field = value;
                    this.RaisePropertyChanged("Modifier1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier10 {
            get {
                return this.Modifier10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier10Field, value) != true)) {
                    this.Modifier10Field = value;
                    this.RaisePropertyChanged("Modifier10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier11 {
            get {
                return this.Modifier11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier11Field, value) != true)) {
                    this.Modifier11Field = value;
                    this.RaisePropertyChanged("Modifier11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier12 {
            get {
                return this.Modifier12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier12Field, value) != true)) {
                    this.Modifier12Field = value;
                    this.RaisePropertyChanged("Modifier12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier13 {
            get {
                return this.Modifier13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier13Field, value) != true)) {
                    this.Modifier13Field = value;
                    this.RaisePropertyChanged("Modifier13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier14 {
            get {
                return this.Modifier14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier14Field, value) != true)) {
                    this.Modifier14Field = value;
                    this.RaisePropertyChanged("Modifier14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier15 {
            get {
                return this.Modifier15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier15Field, value) != true)) {
                    this.Modifier15Field = value;
                    this.RaisePropertyChanged("Modifier15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier2 {
            get {
                return this.Modifier2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier2Field, value) != true)) {
                    this.Modifier2Field = value;
                    this.RaisePropertyChanged("Modifier2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier3 {
            get {
                return this.Modifier3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier3Field, value) != true)) {
                    this.Modifier3Field = value;
                    this.RaisePropertyChanged("Modifier3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier4 {
            get {
                return this.Modifier4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier4Field, value) != true)) {
                    this.Modifier4Field = value;
                    this.RaisePropertyChanged("Modifier4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier5 {
            get {
                return this.Modifier5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier5Field, value) != true)) {
                    this.Modifier5Field = value;
                    this.RaisePropertyChanged("Modifier5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier6 {
            get {
                return this.Modifier6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier6Field, value) != true)) {
                    this.Modifier6Field = value;
                    this.RaisePropertyChanged("Modifier6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier7 {
            get {
                return this.Modifier7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier7Field, value) != true)) {
                    this.Modifier7Field = value;
                    this.RaisePropertyChanged("Modifier7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier8 {
            get {
                return this.Modifier8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier8Field, value) != true)) {
                    this.Modifier8Field = value;
                    this.RaisePropertyChanged("Modifier8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier9 {
            get {
                return this.Modifier9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier9Field, value) != true)) {
                    this.Modifier9Field = value;
                    this.RaisePropertyChanged("Modifier9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price1 {
            get {
                return this.Price1Field;
            }
            set {
                if ((this.Price1Field.Equals(value) != true)) {
                    this.Price1Field = value;
                    this.RaisePropertyChanged("Price1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price10 {
            get {
                return this.Price10Field;
            }
            set {
                if ((this.Price10Field.Equals(value) != true)) {
                    this.Price10Field = value;
                    this.RaisePropertyChanged("Price10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price11 {
            get {
                return this.Price11Field;
            }
            set {
                if ((this.Price11Field.Equals(value) != true)) {
                    this.Price11Field = value;
                    this.RaisePropertyChanged("Price11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price12 {
            get {
                return this.Price12Field;
            }
            set {
                if ((this.Price12Field.Equals(value) != true)) {
                    this.Price12Field = value;
                    this.RaisePropertyChanged("Price12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price13 {
            get {
                return this.Price13Field;
            }
            set {
                if ((this.Price13Field.Equals(value) != true)) {
                    this.Price13Field = value;
                    this.RaisePropertyChanged("Price13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price14 {
            get {
                return this.Price14Field;
            }
            set {
                if ((this.Price14Field.Equals(value) != true)) {
                    this.Price14Field = value;
                    this.RaisePropertyChanged("Price14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price15 {
            get {
                return this.Price15Field;
            }
            set {
                if ((this.Price15Field.Equals(value) != true)) {
                    this.Price15Field = value;
                    this.RaisePropertyChanged("Price15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price2 {
            get {
                return this.Price2Field;
            }
            set {
                if ((this.Price2Field.Equals(value) != true)) {
                    this.Price2Field = value;
                    this.RaisePropertyChanged("Price2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price3 {
            get {
                return this.Price3Field;
            }
            set {
                if ((this.Price3Field.Equals(value) != true)) {
                    this.Price3Field = value;
                    this.RaisePropertyChanged("Price3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price4 {
            get {
                return this.Price4Field;
            }
            set {
                if ((this.Price4Field.Equals(value) != true)) {
                    this.Price4Field = value;
                    this.RaisePropertyChanged("Price4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price5 {
            get {
                return this.Price5Field;
            }
            set {
                if ((this.Price5Field.Equals(value) != true)) {
                    this.Price5Field = value;
                    this.RaisePropertyChanged("Price5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price6 {
            get {
                return this.Price6Field;
            }
            set {
                if ((this.Price6Field.Equals(value) != true)) {
                    this.Price6Field = value;
                    this.RaisePropertyChanged("Price6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price7 {
            get {
                return this.Price7Field;
            }
            set {
                if ((this.Price7Field.Equals(value) != true)) {
                    this.Price7Field = value;
                    this.RaisePropertyChanged("Price7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price8 {
            get {
                return this.Price8Field;
            }
            set {
                if ((this.Price8Field.Equals(value) != true)) {
                    this.Price8Field = value;
                    this.RaisePropertyChanged("Price8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price9 {
            get {
                return this.Price9Field;
            }
            set {
                if ((this.Price9Field.Equals(value) != true)) {
                    this.Price9Field = value;
                    this.RaisePropertyChanged("Price9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RadID {
            get {
                return this.RadIDField;
            }
            set {
                if ((this.RadIDField.Equals(value) != true)) {
                    this.RadIDField = value;
                    this.RaisePropertyChanged("RadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RadName {
            get {
                return this.RadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RadNameField, value) != true)) {
                    this.RadNameField = value;
                    this.RaisePropertyChanged("RadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RadReview {
            get {
                return this.RadReviewField;
            }
            set {
                if ((this.RadReviewField.Equals(value) != true)) {
                    this.RadReviewField = value;
                    this.RaisePropertyChanged("RadReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Report {
            get {
                return this.ReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportField, value) != true)) {
                    this.ReportField = value;
                    this.RaisePropertyChanged("Report");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCharges {
            get {
                return this.TotalChargesField;
            }
            set {
                if ((this.TotalChargesField.Equals(value) != true)) {
                    this.TotalChargesField = value;
                    this.RaisePropertyChanged("TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TotalRVU {
            get {
                return this.TotalRVUField;
            }
            set {
                if ((this.TotalRVUField.Equals(value) != true)) {
                    this.TotalRVUField = value;
                    this.RaisePropertyChanged("TotalRVU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit1 {
            get {
                return this.Unit1Field;
            }
            set {
                if ((this.Unit1Field.Equals(value) != true)) {
                    this.Unit1Field = value;
                    this.RaisePropertyChanged("Unit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit10 {
            get {
                return this.Unit10Field;
            }
            set {
                if ((this.Unit10Field.Equals(value) != true)) {
                    this.Unit10Field = value;
                    this.RaisePropertyChanged("Unit10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit11 {
            get {
                return this.Unit11Field;
            }
            set {
                if ((this.Unit11Field.Equals(value) != true)) {
                    this.Unit11Field = value;
                    this.RaisePropertyChanged("Unit11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit12 {
            get {
                return this.Unit12Field;
            }
            set {
                if ((this.Unit12Field.Equals(value) != true)) {
                    this.Unit12Field = value;
                    this.RaisePropertyChanged("Unit12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit13 {
            get {
                return this.Unit13Field;
            }
            set {
                if ((this.Unit13Field.Equals(value) != true)) {
                    this.Unit13Field = value;
                    this.RaisePropertyChanged("Unit13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit14 {
            get {
                return this.Unit14Field;
            }
            set {
                if ((this.Unit14Field.Equals(value) != true)) {
                    this.Unit14Field = value;
                    this.RaisePropertyChanged("Unit14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit15 {
            get {
                return this.Unit15Field;
            }
            set {
                if ((this.Unit15Field.Equals(value) != true)) {
                    this.Unit15Field = value;
                    this.RaisePropertyChanged("Unit15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit2 {
            get {
                return this.Unit2Field;
            }
            set {
                if ((this.Unit2Field.Equals(value) != true)) {
                    this.Unit2Field = value;
                    this.RaisePropertyChanged("Unit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit3 {
            get {
                return this.Unit3Field;
            }
            set {
                if ((this.Unit3Field.Equals(value) != true)) {
                    this.Unit3Field = value;
                    this.RaisePropertyChanged("Unit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit4 {
            get {
                return this.Unit4Field;
            }
            set {
                if ((this.Unit4Field.Equals(value) != true)) {
                    this.Unit4Field = value;
                    this.RaisePropertyChanged("Unit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit5 {
            get {
                return this.Unit5Field;
            }
            set {
                if ((this.Unit5Field.Equals(value) != true)) {
                    this.Unit5Field = value;
                    this.RaisePropertyChanged("Unit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit6 {
            get {
                return this.Unit6Field;
            }
            set {
                if ((this.Unit6Field.Equals(value) != true)) {
                    this.Unit6Field = value;
                    this.RaisePropertyChanged("Unit6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit7 {
            get {
                return this.Unit7Field;
            }
            set {
                if ((this.Unit7Field.Equals(value) != true)) {
                    this.Unit7Field = value;
                    this.RaisePropertyChanged("Unit7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit8 {
            get {
                return this.Unit8Field;
            }
            set {
                if ((this.Unit8Field.Equals(value) != true)) {
                    this.Unit8Field = value;
                    this.RaisePropertyChanged("Unit8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit9 {
            get {
                return this.Unit9Field;
            }
            set {
                if ((this.Unit9Field.Equals(value) != true)) {
                    this.Unit9Field = value;
                    this.RaisePropertyChanged("Unit9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkstationID {
            get {
                return this.WorkstationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstationIDField, value) != true)) {
                    this.WorkstationIDField = value;
                    this.RaisePropertyChanged("WorkstationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasDemographics {
            get {
                return this.hasDemographicsField;
            }
            set {
                if ((this.hasDemographicsField.Equals(value) != true)) {
                    this.hasDemographicsField = value;
                    this.RaisePropertyChanged("hasDemographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasOrder {
            get {
                return this.hasOrderField;
            }
            set {
                if ((this.hasOrderField.Equals(value) != true)) {
                    this.hasOrderField = value;
                    this.RaisePropertyChanged("hasOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> verifiedDemographics {
            get {
                return this.verifiedDemographicsField;
            }
            set {
                if ((this.verifiedDemographicsField.Equals(value) != true)) {
                    this.verifiedDemographicsField = value;
                    this.RaisePropertyChanged("verifiedDemographics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetOrderResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetOrderResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExamNumberField;
        
        private string HL7MessageField;
        
        private long IDField;
        
        private string LocationCodeField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string OriginalExamNumberField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private string ProcedureCodeField;
        
        private string ProcedureNameField;
        
        private System.Nullable<char> StatusField;
        
        private string Status1Field;
        
        private string Status2Field;
        
        private string VisitNumberField;
        
        private System.Nullable<char> hasReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HL7Message {
            get {
                return this.HL7MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.HL7MessageField, value) != true)) {
                    this.HL7MessageField = value;
                    this.RaisePropertyChanged("HL7Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalExamNumber {
            get {
                return this.OriginalExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalExamNumberField, value) != true)) {
                    this.OriginalExamNumberField = value;
                    this.RaisePropertyChanged("OriginalExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCode {
            get {
                return this.ProcedureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeField, value) != true)) {
                    this.ProcedureCodeField = value;
                    this.RaisePropertyChanged("ProcedureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureName {
            get {
                return this.ProcedureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureNameField, value) != true)) {
                    this.ProcedureNameField = value;
                    this.RaisePropertyChanged("ProcedureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status1 {
            get {
                return this.Status1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Status1Field, value) != true)) {
                    this.Status1Field = value;
                    this.RaisePropertyChanged("Status1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status2 {
            get {
                return this.Status2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Status2Field, value) != true)) {
                    this.Status2Field = value;
                    this.RaisePropertyChanged("Status2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasReport {
            get {
                return this.hasReportField;
            }
            set {
                if ((this.hasReportField.Equals(value) != true)) {
                    this.hasReportField = value;
                    this.RaisePropertyChanged("hasReport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetReportsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetReportsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AssignedDateField;
        
        private System.Nullable<long> AssignedToField;
        
        private string Charge1Field;
        
        private string Charge10Field;
        
        private string Charge11Field;
        
        private string Charge12Field;
        
        private string Charge13Field;
        
        private string Charge14Field;
        
        private string Charge15Field;
        
        private string Charge2Field;
        
        private string Charge3Field;
        
        private string Charge4Field;
        
        private string Charge5Field;
        
        private string Charge6Field;
        
        private string Charge7Field;
        
        private string Charge8Field;
        
        private string Charge9Field;
        
        private System.Nullable<bool> CheckForAfterHoursField;
        
        private System.Nullable<bool> CheckForPQRIField;
        
        private System.Nullable<bool> CheckForSameDayReportsField;
        
        private System.Nullable<long> CodedByField;
        
        private System.Nullable<System.DateTime> CodedDateField;
        
        private System.Nullable<System.DateTime> DictatedDateField;
        
        private string Dosage1Field;
        
        private string Dosage10Field;
        
        private string Dosage11Field;
        
        private string Dosage12Field;
        
        private string Dosage13Field;
        
        private string Dosage14Field;
        
        private string Dosage15Field;
        
        private string Dosage2Field;
        
        private string Dosage3Field;
        
        private string Dosage4Field;
        
        private string Dosage5Field;
        
        private string Dosage6Field;
        
        private string Dosage7Field;
        
        private string Dosage8Field;
        
        private string Dosage9Field;
        
        private string ExamNumberField;
        
        private string ICD1Field;
        
        private string ICD10Field;
        
        private string ICD11Field;
        
        private string ICD12Field;
        
        private string ICD13Field;
        
        private string ICD14Field;
        
        private string ICD15Field;
        
        private string ICD2Field;
        
        private string ICD3Field;
        
        private string ICD4Field;
        
        private string ICD5Field;
        
        private string ICD6Field;
        
        private string ICD7Field;
        
        private string ICD8Field;
        
        private string ICD9Field;
        
        private long IDField;
        
        private string LocationCodeField;
        
        private string ModalityField;
        
        private string Modifier1Field;
        
        private string Modifier10Field;
        
        private string Modifier11Field;
        
        private string Modifier12Field;
        
        private string Modifier13Field;
        
        private string Modifier14Field;
        
        private string Modifier15Field;
        
        private string Modifier2Field;
        
        private string Modifier3Field;
        
        private string Modifier4Field;
        
        private string Modifier5Field;
        
        private string Modifier6Field;
        
        private string Modifier7Field;
        
        private string Modifier8Field;
        
        private string Modifier9Field;
        
        private string NotesField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private System.Nullable<decimal> Price1Field;
        
        private System.Nullable<decimal> Price10Field;
        
        private System.Nullable<decimal> Price11Field;
        
        private System.Nullable<decimal> Price12Field;
        
        private System.Nullable<decimal> Price13Field;
        
        private System.Nullable<decimal> Price14Field;
        
        private System.Nullable<decimal> Price15Field;
        
        private System.Nullable<decimal> Price2Field;
        
        private System.Nullable<decimal> Price3Field;
        
        private System.Nullable<decimal> Price4Field;
        
        private System.Nullable<decimal> Price5Field;
        
        private System.Nullable<decimal> Price6Field;
        
        private System.Nullable<decimal> Price7Field;
        
        private System.Nullable<decimal> Price8Field;
        
        private System.Nullable<decimal> Price9Field;
        
        private System.Nullable<long> RadIDField;
        
        private string RadNameField;
        
        private System.Nullable<bool> RadReviewField;
        
        private string ReportField;
        
        private System.Nullable<System.DateTime> SignedDateField;
        
        private System.Nullable<char> StatusField;
        
        private System.Nullable<int> TotalChargesField;
        
        private System.Nullable<double> TotalRVUField;
        
        private System.Nullable<int> Unit1Field;
        
        private System.Nullable<int> Unit10Field;
        
        private System.Nullable<int> Unit11Field;
        
        private System.Nullable<int> Unit12Field;
        
        private System.Nullable<int> Unit13Field;
        
        private System.Nullable<int> Unit14Field;
        
        private System.Nullable<int> Unit15Field;
        
        private System.Nullable<int> Unit2Field;
        
        private System.Nullable<int> Unit3Field;
        
        private System.Nullable<int> Unit4Field;
        
        private System.Nullable<int> Unit5Field;
        
        private System.Nullable<int> Unit6Field;
        
        private System.Nullable<int> Unit7Field;
        
        private System.Nullable<int> Unit8Field;
        
        private System.Nullable<int> Unit9Field;
        
        private string VisitNumberField;
        
        private string WorkstationIDField;
        
        private System.Nullable<char> hasDemographicsField;
        
        private System.Nullable<char> hasOrderField;
        
        private System.Nullable<char> verifiedDemographicsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.AssignedDateField;
            }
            set {
                if ((this.AssignedDateField.Equals(value) != true)) {
                    this.AssignedDateField = value;
                    this.RaisePropertyChanged("AssignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((this.AssignedToField.Equals(value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge1 {
            get {
                return this.Charge1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge1Field, value) != true)) {
                    this.Charge1Field = value;
                    this.RaisePropertyChanged("Charge1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge10 {
            get {
                return this.Charge10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge10Field, value) != true)) {
                    this.Charge10Field = value;
                    this.RaisePropertyChanged("Charge10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge11 {
            get {
                return this.Charge11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge11Field, value) != true)) {
                    this.Charge11Field = value;
                    this.RaisePropertyChanged("Charge11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge12 {
            get {
                return this.Charge12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge12Field, value) != true)) {
                    this.Charge12Field = value;
                    this.RaisePropertyChanged("Charge12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge13 {
            get {
                return this.Charge13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge13Field, value) != true)) {
                    this.Charge13Field = value;
                    this.RaisePropertyChanged("Charge13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge14 {
            get {
                return this.Charge14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge14Field, value) != true)) {
                    this.Charge14Field = value;
                    this.RaisePropertyChanged("Charge14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge15 {
            get {
                return this.Charge15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge15Field, value) != true)) {
                    this.Charge15Field = value;
                    this.RaisePropertyChanged("Charge15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge2 {
            get {
                return this.Charge2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge2Field, value) != true)) {
                    this.Charge2Field = value;
                    this.RaisePropertyChanged("Charge2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge3 {
            get {
                return this.Charge3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge3Field, value) != true)) {
                    this.Charge3Field = value;
                    this.RaisePropertyChanged("Charge3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge4 {
            get {
                return this.Charge4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge4Field, value) != true)) {
                    this.Charge4Field = value;
                    this.RaisePropertyChanged("Charge4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge5 {
            get {
                return this.Charge5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge5Field, value) != true)) {
                    this.Charge5Field = value;
                    this.RaisePropertyChanged("Charge5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge6 {
            get {
                return this.Charge6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge6Field, value) != true)) {
                    this.Charge6Field = value;
                    this.RaisePropertyChanged("Charge6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge7 {
            get {
                return this.Charge7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge7Field, value) != true)) {
                    this.Charge7Field = value;
                    this.RaisePropertyChanged("Charge7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge8 {
            get {
                return this.Charge8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge8Field, value) != true)) {
                    this.Charge8Field = value;
                    this.RaisePropertyChanged("Charge8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge9 {
            get {
                return this.Charge9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge9Field, value) != true)) {
                    this.Charge9Field = value;
                    this.RaisePropertyChanged("Charge9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForAfterHours {
            get {
                return this.CheckForAfterHoursField;
            }
            set {
                if ((this.CheckForAfterHoursField.Equals(value) != true)) {
                    this.CheckForAfterHoursField = value;
                    this.RaisePropertyChanged("CheckForAfterHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForPQRI {
            get {
                return this.CheckForPQRIField;
            }
            set {
                if ((this.CheckForPQRIField.Equals(value) != true)) {
                    this.CheckForPQRIField = value;
                    this.RaisePropertyChanged("CheckForPQRI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForSameDayReports {
            get {
                return this.CheckForSameDayReportsField;
            }
            set {
                if ((this.CheckForSameDayReportsField.Equals(value) != true)) {
                    this.CheckForSameDayReportsField = value;
                    this.RaisePropertyChanged("CheckForSameDayReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CodedBy {
            get {
                return this.CodedByField;
            }
            set {
                if ((this.CodedByField.Equals(value) != true)) {
                    this.CodedByField = value;
                    this.RaisePropertyChanged("CodedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CodedDate {
            get {
                return this.CodedDateField;
            }
            set {
                if ((this.CodedDateField.Equals(value) != true)) {
                    this.CodedDateField = value;
                    this.RaisePropertyChanged("CodedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DictatedDate {
            get {
                return this.DictatedDateField;
            }
            set {
                if ((this.DictatedDateField.Equals(value) != true)) {
                    this.DictatedDateField = value;
                    this.RaisePropertyChanged("DictatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage1 {
            get {
                return this.Dosage1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage1Field, value) != true)) {
                    this.Dosage1Field = value;
                    this.RaisePropertyChanged("Dosage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage10 {
            get {
                return this.Dosage10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage10Field, value) != true)) {
                    this.Dosage10Field = value;
                    this.RaisePropertyChanged("Dosage10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage11 {
            get {
                return this.Dosage11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage11Field, value) != true)) {
                    this.Dosage11Field = value;
                    this.RaisePropertyChanged("Dosage11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage12 {
            get {
                return this.Dosage12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage12Field, value) != true)) {
                    this.Dosage12Field = value;
                    this.RaisePropertyChanged("Dosage12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage13 {
            get {
                return this.Dosage13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage13Field, value) != true)) {
                    this.Dosage13Field = value;
                    this.RaisePropertyChanged("Dosage13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage14 {
            get {
                return this.Dosage14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage14Field, value) != true)) {
                    this.Dosage14Field = value;
                    this.RaisePropertyChanged("Dosage14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage15 {
            get {
                return this.Dosage15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage15Field, value) != true)) {
                    this.Dosage15Field = value;
                    this.RaisePropertyChanged("Dosage15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage2 {
            get {
                return this.Dosage2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage2Field, value) != true)) {
                    this.Dosage2Field = value;
                    this.RaisePropertyChanged("Dosage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage3 {
            get {
                return this.Dosage3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage3Field, value) != true)) {
                    this.Dosage3Field = value;
                    this.RaisePropertyChanged("Dosage3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage4 {
            get {
                return this.Dosage4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage4Field, value) != true)) {
                    this.Dosage4Field = value;
                    this.RaisePropertyChanged("Dosage4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage5 {
            get {
                return this.Dosage5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage5Field, value) != true)) {
                    this.Dosage5Field = value;
                    this.RaisePropertyChanged("Dosage5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage6 {
            get {
                return this.Dosage6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage6Field, value) != true)) {
                    this.Dosage6Field = value;
                    this.RaisePropertyChanged("Dosage6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage7 {
            get {
                return this.Dosage7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage7Field, value) != true)) {
                    this.Dosage7Field = value;
                    this.RaisePropertyChanged("Dosage7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage8 {
            get {
                return this.Dosage8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage8Field, value) != true)) {
                    this.Dosage8Field = value;
                    this.RaisePropertyChanged("Dosage8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage9 {
            get {
                return this.Dosage9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage9Field, value) != true)) {
                    this.Dosage9Field = value;
                    this.RaisePropertyChanged("Dosage9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD1 {
            get {
                return this.ICD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD1Field, value) != true)) {
                    this.ICD1Field = value;
                    this.RaisePropertyChanged("ICD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD10 {
            get {
                return this.ICD10Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD10Field, value) != true)) {
                    this.ICD10Field = value;
                    this.RaisePropertyChanged("ICD10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD11 {
            get {
                return this.ICD11Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD11Field, value) != true)) {
                    this.ICD11Field = value;
                    this.RaisePropertyChanged("ICD11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD12 {
            get {
                return this.ICD12Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD12Field, value) != true)) {
                    this.ICD12Field = value;
                    this.RaisePropertyChanged("ICD12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD13 {
            get {
                return this.ICD13Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD13Field, value) != true)) {
                    this.ICD13Field = value;
                    this.RaisePropertyChanged("ICD13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD14 {
            get {
                return this.ICD14Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD14Field, value) != true)) {
                    this.ICD14Field = value;
                    this.RaisePropertyChanged("ICD14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD15 {
            get {
                return this.ICD15Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD15Field, value) != true)) {
                    this.ICD15Field = value;
                    this.RaisePropertyChanged("ICD15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD2 {
            get {
                return this.ICD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD2Field, value) != true)) {
                    this.ICD2Field = value;
                    this.RaisePropertyChanged("ICD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD3 {
            get {
                return this.ICD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD3Field, value) != true)) {
                    this.ICD3Field = value;
                    this.RaisePropertyChanged("ICD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD4 {
            get {
                return this.ICD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD4Field, value) != true)) {
                    this.ICD4Field = value;
                    this.RaisePropertyChanged("ICD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD5 {
            get {
                return this.ICD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD5Field, value) != true)) {
                    this.ICD5Field = value;
                    this.RaisePropertyChanged("ICD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD6 {
            get {
                return this.ICD6Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD6Field, value) != true)) {
                    this.ICD6Field = value;
                    this.RaisePropertyChanged("ICD6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD7 {
            get {
                return this.ICD7Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD7Field, value) != true)) {
                    this.ICD7Field = value;
                    this.RaisePropertyChanged("ICD7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD8 {
            get {
                return this.ICD8Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD8Field, value) != true)) {
                    this.ICD8Field = value;
                    this.RaisePropertyChanged("ICD8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD9 {
            get {
                return this.ICD9Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9Field, value) != true)) {
                    this.ICD9Field = value;
                    this.RaisePropertyChanged("ICD9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier1 {
            get {
                return this.Modifier1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier1Field, value) != true)) {
                    this.Modifier1Field = value;
                    this.RaisePropertyChanged("Modifier1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier10 {
            get {
                return this.Modifier10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier10Field, value) != true)) {
                    this.Modifier10Field = value;
                    this.RaisePropertyChanged("Modifier10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier11 {
            get {
                return this.Modifier11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier11Field, value) != true)) {
                    this.Modifier11Field = value;
                    this.RaisePropertyChanged("Modifier11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier12 {
            get {
                return this.Modifier12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier12Field, value) != true)) {
                    this.Modifier12Field = value;
                    this.RaisePropertyChanged("Modifier12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier13 {
            get {
                return this.Modifier13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier13Field, value) != true)) {
                    this.Modifier13Field = value;
                    this.RaisePropertyChanged("Modifier13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier14 {
            get {
                return this.Modifier14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier14Field, value) != true)) {
                    this.Modifier14Field = value;
                    this.RaisePropertyChanged("Modifier14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier15 {
            get {
                return this.Modifier15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier15Field, value) != true)) {
                    this.Modifier15Field = value;
                    this.RaisePropertyChanged("Modifier15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier2 {
            get {
                return this.Modifier2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier2Field, value) != true)) {
                    this.Modifier2Field = value;
                    this.RaisePropertyChanged("Modifier2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier3 {
            get {
                return this.Modifier3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier3Field, value) != true)) {
                    this.Modifier3Field = value;
                    this.RaisePropertyChanged("Modifier3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier4 {
            get {
                return this.Modifier4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier4Field, value) != true)) {
                    this.Modifier4Field = value;
                    this.RaisePropertyChanged("Modifier4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier5 {
            get {
                return this.Modifier5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier5Field, value) != true)) {
                    this.Modifier5Field = value;
                    this.RaisePropertyChanged("Modifier5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier6 {
            get {
                return this.Modifier6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier6Field, value) != true)) {
                    this.Modifier6Field = value;
                    this.RaisePropertyChanged("Modifier6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier7 {
            get {
                return this.Modifier7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier7Field, value) != true)) {
                    this.Modifier7Field = value;
                    this.RaisePropertyChanged("Modifier7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier8 {
            get {
                return this.Modifier8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier8Field, value) != true)) {
                    this.Modifier8Field = value;
                    this.RaisePropertyChanged("Modifier8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier9 {
            get {
                return this.Modifier9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier9Field, value) != true)) {
                    this.Modifier9Field = value;
                    this.RaisePropertyChanged("Modifier9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price1 {
            get {
                return this.Price1Field;
            }
            set {
                if ((this.Price1Field.Equals(value) != true)) {
                    this.Price1Field = value;
                    this.RaisePropertyChanged("Price1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price10 {
            get {
                return this.Price10Field;
            }
            set {
                if ((this.Price10Field.Equals(value) != true)) {
                    this.Price10Field = value;
                    this.RaisePropertyChanged("Price10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price11 {
            get {
                return this.Price11Field;
            }
            set {
                if ((this.Price11Field.Equals(value) != true)) {
                    this.Price11Field = value;
                    this.RaisePropertyChanged("Price11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price12 {
            get {
                return this.Price12Field;
            }
            set {
                if ((this.Price12Field.Equals(value) != true)) {
                    this.Price12Field = value;
                    this.RaisePropertyChanged("Price12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price13 {
            get {
                return this.Price13Field;
            }
            set {
                if ((this.Price13Field.Equals(value) != true)) {
                    this.Price13Field = value;
                    this.RaisePropertyChanged("Price13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price14 {
            get {
                return this.Price14Field;
            }
            set {
                if ((this.Price14Field.Equals(value) != true)) {
                    this.Price14Field = value;
                    this.RaisePropertyChanged("Price14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price15 {
            get {
                return this.Price15Field;
            }
            set {
                if ((this.Price15Field.Equals(value) != true)) {
                    this.Price15Field = value;
                    this.RaisePropertyChanged("Price15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price2 {
            get {
                return this.Price2Field;
            }
            set {
                if ((this.Price2Field.Equals(value) != true)) {
                    this.Price2Field = value;
                    this.RaisePropertyChanged("Price2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price3 {
            get {
                return this.Price3Field;
            }
            set {
                if ((this.Price3Field.Equals(value) != true)) {
                    this.Price3Field = value;
                    this.RaisePropertyChanged("Price3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price4 {
            get {
                return this.Price4Field;
            }
            set {
                if ((this.Price4Field.Equals(value) != true)) {
                    this.Price4Field = value;
                    this.RaisePropertyChanged("Price4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price5 {
            get {
                return this.Price5Field;
            }
            set {
                if ((this.Price5Field.Equals(value) != true)) {
                    this.Price5Field = value;
                    this.RaisePropertyChanged("Price5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price6 {
            get {
                return this.Price6Field;
            }
            set {
                if ((this.Price6Field.Equals(value) != true)) {
                    this.Price6Field = value;
                    this.RaisePropertyChanged("Price6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price7 {
            get {
                return this.Price7Field;
            }
            set {
                if ((this.Price7Field.Equals(value) != true)) {
                    this.Price7Field = value;
                    this.RaisePropertyChanged("Price7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price8 {
            get {
                return this.Price8Field;
            }
            set {
                if ((this.Price8Field.Equals(value) != true)) {
                    this.Price8Field = value;
                    this.RaisePropertyChanged("Price8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price9 {
            get {
                return this.Price9Field;
            }
            set {
                if ((this.Price9Field.Equals(value) != true)) {
                    this.Price9Field = value;
                    this.RaisePropertyChanged("Price9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RadID {
            get {
                return this.RadIDField;
            }
            set {
                if ((this.RadIDField.Equals(value) != true)) {
                    this.RadIDField = value;
                    this.RaisePropertyChanged("RadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RadName {
            get {
                return this.RadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RadNameField, value) != true)) {
                    this.RadNameField = value;
                    this.RaisePropertyChanged("RadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RadReview {
            get {
                return this.RadReviewField;
            }
            set {
                if ((this.RadReviewField.Equals(value) != true)) {
                    this.RadReviewField = value;
                    this.RaisePropertyChanged("RadReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Report {
            get {
                return this.ReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportField, value) != true)) {
                    this.ReportField = value;
                    this.RaisePropertyChanged("Report");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCharges {
            get {
                return this.TotalChargesField;
            }
            set {
                if ((this.TotalChargesField.Equals(value) != true)) {
                    this.TotalChargesField = value;
                    this.RaisePropertyChanged("TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TotalRVU {
            get {
                return this.TotalRVUField;
            }
            set {
                if ((this.TotalRVUField.Equals(value) != true)) {
                    this.TotalRVUField = value;
                    this.RaisePropertyChanged("TotalRVU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit1 {
            get {
                return this.Unit1Field;
            }
            set {
                if ((this.Unit1Field.Equals(value) != true)) {
                    this.Unit1Field = value;
                    this.RaisePropertyChanged("Unit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit10 {
            get {
                return this.Unit10Field;
            }
            set {
                if ((this.Unit10Field.Equals(value) != true)) {
                    this.Unit10Field = value;
                    this.RaisePropertyChanged("Unit10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit11 {
            get {
                return this.Unit11Field;
            }
            set {
                if ((this.Unit11Field.Equals(value) != true)) {
                    this.Unit11Field = value;
                    this.RaisePropertyChanged("Unit11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit12 {
            get {
                return this.Unit12Field;
            }
            set {
                if ((this.Unit12Field.Equals(value) != true)) {
                    this.Unit12Field = value;
                    this.RaisePropertyChanged("Unit12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit13 {
            get {
                return this.Unit13Field;
            }
            set {
                if ((this.Unit13Field.Equals(value) != true)) {
                    this.Unit13Field = value;
                    this.RaisePropertyChanged("Unit13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit14 {
            get {
                return this.Unit14Field;
            }
            set {
                if ((this.Unit14Field.Equals(value) != true)) {
                    this.Unit14Field = value;
                    this.RaisePropertyChanged("Unit14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit15 {
            get {
                return this.Unit15Field;
            }
            set {
                if ((this.Unit15Field.Equals(value) != true)) {
                    this.Unit15Field = value;
                    this.RaisePropertyChanged("Unit15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit2 {
            get {
                return this.Unit2Field;
            }
            set {
                if ((this.Unit2Field.Equals(value) != true)) {
                    this.Unit2Field = value;
                    this.RaisePropertyChanged("Unit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit3 {
            get {
                return this.Unit3Field;
            }
            set {
                if ((this.Unit3Field.Equals(value) != true)) {
                    this.Unit3Field = value;
                    this.RaisePropertyChanged("Unit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit4 {
            get {
                return this.Unit4Field;
            }
            set {
                if ((this.Unit4Field.Equals(value) != true)) {
                    this.Unit4Field = value;
                    this.RaisePropertyChanged("Unit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit5 {
            get {
                return this.Unit5Field;
            }
            set {
                if ((this.Unit5Field.Equals(value) != true)) {
                    this.Unit5Field = value;
                    this.RaisePropertyChanged("Unit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit6 {
            get {
                return this.Unit6Field;
            }
            set {
                if ((this.Unit6Field.Equals(value) != true)) {
                    this.Unit6Field = value;
                    this.RaisePropertyChanged("Unit6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit7 {
            get {
                return this.Unit7Field;
            }
            set {
                if ((this.Unit7Field.Equals(value) != true)) {
                    this.Unit7Field = value;
                    this.RaisePropertyChanged("Unit7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit8 {
            get {
                return this.Unit8Field;
            }
            set {
                if ((this.Unit8Field.Equals(value) != true)) {
                    this.Unit8Field = value;
                    this.RaisePropertyChanged("Unit8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit9 {
            get {
                return this.Unit9Field;
            }
            set {
                if ((this.Unit9Field.Equals(value) != true)) {
                    this.Unit9Field = value;
                    this.RaisePropertyChanged("Unit9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkstationID {
            get {
                return this.WorkstationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstationIDField, value) != true)) {
                    this.WorkstationIDField = value;
                    this.RaisePropertyChanged("WorkstationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasDemographics {
            get {
                return this.hasDemographicsField;
            }
            set {
                if ((this.hasDemographicsField.Equals(value) != true)) {
                    this.hasDemographicsField = value;
                    this.RaisePropertyChanged("hasDemographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasOrder {
            get {
                return this.hasOrderField;
            }
            set {
                if ((this.hasOrderField.Equals(value) != true)) {
                    this.hasOrderField = value;
                    this.RaisePropertyChanged("hasOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> verifiedDemographics {
            get {
                return this.verifiedDemographicsField;
            }
            set {
                if ((this.verifiedDemographicsField.Equals(value) != true)) {
                    this.verifiedDemographicsField = value;
                    this.RaisePropertyChanged("verifiedDemographics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sDuplicateReportsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sDuplicateReportsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ReceivedField;
        
        private string ReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Received {
            get {
                return this.ReceivedField;
            }
            set {
                if ((this.ReceivedField.Equals(value) != true)) {
                    this.ReceivedField = value;
                    this.RaisePropertyChanged("Received");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Report {
            get {
                return this.ReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportField, value) != true)) {
                    this.ReportField = value;
                    this.RaisePropertyChanged("Report");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sUpdateReportResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sUpdateReportResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AssignedDateField;
        
        private System.Nullable<long> AssignedToField;
        
        private string Charge1Field;
        
        private string Charge10Field;
        
        private string Charge11Field;
        
        private string Charge12Field;
        
        private string Charge13Field;
        
        private string Charge14Field;
        
        private string Charge15Field;
        
        private string Charge2Field;
        
        private string Charge3Field;
        
        private string Charge4Field;
        
        private string Charge5Field;
        
        private string Charge6Field;
        
        private string Charge7Field;
        
        private string Charge8Field;
        
        private string Charge9Field;
        
        private System.Nullable<bool> CheckForAfterHoursField;
        
        private System.Nullable<bool> CheckForPQRIField;
        
        private System.Nullable<bool> CheckForSameDayReportsField;
        
        private System.Nullable<long> CodedByField;
        
        private System.Nullable<System.DateTime> CodedDateField;
        
        private System.Nullable<System.DateTime> DictatedDateField;
        
        private string Dosage1Field;
        
        private string Dosage10Field;
        
        private string Dosage11Field;
        
        private string Dosage12Field;
        
        private string Dosage13Field;
        
        private string Dosage14Field;
        
        private string Dosage15Field;
        
        private string Dosage2Field;
        
        private string Dosage3Field;
        
        private string Dosage4Field;
        
        private string Dosage5Field;
        
        private string Dosage6Field;
        
        private string Dosage7Field;
        
        private string Dosage8Field;
        
        private string Dosage9Field;
        
        private string ExamNumberField;
        
        private string ICD1Field;
        
        private string ICD10Field;
        
        private string ICD11Field;
        
        private string ICD12Field;
        
        private string ICD13Field;
        
        private string ICD14Field;
        
        private string ICD15Field;
        
        private string ICD2Field;
        
        private string ICD3Field;
        
        private string ICD4Field;
        
        private string ICD5Field;
        
        private string ICD6Field;
        
        private string ICD7Field;
        
        private string ICD8Field;
        
        private string ICD9Field;
        
        private long IDField;
        
        private string LocationCodeField;
        
        private string ModalityField;
        
        private string Modifier1Field;
        
        private string Modifier10Field;
        
        private string Modifier11Field;
        
        private string Modifier12Field;
        
        private string Modifier13Field;
        
        private string Modifier14Field;
        
        private string Modifier15Field;
        
        private string Modifier2Field;
        
        private string Modifier3Field;
        
        private string Modifier4Field;
        
        private string Modifier5Field;
        
        private string Modifier6Field;
        
        private string Modifier7Field;
        
        private string Modifier8Field;
        
        private string Modifier9Field;
        
        private string NotesField;
        
        private System.Nullable<System.DateTime> OrderedDateField;
        
        private string PatientMRNField;
        
        private string PatientNameField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private System.Nullable<decimal> Price1Field;
        
        private System.Nullable<decimal> Price10Field;
        
        private System.Nullable<decimal> Price11Field;
        
        private System.Nullable<decimal> Price12Field;
        
        private System.Nullable<decimal> Price13Field;
        
        private System.Nullable<decimal> Price14Field;
        
        private System.Nullable<decimal> Price15Field;
        
        private System.Nullable<decimal> Price2Field;
        
        private System.Nullable<decimal> Price3Field;
        
        private System.Nullable<decimal> Price4Field;
        
        private System.Nullable<decimal> Price5Field;
        
        private System.Nullable<decimal> Price6Field;
        
        private System.Nullable<decimal> Price7Field;
        
        private System.Nullable<decimal> Price8Field;
        
        private System.Nullable<decimal> Price9Field;
        
        private System.Nullable<long> RadIDField;
        
        private string RadNameField;
        
        private System.Nullable<bool> RadReviewField;
        
        private string ReportField;
        
        private System.Nullable<System.DateTime> SignedDateField;
        
        private System.Nullable<char> StatusField;
        
        private System.Nullable<int> TotalChargesField;
        
        private System.Nullable<double> TotalRVUField;
        
        private System.Nullable<int> Unit1Field;
        
        private System.Nullable<int> Unit10Field;
        
        private System.Nullable<int> Unit11Field;
        
        private System.Nullable<int> Unit12Field;
        
        private System.Nullable<int> Unit13Field;
        
        private System.Nullable<int> Unit14Field;
        
        private System.Nullable<int> Unit15Field;
        
        private System.Nullable<int> Unit2Field;
        
        private System.Nullable<int> Unit3Field;
        
        private System.Nullable<int> Unit4Field;
        
        private System.Nullable<int> Unit5Field;
        
        private System.Nullable<int> Unit6Field;
        
        private System.Nullable<int> Unit7Field;
        
        private System.Nullable<int> Unit8Field;
        
        private System.Nullable<int> Unit9Field;
        
        private string VisitNumberField;
        
        private string WorkstationIDField;
        
        private System.Nullable<char> hasDemographicsField;
        
        private System.Nullable<char> hasOrderField;
        
        private System.Nullable<char> verifiedDemographicsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.AssignedDateField;
            }
            set {
                if ((this.AssignedDateField.Equals(value) != true)) {
                    this.AssignedDateField = value;
                    this.RaisePropertyChanged("AssignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((this.AssignedToField.Equals(value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge1 {
            get {
                return this.Charge1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge1Field, value) != true)) {
                    this.Charge1Field = value;
                    this.RaisePropertyChanged("Charge1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge10 {
            get {
                return this.Charge10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge10Field, value) != true)) {
                    this.Charge10Field = value;
                    this.RaisePropertyChanged("Charge10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge11 {
            get {
                return this.Charge11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge11Field, value) != true)) {
                    this.Charge11Field = value;
                    this.RaisePropertyChanged("Charge11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge12 {
            get {
                return this.Charge12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge12Field, value) != true)) {
                    this.Charge12Field = value;
                    this.RaisePropertyChanged("Charge12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge13 {
            get {
                return this.Charge13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge13Field, value) != true)) {
                    this.Charge13Field = value;
                    this.RaisePropertyChanged("Charge13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge14 {
            get {
                return this.Charge14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge14Field, value) != true)) {
                    this.Charge14Field = value;
                    this.RaisePropertyChanged("Charge14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge15 {
            get {
                return this.Charge15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge15Field, value) != true)) {
                    this.Charge15Field = value;
                    this.RaisePropertyChanged("Charge15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge2 {
            get {
                return this.Charge2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge2Field, value) != true)) {
                    this.Charge2Field = value;
                    this.RaisePropertyChanged("Charge2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge3 {
            get {
                return this.Charge3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge3Field, value) != true)) {
                    this.Charge3Field = value;
                    this.RaisePropertyChanged("Charge3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge4 {
            get {
                return this.Charge4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge4Field, value) != true)) {
                    this.Charge4Field = value;
                    this.RaisePropertyChanged("Charge4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge5 {
            get {
                return this.Charge5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge5Field, value) != true)) {
                    this.Charge5Field = value;
                    this.RaisePropertyChanged("Charge5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge6 {
            get {
                return this.Charge6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge6Field, value) != true)) {
                    this.Charge6Field = value;
                    this.RaisePropertyChanged("Charge6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge7 {
            get {
                return this.Charge7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge7Field, value) != true)) {
                    this.Charge7Field = value;
                    this.RaisePropertyChanged("Charge7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge8 {
            get {
                return this.Charge8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge8Field, value) != true)) {
                    this.Charge8Field = value;
                    this.RaisePropertyChanged("Charge8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Charge9 {
            get {
                return this.Charge9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Charge9Field, value) != true)) {
                    this.Charge9Field = value;
                    this.RaisePropertyChanged("Charge9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForAfterHours {
            get {
                return this.CheckForAfterHoursField;
            }
            set {
                if ((this.CheckForAfterHoursField.Equals(value) != true)) {
                    this.CheckForAfterHoursField = value;
                    this.RaisePropertyChanged("CheckForAfterHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForPQRI {
            get {
                return this.CheckForPQRIField;
            }
            set {
                if ((this.CheckForPQRIField.Equals(value) != true)) {
                    this.CheckForPQRIField = value;
                    this.RaisePropertyChanged("CheckForPQRI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CheckForSameDayReports {
            get {
                return this.CheckForSameDayReportsField;
            }
            set {
                if ((this.CheckForSameDayReportsField.Equals(value) != true)) {
                    this.CheckForSameDayReportsField = value;
                    this.RaisePropertyChanged("CheckForSameDayReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CodedBy {
            get {
                return this.CodedByField;
            }
            set {
                if ((this.CodedByField.Equals(value) != true)) {
                    this.CodedByField = value;
                    this.RaisePropertyChanged("CodedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CodedDate {
            get {
                return this.CodedDateField;
            }
            set {
                if ((this.CodedDateField.Equals(value) != true)) {
                    this.CodedDateField = value;
                    this.RaisePropertyChanged("CodedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DictatedDate {
            get {
                return this.DictatedDateField;
            }
            set {
                if ((this.DictatedDateField.Equals(value) != true)) {
                    this.DictatedDateField = value;
                    this.RaisePropertyChanged("DictatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage1 {
            get {
                return this.Dosage1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage1Field, value) != true)) {
                    this.Dosage1Field = value;
                    this.RaisePropertyChanged("Dosage1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage10 {
            get {
                return this.Dosage10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage10Field, value) != true)) {
                    this.Dosage10Field = value;
                    this.RaisePropertyChanged("Dosage10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage11 {
            get {
                return this.Dosage11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage11Field, value) != true)) {
                    this.Dosage11Field = value;
                    this.RaisePropertyChanged("Dosage11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage12 {
            get {
                return this.Dosage12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage12Field, value) != true)) {
                    this.Dosage12Field = value;
                    this.RaisePropertyChanged("Dosage12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage13 {
            get {
                return this.Dosage13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage13Field, value) != true)) {
                    this.Dosage13Field = value;
                    this.RaisePropertyChanged("Dosage13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage14 {
            get {
                return this.Dosage14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage14Field, value) != true)) {
                    this.Dosage14Field = value;
                    this.RaisePropertyChanged("Dosage14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage15 {
            get {
                return this.Dosage15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage15Field, value) != true)) {
                    this.Dosage15Field = value;
                    this.RaisePropertyChanged("Dosage15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage2 {
            get {
                return this.Dosage2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage2Field, value) != true)) {
                    this.Dosage2Field = value;
                    this.RaisePropertyChanged("Dosage2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage3 {
            get {
                return this.Dosage3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage3Field, value) != true)) {
                    this.Dosage3Field = value;
                    this.RaisePropertyChanged("Dosage3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage4 {
            get {
                return this.Dosage4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage4Field, value) != true)) {
                    this.Dosage4Field = value;
                    this.RaisePropertyChanged("Dosage4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage5 {
            get {
                return this.Dosage5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage5Field, value) != true)) {
                    this.Dosage5Field = value;
                    this.RaisePropertyChanged("Dosage5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage6 {
            get {
                return this.Dosage6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage6Field, value) != true)) {
                    this.Dosage6Field = value;
                    this.RaisePropertyChanged("Dosage6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage7 {
            get {
                return this.Dosage7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage7Field, value) != true)) {
                    this.Dosage7Field = value;
                    this.RaisePropertyChanged("Dosage7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage8 {
            get {
                return this.Dosage8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage8Field, value) != true)) {
                    this.Dosage8Field = value;
                    this.RaisePropertyChanged("Dosage8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage9 {
            get {
                return this.Dosage9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Dosage9Field, value) != true)) {
                    this.Dosage9Field = value;
                    this.RaisePropertyChanged("Dosage9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamNumber {
            get {
                return this.ExamNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNumberField, value) != true)) {
                    this.ExamNumberField = value;
                    this.RaisePropertyChanged("ExamNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD1 {
            get {
                return this.ICD1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD1Field, value) != true)) {
                    this.ICD1Field = value;
                    this.RaisePropertyChanged("ICD1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD10 {
            get {
                return this.ICD10Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD10Field, value) != true)) {
                    this.ICD10Field = value;
                    this.RaisePropertyChanged("ICD10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD11 {
            get {
                return this.ICD11Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD11Field, value) != true)) {
                    this.ICD11Field = value;
                    this.RaisePropertyChanged("ICD11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD12 {
            get {
                return this.ICD12Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD12Field, value) != true)) {
                    this.ICD12Field = value;
                    this.RaisePropertyChanged("ICD12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD13 {
            get {
                return this.ICD13Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD13Field, value) != true)) {
                    this.ICD13Field = value;
                    this.RaisePropertyChanged("ICD13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD14 {
            get {
                return this.ICD14Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD14Field, value) != true)) {
                    this.ICD14Field = value;
                    this.RaisePropertyChanged("ICD14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD15 {
            get {
                return this.ICD15Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD15Field, value) != true)) {
                    this.ICD15Field = value;
                    this.RaisePropertyChanged("ICD15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD2 {
            get {
                return this.ICD2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD2Field, value) != true)) {
                    this.ICD2Field = value;
                    this.RaisePropertyChanged("ICD2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD3 {
            get {
                return this.ICD3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD3Field, value) != true)) {
                    this.ICD3Field = value;
                    this.RaisePropertyChanged("ICD3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD4 {
            get {
                return this.ICD4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD4Field, value) != true)) {
                    this.ICD4Field = value;
                    this.RaisePropertyChanged("ICD4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD5 {
            get {
                return this.ICD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD5Field, value) != true)) {
                    this.ICD5Field = value;
                    this.RaisePropertyChanged("ICD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD6 {
            get {
                return this.ICD6Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD6Field, value) != true)) {
                    this.ICD6Field = value;
                    this.RaisePropertyChanged("ICD6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD7 {
            get {
                return this.ICD7Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD7Field, value) != true)) {
                    this.ICD7Field = value;
                    this.RaisePropertyChanged("ICD7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD8 {
            get {
                return this.ICD8Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD8Field, value) != true)) {
                    this.ICD8Field = value;
                    this.RaisePropertyChanged("ICD8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD9 {
            get {
                return this.ICD9Field;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9Field, value) != true)) {
                    this.ICD9Field = value;
                    this.RaisePropertyChanged("ICD9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier1 {
            get {
                return this.Modifier1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier1Field, value) != true)) {
                    this.Modifier1Field = value;
                    this.RaisePropertyChanged("Modifier1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier10 {
            get {
                return this.Modifier10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier10Field, value) != true)) {
                    this.Modifier10Field = value;
                    this.RaisePropertyChanged("Modifier10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier11 {
            get {
                return this.Modifier11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier11Field, value) != true)) {
                    this.Modifier11Field = value;
                    this.RaisePropertyChanged("Modifier11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier12 {
            get {
                return this.Modifier12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier12Field, value) != true)) {
                    this.Modifier12Field = value;
                    this.RaisePropertyChanged("Modifier12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier13 {
            get {
                return this.Modifier13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier13Field, value) != true)) {
                    this.Modifier13Field = value;
                    this.RaisePropertyChanged("Modifier13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier14 {
            get {
                return this.Modifier14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier14Field, value) != true)) {
                    this.Modifier14Field = value;
                    this.RaisePropertyChanged("Modifier14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier15 {
            get {
                return this.Modifier15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier15Field, value) != true)) {
                    this.Modifier15Field = value;
                    this.RaisePropertyChanged("Modifier15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier2 {
            get {
                return this.Modifier2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier2Field, value) != true)) {
                    this.Modifier2Field = value;
                    this.RaisePropertyChanged("Modifier2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier3 {
            get {
                return this.Modifier3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier3Field, value) != true)) {
                    this.Modifier3Field = value;
                    this.RaisePropertyChanged("Modifier3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier4 {
            get {
                return this.Modifier4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier4Field, value) != true)) {
                    this.Modifier4Field = value;
                    this.RaisePropertyChanged("Modifier4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier5 {
            get {
                return this.Modifier5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier5Field, value) != true)) {
                    this.Modifier5Field = value;
                    this.RaisePropertyChanged("Modifier5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier6 {
            get {
                return this.Modifier6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier6Field, value) != true)) {
                    this.Modifier6Field = value;
                    this.RaisePropertyChanged("Modifier6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier7 {
            get {
                return this.Modifier7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier7Field, value) != true)) {
                    this.Modifier7Field = value;
                    this.RaisePropertyChanged("Modifier7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier8 {
            get {
                return this.Modifier8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier8Field, value) != true)) {
                    this.Modifier8Field = value;
                    this.RaisePropertyChanged("Modifier8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modifier9 {
            get {
                return this.Modifier9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Modifier9Field, value) != true)) {
                    this.Modifier9Field = value;
                    this.RaisePropertyChanged("Modifier9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderedDate {
            get {
                return this.OrderedDateField;
            }
            set {
                if ((this.OrderedDateField.Equals(value) != true)) {
                    this.OrderedDateField = value;
                    this.RaisePropertyChanged("OrderedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMRN {
            get {
                return this.PatientMRNField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMRNField, value) != true)) {
                    this.PatientMRNField = value;
                    this.RaisePropertyChanged("PatientMRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price1 {
            get {
                return this.Price1Field;
            }
            set {
                if ((this.Price1Field.Equals(value) != true)) {
                    this.Price1Field = value;
                    this.RaisePropertyChanged("Price1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price10 {
            get {
                return this.Price10Field;
            }
            set {
                if ((this.Price10Field.Equals(value) != true)) {
                    this.Price10Field = value;
                    this.RaisePropertyChanged("Price10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price11 {
            get {
                return this.Price11Field;
            }
            set {
                if ((this.Price11Field.Equals(value) != true)) {
                    this.Price11Field = value;
                    this.RaisePropertyChanged("Price11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price12 {
            get {
                return this.Price12Field;
            }
            set {
                if ((this.Price12Field.Equals(value) != true)) {
                    this.Price12Field = value;
                    this.RaisePropertyChanged("Price12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price13 {
            get {
                return this.Price13Field;
            }
            set {
                if ((this.Price13Field.Equals(value) != true)) {
                    this.Price13Field = value;
                    this.RaisePropertyChanged("Price13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price14 {
            get {
                return this.Price14Field;
            }
            set {
                if ((this.Price14Field.Equals(value) != true)) {
                    this.Price14Field = value;
                    this.RaisePropertyChanged("Price14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price15 {
            get {
                return this.Price15Field;
            }
            set {
                if ((this.Price15Field.Equals(value) != true)) {
                    this.Price15Field = value;
                    this.RaisePropertyChanged("Price15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price2 {
            get {
                return this.Price2Field;
            }
            set {
                if ((this.Price2Field.Equals(value) != true)) {
                    this.Price2Field = value;
                    this.RaisePropertyChanged("Price2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price3 {
            get {
                return this.Price3Field;
            }
            set {
                if ((this.Price3Field.Equals(value) != true)) {
                    this.Price3Field = value;
                    this.RaisePropertyChanged("Price3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price4 {
            get {
                return this.Price4Field;
            }
            set {
                if ((this.Price4Field.Equals(value) != true)) {
                    this.Price4Field = value;
                    this.RaisePropertyChanged("Price4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price5 {
            get {
                return this.Price5Field;
            }
            set {
                if ((this.Price5Field.Equals(value) != true)) {
                    this.Price5Field = value;
                    this.RaisePropertyChanged("Price5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price6 {
            get {
                return this.Price6Field;
            }
            set {
                if ((this.Price6Field.Equals(value) != true)) {
                    this.Price6Field = value;
                    this.RaisePropertyChanged("Price6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price7 {
            get {
                return this.Price7Field;
            }
            set {
                if ((this.Price7Field.Equals(value) != true)) {
                    this.Price7Field = value;
                    this.RaisePropertyChanged("Price7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price8 {
            get {
                return this.Price8Field;
            }
            set {
                if ((this.Price8Field.Equals(value) != true)) {
                    this.Price8Field = value;
                    this.RaisePropertyChanged("Price8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price9 {
            get {
                return this.Price9Field;
            }
            set {
                if ((this.Price9Field.Equals(value) != true)) {
                    this.Price9Field = value;
                    this.RaisePropertyChanged("Price9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> RadID {
            get {
                return this.RadIDField;
            }
            set {
                if ((this.RadIDField.Equals(value) != true)) {
                    this.RadIDField = value;
                    this.RaisePropertyChanged("RadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RadName {
            get {
                return this.RadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RadNameField, value) != true)) {
                    this.RadNameField = value;
                    this.RaisePropertyChanged("RadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RadReview {
            get {
                return this.RadReviewField;
            }
            set {
                if ((this.RadReviewField.Equals(value) != true)) {
                    this.RadReviewField = value;
                    this.RaisePropertyChanged("RadReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Report {
            get {
                return this.ReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportField, value) != true)) {
                    this.ReportField = value;
                    this.RaisePropertyChanged("Report");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalCharges {
            get {
                return this.TotalChargesField;
            }
            set {
                if ((this.TotalChargesField.Equals(value) != true)) {
                    this.TotalChargesField = value;
                    this.RaisePropertyChanged("TotalCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TotalRVU {
            get {
                return this.TotalRVUField;
            }
            set {
                if ((this.TotalRVUField.Equals(value) != true)) {
                    this.TotalRVUField = value;
                    this.RaisePropertyChanged("TotalRVU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit1 {
            get {
                return this.Unit1Field;
            }
            set {
                if ((this.Unit1Field.Equals(value) != true)) {
                    this.Unit1Field = value;
                    this.RaisePropertyChanged("Unit1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit10 {
            get {
                return this.Unit10Field;
            }
            set {
                if ((this.Unit10Field.Equals(value) != true)) {
                    this.Unit10Field = value;
                    this.RaisePropertyChanged("Unit10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit11 {
            get {
                return this.Unit11Field;
            }
            set {
                if ((this.Unit11Field.Equals(value) != true)) {
                    this.Unit11Field = value;
                    this.RaisePropertyChanged("Unit11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit12 {
            get {
                return this.Unit12Field;
            }
            set {
                if ((this.Unit12Field.Equals(value) != true)) {
                    this.Unit12Field = value;
                    this.RaisePropertyChanged("Unit12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit13 {
            get {
                return this.Unit13Field;
            }
            set {
                if ((this.Unit13Field.Equals(value) != true)) {
                    this.Unit13Field = value;
                    this.RaisePropertyChanged("Unit13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit14 {
            get {
                return this.Unit14Field;
            }
            set {
                if ((this.Unit14Field.Equals(value) != true)) {
                    this.Unit14Field = value;
                    this.RaisePropertyChanged("Unit14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit15 {
            get {
                return this.Unit15Field;
            }
            set {
                if ((this.Unit15Field.Equals(value) != true)) {
                    this.Unit15Field = value;
                    this.RaisePropertyChanged("Unit15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit2 {
            get {
                return this.Unit2Field;
            }
            set {
                if ((this.Unit2Field.Equals(value) != true)) {
                    this.Unit2Field = value;
                    this.RaisePropertyChanged("Unit2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit3 {
            get {
                return this.Unit3Field;
            }
            set {
                if ((this.Unit3Field.Equals(value) != true)) {
                    this.Unit3Field = value;
                    this.RaisePropertyChanged("Unit3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit4 {
            get {
                return this.Unit4Field;
            }
            set {
                if ((this.Unit4Field.Equals(value) != true)) {
                    this.Unit4Field = value;
                    this.RaisePropertyChanged("Unit4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit5 {
            get {
                return this.Unit5Field;
            }
            set {
                if ((this.Unit5Field.Equals(value) != true)) {
                    this.Unit5Field = value;
                    this.RaisePropertyChanged("Unit5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit6 {
            get {
                return this.Unit6Field;
            }
            set {
                if ((this.Unit6Field.Equals(value) != true)) {
                    this.Unit6Field = value;
                    this.RaisePropertyChanged("Unit6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit7 {
            get {
                return this.Unit7Field;
            }
            set {
                if ((this.Unit7Field.Equals(value) != true)) {
                    this.Unit7Field = value;
                    this.RaisePropertyChanged("Unit7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit8 {
            get {
                return this.Unit8Field;
            }
            set {
                if ((this.Unit8Field.Equals(value) != true)) {
                    this.Unit8Field = value;
                    this.RaisePropertyChanged("Unit8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Unit9 {
            get {
                return this.Unit9Field;
            }
            set {
                if ((this.Unit9Field.Equals(value) != true)) {
                    this.Unit9Field = value;
                    this.RaisePropertyChanged("Unit9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitNumber {
            get {
                return this.VisitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitNumberField, value) != true)) {
                    this.VisitNumberField = value;
                    this.RaisePropertyChanged("VisitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkstationID {
            get {
                return this.WorkstationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstationIDField, value) != true)) {
                    this.WorkstationIDField = value;
                    this.RaisePropertyChanged("WorkstationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasDemographics {
            get {
                return this.hasDemographicsField;
            }
            set {
                if ((this.hasDemographicsField.Equals(value) != true)) {
                    this.hasDemographicsField = value;
                    this.RaisePropertyChanged("hasDemographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> hasOrder {
            get {
                return this.hasOrderField;
            }
            set {
                if ((this.hasOrderField.Equals(value) != true)) {
                    this.hasOrderField = value;
                    this.RaisePropertyChanged("hasOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> verifiedDemographics {
            get {
                return this.verifiedDemographicsField;
            }
            set {
                if ((this.verifiedDemographicsField.Equals(value) != true)) {
                    this.verifiedDemographicsField = value;
                    this.RaisePropertyChanged("verifiedDemographics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fSplitHL7GPMSResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class fSplitHL7GPMSResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string SegmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Segment {
            get {
                return this.SegmentField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentField, value) != true)) {
                    this.SegmentField = value;
                    this.RaisePropertyChanged("Segment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sReportsCodedPerDayResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sReportsCodedPerDayResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> ChargesField;
        
        private string CoderField;
        
        private string LocationField;
        
        private System.Nullable<int> ReportsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Charges {
            get {
                return this.ChargesField;
            }
            set {
                if ((this.ChargesField.Equals(value) != true)) {
                    this.ChargesField = value;
                    this.RaisePropertyChanged("Charges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coder {
            get {
                return this.CoderField;
            }
            set {
                if ((object.ReferenceEquals(this.CoderField, value) != true)) {
                    this.CoderField = value;
                    this.RaisePropertyChanged("Coder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((this.ReportsField.Equals(value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sListICD9Result", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sListICD9Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sToCodeResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sToCodeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<decimal> AgeField;
        
        private string LocationField;
        
        private System.Nullable<int> ReportsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((this.ReportsField.Equals(value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="bAppointment", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class bAppointment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PatientIDField;
        
        private System.Nullable<System.DateTime> PerformedDateField;
        
        private string SiteCodeField;
        
        private string address1Field;
        
        private string address2Field;
        
        private System.Nullable<long> appointmentsidField;
        
        private string apptstartField;
        
        private string apptstopField;
        
        private string birthdateField;
        
        private string cityField;
        
        private string cptcodeField;
        
        private string descriptionField;
        
        private string description2Field;
        
        private string doctorfacilityidField;
        
        private string firstField;
        
        private long idField;
        
        private string jobnumberField;
        
        private string lastField;
        
        private string listnameField;
        
        private string medicalrecordnumberField;
        
        private string middleField;
        
        private string phone1Field;
        
        private string phone1typeField;
        
        private string phone2Field;
        
        private string phone2typeField;
        
        private string prefixField;
        
        private string reportidField;
        
        private string ssnField;
        
        private string stateField;
        
        private string suffixField;
        
        private string zipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDField, value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PerformedDate {
            get {
                return this.PerformedDateField;
            }
            set {
                if ((this.PerformedDateField.Equals(value) != true)) {
                    this.PerformedDateField = value;
                    this.RaisePropertyChanged("PerformedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.address1Field, value) != true)) {
                    this.address1Field = value;
                    this.RaisePropertyChanged("address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.address2Field, value) != true)) {
                    this.address2Field = value;
                    this.RaisePropertyChanged("address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> appointmentsid {
            get {
                return this.appointmentsidField;
            }
            set {
                if ((this.appointmentsidField.Equals(value) != true)) {
                    this.appointmentsidField = value;
                    this.RaisePropertyChanged("appointmentsid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apptstart {
            get {
                return this.apptstartField;
            }
            set {
                if ((object.ReferenceEquals(this.apptstartField, value) != true)) {
                    this.apptstartField = value;
                    this.RaisePropertyChanged("apptstart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apptstop {
            get {
                return this.apptstopField;
            }
            set {
                if ((object.ReferenceEquals(this.apptstopField, value) != true)) {
                    this.apptstopField = value;
                    this.RaisePropertyChanged("apptstop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string birthdate {
            get {
                return this.birthdateField;
            }
            set {
                if ((object.ReferenceEquals(this.birthdateField, value) != true)) {
                    this.birthdateField = value;
                    this.RaisePropertyChanged("birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cptcode {
            get {
                return this.cptcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.cptcodeField, value) != true)) {
                    this.cptcodeField = value;
                    this.RaisePropertyChanged("cptcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description2 {
            get {
                return this.description2Field;
            }
            set {
                if ((object.ReferenceEquals(this.description2Field, value) != true)) {
                    this.description2Field = value;
                    this.RaisePropertyChanged("description2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string doctorfacilityid {
            get {
                return this.doctorfacilityidField;
            }
            set {
                if ((object.ReferenceEquals(this.doctorfacilityidField, value) != true)) {
                    this.doctorfacilityidField = value;
                    this.RaisePropertyChanged("doctorfacilityid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first {
            get {
                return this.firstField;
            }
            set {
                if ((object.ReferenceEquals(this.firstField, value) != true)) {
                    this.firstField = value;
                    this.RaisePropertyChanged("first");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string jobnumber {
            get {
                return this.jobnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.jobnumberField, value) != true)) {
                    this.jobnumberField = value;
                    this.RaisePropertyChanged("jobnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last {
            get {
                return this.lastField;
            }
            set {
                if ((object.ReferenceEquals(this.lastField, value) != true)) {
                    this.lastField = value;
                    this.RaisePropertyChanged("last");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string listname {
            get {
                return this.listnameField;
            }
            set {
                if ((object.ReferenceEquals(this.listnameField, value) != true)) {
                    this.listnameField = value;
                    this.RaisePropertyChanged("listname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medicalrecordnumber {
            get {
                return this.medicalrecordnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.medicalrecordnumberField, value) != true)) {
                    this.medicalrecordnumberField = value;
                    this.RaisePropertyChanged("medicalrecordnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string middle {
            get {
                return this.middleField;
            }
            set {
                if ((object.ReferenceEquals(this.middleField, value) != true)) {
                    this.middleField = value;
                    this.RaisePropertyChanged("middle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone1 {
            get {
                return this.phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.phone1Field, value) != true)) {
                    this.phone1Field = value;
                    this.RaisePropertyChanged("phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone1type {
            get {
                return this.phone1typeField;
            }
            set {
                if ((object.ReferenceEquals(this.phone1typeField, value) != true)) {
                    this.phone1typeField = value;
                    this.RaisePropertyChanged("phone1type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone2 {
            get {
                return this.phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.phone2Field, value) != true)) {
                    this.phone2Field = value;
                    this.RaisePropertyChanged("phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone2type {
            get {
                return this.phone2typeField;
            }
            set {
                if ((object.ReferenceEquals(this.phone2typeField, value) != true)) {
                    this.phone2typeField = value;
                    this.RaisePropertyChanged("phone2type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string prefix {
            get {
                return this.prefixField;
            }
            set {
                if ((object.ReferenceEquals(this.prefixField, value) != true)) {
                    this.prefixField = value;
                    this.RaisePropertyChanged("prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reportid {
            get {
                return this.reportidField;
            }
            set {
                if ((object.ReferenceEquals(this.reportidField, value) != true)) {
                    this.reportidField = value;
                    this.RaisePropertyChanged("reportid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ssn {
            get {
                return this.ssnField;
            }
            set {
                if ((object.ReferenceEquals(this.ssnField, value) != true)) {
                    this.ssnField = value;
                    this.RaisePropertyChanged("ssn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string suffix {
            get {
                return this.suffixField;
            }
            set {
                if ((object.ReferenceEquals(this.suffixField, value) != true)) {
                    this.suffixField = value;
                    this.RaisePropertyChanged("suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                if ((object.ReferenceEquals(this.zipField, value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sCoderTotalsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sCoderTotalsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IDField;
        
        private System.Nullable<int> RecordsField;
        
        private System.Nullable<int> Records2Field;
        
        private string WhoField;
        
        private System.Nullable<long> WhoIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((this.RecordsField.Equals(value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Records2 {
            get {
                return this.Records2Field;
            }
            set {
                if ((this.Records2Field.Equals(value) != true)) {
                    this.Records2Field = value;
                    this.RaisePropertyChanged("Records2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Who {
            get {
                return this.WhoField;
            }
            set {
                if ((object.ReferenceEquals(this.WhoField, value) != true)) {
                    this.WhoField = value;
                    this.RaisePropertyChanged("Who");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> WhoID {
            get {
                return this.WhoIDField;
            }
            set {
                if ((this.WhoIDField.Equals(value) != true)) {
                    this.WhoIDField = value;
                    this.RaisePropertyChanged("WhoID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sGetExamCommentsResult", Namespace="http://schemas.datacontract.org/2004/07/eRIS.Web")]
    public partial class sGetExamCommentsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalTextField;
        
        private string ShortNameField;
        
        private System.DateTime TextDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalText {
            get {
                return this.AdditionalTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalTextField, value) != true)) {
                    this.AdditionalTextField = value;
                    this.RaisePropertyChanged("AdditionalText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TextDate {
            get {
                return this.TextDateField;
            }
            set {
                if ((this.TextDateField.Equals(value) != true)) {
                    this.TextDateField = value;
                    this.RaisePropertyChanged("TextDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="eRISServiceReference.eRISService")]
    public interface eRISService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetUserName", ReplyAction="urn:eRISService/GetUserNameResponse")]
        System.IAsyncResult BeginGetUserName(System.AsyncCallback callback, object asyncState);
        
        string EndGetUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetCurrentWorkflow", ReplyAction="urn:eRISService/GetCurrentWorkflowResponse")]
        System.IAsyncResult BeginGetCurrentWorkflow(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult> EndGetCurrentWorkflow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetCurrentWorkflowDetails", ReplyAction="urn:eRISService/GetCurrentWorkflowDetailsResponse")]
        System.IAsyncResult BeginGetCurrentWorkflowDetails(string chart, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult> EndGetCurrentWorkflowDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetPermissions", ReplyAction="urn:eRISService/GetPermissionsResponse")]
        System.IAsyncResult BeginGetPermissions(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult> EndGetPermissions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetPersonnel", ReplyAction="urn:eRISService/GetPersonnelResponse")]
        System.IAsyncResult BeginGetPersonnel(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult> EndGetPersonnel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetUsers", ReplyAction="urn:eRISService/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult> EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/Login", ReplyAction="urn:eRISService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, string ipAddress, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult> EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetPermissions", ReplyAction="urn:eRISService/SetPermissionsResponse")]
        System.IAsyncResult BeginSetPermissions(
                    int id, 
                    bool isAdmin, 
                    bool isRISAdmin, 
                    bool isManager, 
                    bool isRadiologist, 
                    bool isRadiologistADI, 
                    bool isTech, 
                    bool isClerk, 
                    bool isTelerad, 
                    bool isPhysician, 
                    bool isPatient, 
                    bool isCoder, 
                    string ShortName, 
                    bool isCoderAssignable, 
                    int RadGroup, 
                    bool isCoderLimited, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndSetPermissions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetStudiesReadPerDay", ReplyAction="urn:eRISService/GetStudiesReadPerDayResponse")]
        System.IAsyncResult BeginGetStudiesReadPerDay(System.DateTime begDate, System.DateTime endDate, int group, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult> EndGetStudiesReadPerDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetStudiesReadPerHour", ReplyAction="urn:eRISService/GetStudiesReadPerHourResponse")]
        System.IAsyncResult BeginGetStudiesReadPerHour(System.DateTime begDate, System.DateTime endDate, int rad, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult> EndGetStudiesReadPerHour(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetRadGroup", ReplyAction="urn:eRISService/GetRadGroupResponse")]
        System.IAsyncResult BeginGetRadGroup(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult> EndGetRadGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/InsertUsersLog", ReplyAction="urn:eRISService/InsertUsersLogResponse")]
        System.IAsyncResult BeginInsertUsersLog(int sourceID, int createdByID, int typeID, string description, System.AsyncCallback callback, object asyncState);
        
        void EndInsertUsersLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetUsersLogPerDay", ReplyAction="urn:eRISService/GetUsersLogPerDayResponse")]
        System.IAsyncResult BeginGetUsersLogPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult> EndGetUsersLogPerDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetUsersLogPerSource", ReplyAction="urn:eRISService/GetUsersLogPerSourceResponse")]
        System.IAsyncResult BeginGetUsersLogPerSource(int SourceID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult> EndGetUsersLogPerSource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetUsersLogByUser", ReplyAction="urn:eRISService/GetUsersLogByUserResponse")]
        System.IAsyncResult BeginGetUsersLogByUser(int userID, System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult> EndGetUsersLogByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetMessagesLogPerDay", ReplyAction="urn:eRISService/GetMessagesLogPerDayResponse")]
        System.IAsyncResult BeginGetMessagesLogPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult> EndGetMessagesLogPerDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetLayout", ReplyAction="urn:eRISService/SetLayoutResponse")]
        System.IAsyncResult BeginSetLayout(int id, string layout, System.AsyncCallback callback, object asyncState);
        
        void EndSetLayout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetTurnaroundTime", ReplyAction="urn:eRISService/GetTurnaroundTimeResponse")]
        System.IAsyncResult BeginGetTurnaroundTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult> EndGetTurnaroundTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetInterpretationTime", ReplyAction="urn:eRISService/GetInterpretationTimeResponse")]
        System.IAsyncResult BeginGetInterpretationTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult> EndGetInterpretationTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetPatientLongWait", ReplyAction="urn:eRISService/GetPatientLongWaitResponse")]
        System.IAsyncResult BeginGetPatientLongWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult> EndGetPatientLongWait(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetPatientShortWait", ReplyAction="urn:eRISService/GetPatientShortWaitResponse")]
        System.IAsyncResult BeginGetPatientShortWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult> EndGetPatientShortWait(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetPatientWait", ReplyAction="urn:eRISService/GetPatientWaitResponse")]
        System.IAsyncResult BeginGetPatientWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult> EndGetPatientWait(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetCompletedPerTech", ReplyAction="urn:eRISService/GetCompletedPerTechResponse")]
        System.IAsyncResult BeginGetCompletedPerTech(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult> EndGetCompletedPerTech(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetRegisteredPatients", ReplyAction="urn:eRISService/GetRegisteredPatientsResponse")]
        System.IAsyncResult BeginGetRegisteredPatients(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult> EndGetRegisteredPatients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetRegistrationTime", ReplyAction="urn:eRISService/GetRegistrationTimeResponse")]
        System.IAsyncResult BeginGetRegistrationTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult> EndGetRegistrationTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetFirstLastAppointment", ReplyAction="urn:eRISService/GetFirstLastAppointmentResponse")]
        System.IAsyncResult BeginGetFirstLastAppointment(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult> EndGetFirstLastAppointment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetScheduledPatients", ReplyAction="urn:eRISService/GetScheduledPatientsResponse")]
        System.IAsyncResult BeginGetScheduledPatients(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult> EndGetScheduledPatients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetOrdersPending", ReplyAction="urn:eRISService/GetOrdersPendingResponse")]
        System.IAsyncResult BeginGetOrdersPending(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult> EndGetOrdersPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListOrdersPending", ReplyAction="urn:eRISService/ListOrdersPendingResponse")]
        System.IAsyncResult BeginListOrdersPending(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult> EndListOrdersPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetOrdersPending", ReplyAction="urn:eRISService/SetOrdersPendingResponse")]
        System.IAsyncResult BeginSetOrdersPending(int id, char status, System.AsyncCallback callback, object asyncState);
        
        void EndSetOrdersPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetInterfaceXref", ReplyAction="urn:eRISService/GetInterfaceXrefResponse")]
        System.IAsyncResult BeginGetInterfaceXref(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult> EndGetInterfaceXref(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListInterfaceXref", ReplyAction="urn:eRISService/ListInterfaceXrefResponse")]
        System.IAsyncResult BeginListInterfaceXref(char xType, string xFacility, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult> EndListInterfaceXref(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetInterfaceXref", ReplyAction="urn:eRISService/SetInterfaceXrefResponse")]
        System.IAsyncResult BeginSetInterfaceXref(int id, char xType, string xFacility, string xSendingValue, string xReceivingValue, System.AsyncCallback callback, object asyncState);
        
        void EndSetInterfaceXref(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListInterface", ReplyAction="urn:eRISService/ListInterfaceResponse")]
        System.IAsyncResult BeginListInterface(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult> EndListInterface(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListPatients", ReplyAction="urn:eRISService/ListPatientsResponse")]
        System.IAsyncResult BeginListPatients(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult> EndListPatients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListProcedures", ReplyAction="urn:eRISService/ListProceduresResponse")]
        System.IAsyncResult BeginListProcedures(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult> EndListProcedures(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListProviders", ReplyAction="urn:eRISService/ListProvidersResponse")]
        System.IAsyncResult BeginListProviders(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult> EndListProviders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListReferrers", ReplyAction="urn:eRISService/ListReferrersResponse")]
        System.IAsyncResult BeginListReferrers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult> EndListReferrers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/MessagesSummary", ReplyAction="urn:eRISService/MessagesSummaryResponse")]
        System.IAsyncResult BeginMessagesSummary(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult> EndMessagesSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/PhyCoderTotals", ReplyAction="urn:eRISService/PhyCoderTotalsResponse")]
        System.IAsyncResult BeginPhyCoderTotals(int userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult> EndPhyCoderTotals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/PhyCoderReports", ReplyAction="urn:eRISService/PhyCoderReportsResponse")]
        System.IAsyncResult BeginPhyCoderReports(string SQL, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report> EndPhyCoderReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/PhyCoderOrders", ReplyAction="urn:eRISService/PhyCoderOrdersResponse")]
        System.IAsyncResult BeginPhyCoderOrders(string SQL, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order> EndPhyCoderOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetDemographics", ReplyAction="urn:eRISService/GetDemographicsResponse")]
        System.IAsyncResult BeginGetDemographics(string location, string mrn, string visit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult> EndGetDemographics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetOrders", ReplyAction="urn:eRISService/GetOrdersResponse")]
        System.IAsyncResult BeginGetOrders(string location, string patientmrn, string visit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult> EndGetOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetReport", ReplyAction="urn:eRISService/GetReportResponse")]
        System.IAsyncResult BeginGetReport(int ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult> EndGetReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetOrder", ReplyAction="urn:eRISService/GetOrderResponse")]
        System.IAsyncResult BeginGetOrder(int ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult> EndGetOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetReports", ReplyAction="urn:eRISService/GetReportsResponse")]
        System.IAsyncResult BeginGetReports(string location, string patientmrn, string examnumber, string visit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult> EndGetReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetDuplicateReports", ReplyAction="urn:eRISService/GetDuplicateReportsResponse")]
        System.IAsyncResult BeginGetDuplicateReports(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult> EndGetDuplicateReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetReport", ReplyAction="urn:eRISService/SetReportResponse")]
        System.IAsyncResult BeginSetReport(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndSetReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/UpdateReport", ReplyAction="urn:eRISService/UpdateReportResponse")]
        System.IAsyncResult BeginUpdateReport(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    string codingLocation, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult> EndUpdateReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/fSplitHL7GPMS", ReplyAction="urn:eRISService/fSplitHL7GPMSResponse")]
        System.IAsyncResult BeginfSplitHL7GPMS(string location, string patientmrn, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult> EndfSplitHL7GPMS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetReportsCodedPerDay", ReplyAction="urn:eRISService/GetReportsCodedPerDayResponse")]
        System.IAsyncResult BeginGetReportsCodedPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult> EndGetReportsCodedPerDay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetPending", ReplyAction="urn:eRISService/SetPendingResponse")]
        System.IAsyncResult BeginSetPending(int id, int codedby, System.AsyncCallback callback, object asyncState);
        
        void EndSetPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ClearPending", ReplyAction="urn:eRISService/ClearPendingResponse")]
        System.IAsyncResult BeginClearPending(int id, System.AsyncCallback callback, object asyncState);
        
        void EndClearPending(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/ListICD9", ReplyAction="urn:eRISService/ListICD9Response")]
        System.IAsyncResult BeginListICD9(string code, string description, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result> EndListICD9(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetMessagesLog", ReplyAction="urn:eRISService/SetMessagesLogResponse")]
        System.IAsyncResult BeginSetMessagesLog(int sourceID, int typeID, string description, System.AsyncCallback callback, object asyncState);
        
        void EndSetMessagesLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/MarkDeleted", ReplyAction="urn:eRISService/MarkDeletedResponse")]
        System.IAsyncResult BeginMarkDeleted(string loc, string exam, int codedby, System.AsyncCallback callback, object asyncState);
        
        void EndMarkDeleted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetToCode", ReplyAction="urn:eRISService/GetToCodeResponse")]
        System.IAsyncResult BeginGetToCode(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult> EndGetToCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetExamNumber", ReplyAction="urn:eRISService/SetExamNumberResponse")]
        System.IAsyncResult BeginSetExamNumber(int id, string exam, System.AsyncCallback callback, object asyncState);
        
        void EndSetExamNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/SetRad", ReplyAction="urn:eRISService/SetRadResponse")]
        System.IAsyncResult BeginSetRad(int id, int rad, System.AsyncCallback callback, object asyncState);
        
        int EndSetRad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/BioImagingReports", ReplyAction="urn:eRISService/BioImagingReportsResponse")]
        System.IAsyncResult BeginBioImagingReports(string SQL, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment> EndBioImagingReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/CoderTotals", ReplyAction="urn:eRISService/CoderTotalsResponse")]
        System.IAsyncResult BeginCoderTotals(int userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult> EndCoderTotals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetExamComments", ReplyAction="urn:eRISService/GetExamCommentsResponse")]
        System.IAsyncResult BeginGetExamComments(int Exam, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult> EndGetExamComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:eRISService/GetExamDocuments", ReplyAction="urn:eRISService/GetExamDocumentsResponse")]
        System.IAsyncResult BeginGetExamDocuments(string PatientMRN, int Exam, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndGetExamDocuments(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface eRISServiceChannel : eRIS.eRISServiceReference.eRISService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentWorkflowDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentWorkflowDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonnelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonnelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudiesReadPerDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudiesReadPerDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudiesReadPerHourCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudiesReadPerHourCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRadGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRadGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersLogPerDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersLogPerDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersLogPerSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersLogPerSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersLogByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersLogByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessagesLogPerDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessagesLogPerDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTurnaroundTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTurnaroundTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInterpretationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInterpretationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatientLongWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatientLongWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatientShortWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatientShortWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatientWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatientWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompletedPerTechCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompletedPerTechCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegisteredPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRegisteredPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegistrationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRegistrationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFirstLastAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFirstLastAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScheduledPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScheduledPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrdersPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrdersPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListOrdersPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListOrdersPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInterfaceXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInterfaceXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListInterfaceXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListInterfaceXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListProceduresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListProceduresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListProvidersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListProvidersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListReferrersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListReferrersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessagesSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MessagesSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhyCoderTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PhyCoderTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhyCoderReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PhyCoderReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhyCoderOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PhyCoderOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDuplicateReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDuplicateReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class fSplitHL7GPMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public fSplitHL7GPMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportsCodedPerDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportsCodedPerDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListICD9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListICD9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetToCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetToCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetRadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetRadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BioImagingReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BioImagingReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoderTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoderTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExamCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExamCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExamDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExamDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class eRISServiceClient : System.ServiceModel.ClientBase<eRIS.eRISServiceReference.eRISService>, eRIS.eRISServiceReference.eRISService {
        
        private BeginOperationDelegate onBeginGetUserNameDelegate;
        
        private EndOperationDelegate onEndGetUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentWorkflowDelegate;
        
        private EndOperationDelegate onEndGetCurrentWorkflowDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentWorkflowCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentWorkflowDetailsDelegate;
        
        private EndOperationDelegate onEndGetCurrentWorkflowDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentWorkflowDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPermissionsDelegate;
        
        private EndOperationDelegate onEndGetPermissionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPermissionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonnelDelegate;
        
        private EndOperationDelegate onEndGetPersonnelDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonnelCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPermissionsDelegate;
        
        private EndOperationDelegate onEndSetPermissionsDelegate;
        
        private System.Threading.SendOrPostCallback onSetPermissionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudiesReadPerDayDelegate;
        
        private EndOperationDelegate onEndGetStudiesReadPerDayDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudiesReadPerDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudiesReadPerHourDelegate;
        
        private EndOperationDelegate onEndGetStudiesReadPerHourDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudiesReadPerHourCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRadGroupDelegate;
        
        private EndOperationDelegate onEndGetRadGroupDelegate;
        
        private System.Threading.SendOrPostCallback onGetRadGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertUsersLogDelegate;
        
        private EndOperationDelegate onEndInsertUsersLogDelegate;
        
        private System.Threading.SendOrPostCallback onInsertUsersLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersLogPerDayDelegate;
        
        private EndOperationDelegate onEndGetUsersLogPerDayDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersLogPerDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersLogPerSourceDelegate;
        
        private EndOperationDelegate onEndGetUsersLogPerSourceDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersLogPerSourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersLogByUserDelegate;
        
        private EndOperationDelegate onEndGetUsersLogByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersLogByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessagesLogPerDayDelegate;
        
        private EndOperationDelegate onEndGetMessagesLogPerDayDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessagesLogPerDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetLayoutDelegate;
        
        private EndOperationDelegate onEndSetLayoutDelegate;
        
        private System.Threading.SendOrPostCallback onSetLayoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTurnaroundTimeDelegate;
        
        private EndOperationDelegate onEndGetTurnaroundTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetTurnaroundTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInterpretationTimeDelegate;
        
        private EndOperationDelegate onEndGetInterpretationTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetInterpretationTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatientLongWaitDelegate;
        
        private EndOperationDelegate onEndGetPatientLongWaitDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatientLongWaitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatientShortWaitDelegate;
        
        private EndOperationDelegate onEndGetPatientShortWaitDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatientShortWaitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatientWaitDelegate;
        
        private EndOperationDelegate onEndGetPatientWaitDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatientWaitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompletedPerTechDelegate;
        
        private EndOperationDelegate onEndGetCompletedPerTechDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompletedPerTechCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegisteredPatientsDelegate;
        
        private EndOperationDelegate onEndGetRegisteredPatientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegisteredPatientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegistrationTimeDelegate;
        
        private EndOperationDelegate onEndGetRegistrationTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegistrationTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFirstLastAppointmentDelegate;
        
        private EndOperationDelegate onEndGetFirstLastAppointmentDelegate;
        
        private System.Threading.SendOrPostCallback onGetFirstLastAppointmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScheduledPatientsDelegate;
        
        private EndOperationDelegate onEndGetScheduledPatientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetScheduledPatientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrdersPendingDelegate;
        
        private EndOperationDelegate onEndGetOrdersPendingDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrdersPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginListOrdersPendingDelegate;
        
        private EndOperationDelegate onEndListOrdersPendingDelegate;
        
        private System.Threading.SendOrPostCallback onListOrdersPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetOrdersPendingDelegate;
        
        private EndOperationDelegate onEndSetOrdersPendingDelegate;
        
        private System.Threading.SendOrPostCallback onSetOrdersPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInterfaceXrefDelegate;
        
        private EndOperationDelegate onEndGetInterfaceXrefDelegate;
        
        private System.Threading.SendOrPostCallback onGetInterfaceXrefCompletedDelegate;
        
        private BeginOperationDelegate onBeginListInterfaceXrefDelegate;
        
        private EndOperationDelegate onEndListInterfaceXrefDelegate;
        
        private System.Threading.SendOrPostCallback onListInterfaceXrefCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetInterfaceXrefDelegate;
        
        private EndOperationDelegate onEndSetInterfaceXrefDelegate;
        
        private System.Threading.SendOrPostCallback onSetInterfaceXrefCompletedDelegate;
        
        private BeginOperationDelegate onBeginListInterfaceDelegate;
        
        private EndOperationDelegate onEndListInterfaceDelegate;
        
        private System.Threading.SendOrPostCallback onListInterfaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginListPatientsDelegate;
        
        private EndOperationDelegate onEndListPatientsDelegate;
        
        private System.Threading.SendOrPostCallback onListPatientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginListProceduresDelegate;
        
        private EndOperationDelegate onEndListProceduresDelegate;
        
        private System.Threading.SendOrPostCallback onListProceduresCompletedDelegate;
        
        private BeginOperationDelegate onBeginListProvidersDelegate;
        
        private EndOperationDelegate onEndListProvidersDelegate;
        
        private System.Threading.SendOrPostCallback onListProvidersCompletedDelegate;
        
        private BeginOperationDelegate onBeginListReferrersDelegate;
        
        private EndOperationDelegate onEndListReferrersDelegate;
        
        private System.Threading.SendOrPostCallback onListReferrersCompletedDelegate;
        
        private BeginOperationDelegate onBeginMessagesSummaryDelegate;
        
        private EndOperationDelegate onEndMessagesSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onMessagesSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginPhyCoderTotalsDelegate;
        
        private EndOperationDelegate onEndPhyCoderTotalsDelegate;
        
        private System.Threading.SendOrPostCallback onPhyCoderTotalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPhyCoderReportsDelegate;
        
        private EndOperationDelegate onEndPhyCoderReportsDelegate;
        
        private System.Threading.SendOrPostCallback onPhyCoderReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPhyCoderOrdersDelegate;
        
        private EndOperationDelegate onEndPhyCoderOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onPhyCoderOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDemographicsDelegate;
        
        private EndOperationDelegate onEndGetDemographicsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDemographicsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrdersDelegate;
        
        private EndOperationDelegate onEndGetOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportDelegate;
        
        private EndOperationDelegate onEndGetReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderDelegate;
        
        private EndOperationDelegate onEndGetOrderDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportsDelegate;
        
        private EndOperationDelegate onEndGetReportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDuplicateReportsDelegate;
        
        private EndOperationDelegate onEndGetDuplicateReportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDuplicateReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetReportDelegate;
        
        private EndOperationDelegate onEndSetReportDelegate;
        
        private System.Threading.SendOrPostCallback onSetReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateReportDelegate;
        
        private EndOperationDelegate onEndUpdateReportDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginfSplitHL7GPMSDelegate;
        
        private EndOperationDelegate onEndfSplitHL7GPMSDelegate;
        
        private System.Threading.SendOrPostCallback onfSplitHL7GPMSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportsCodedPerDayDelegate;
        
        private EndOperationDelegate onEndGetReportsCodedPerDayDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportsCodedPerDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPendingDelegate;
        
        private EndOperationDelegate onEndSetPendingDelegate;
        
        private System.Threading.SendOrPostCallback onSetPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearPendingDelegate;
        
        private EndOperationDelegate onEndClearPendingDelegate;
        
        private System.Threading.SendOrPostCallback onClearPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginListICD9Delegate;
        
        private EndOperationDelegate onEndListICD9Delegate;
        
        private System.Threading.SendOrPostCallback onListICD9CompletedDelegate;
        
        private BeginOperationDelegate onBeginSetMessagesLogDelegate;
        
        private EndOperationDelegate onEndSetMessagesLogDelegate;
        
        private System.Threading.SendOrPostCallback onSetMessagesLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkDeletedDelegate;
        
        private EndOperationDelegate onEndMarkDeletedDelegate;
        
        private System.Threading.SendOrPostCallback onMarkDeletedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetToCodeDelegate;
        
        private EndOperationDelegate onEndGetToCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetToCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetExamNumberDelegate;
        
        private EndOperationDelegate onEndSetExamNumberDelegate;
        
        private System.Threading.SendOrPostCallback onSetExamNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRadDelegate;
        
        private EndOperationDelegate onEndSetRadDelegate;
        
        private System.Threading.SendOrPostCallback onSetRadCompletedDelegate;
        
        private BeginOperationDelegate onBeginBioImagingReportsDelegate;
        
        private EndOperationDelegate onEndBioImagingReportsDelegate;
        
        private System.Threading.SendOrPostCallback onBioImagingReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoderTotalsDelegate;
        
        private EndOperationDelegate onEndCoderTotalsDelegate;
        
        private System.Threading.SendOrPostCallback onCoderTotalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExamCommentsDelegate;
        
        private EndOperationDelegate onEndGetExamCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetExamCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExamDocumentsDelegate;
        
        private EndOperationDelegate onEndGetExamDocumentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetExamDocumentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public eRISServiceClient() {
        }
        
        public eRISServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public eRISServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public eRISServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public eRISServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetUserNameCompletedEventArgs> GetUserNameCompleted;
        
        public event System.EventHandler<GetCurrentWorkflowCompletedEventArgs> GetCurrentWorkflowCompleted;
        
        public event System.EventHandler<GetCurrentWorkflowDetailsCompletedEventArgs> GetCurrentWorkflowDetailsCompleted;
        
        public event System.EventHandler<GetPermissionsCompletedEventArgs> GetPermissionsCompleted;
        
        public event System.EventHandler<GetPersonnelCompletedEventArgs> GetPersonnelCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPermissionsCompleted;
        
        public event System.EventHandler<GetStudiesReadPerDayCompletedEventArgs> GetStudiesReadPerDayCompleted;
        
        public event System.EventHandler<GetStudiesReadPerHourCompletedEventArgs> GetStudiesReadPerHourCompleted;
        
        public event System.EventHandler<GetRadGroupCompletedEventArgs> GetRadGroupCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertUsersLogCompleted;
        
        public event System.EventHandler<GetUsersLogPerDayCompletedEventArgs> GetUsersLogPerDayCompleted;
        
        public event System.EventHandler<GetUsersLogPerSourceCompletedEventArgs> GetUsersLogPerSourceCompleted;
        
        public event System.EventHandler<GetUsersLogByUserCompletedEventArgs> GetUsersLogByUserCompleted;
        
        public event System.EventHandler<GetMessagesLogPerDayCompletedEventArgs> GetMessagesLogPerDayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetLayoutCompleted;
        
        public event System.EventHandler<GetTurnaroundTimeCompletedEventArgs> GetTurnaroundTimeCompleted;
        
        public event System.EventHandler<GetInterpretationTimeCompletedEventArgs> GetInterpretationTimeCompleted;
        
        public event System.EventHandler<GetPatientLongWaitCompletedEventArgs> GetPatientLongWaitCompleted;
        
        public event System.EventHandler<GetPatientShortWaitCompletedEventArgs> GetPatientShortWaitCompleted;
        
        public event System.EventHandler<GetPatientWaitCompletedEventArgs> GetPatientWaitCompleted;
        
        public event System.EventHandler<GetCompletedPerTechCompletedEventArgs> GetCompletedPerTechCompleted;
        
        public event System.EventHandler<GetRegisteredPatientsCompletedEventArgs> GetRegisteredPatientsCompleted;
        
        public event System.EventHandler<GetRegistrationTimeCompletedEventArgs> GetRegistrationTimeCompleted;
        
        public event System.EventHandler<GetFirstLastAppointmentCompletedEventArgs> GetFirstLastAppointmentCompleted;
        
        public event System.EventHandler<GetScheduledPatientsCompletedEventArgs> GetScheduledPatientsCompleted;
        
        public event System.EventHandler<GetOrdersPendingCompletedEventArgs> GetOrdersPendingCompleted;
        
        public event System.EventHandler<ListOrdersPendingCompletedEventArgs> ListOrdersPendingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetOrdersPendingCompleted;
        
        public event System.EventHandler<GetInterfaceXrefCompletedEventArgs> GetInterfaceXrefCompleted;
        
        public event System.EventHandler<ListInterfaceXrefCompletedEventArgs> ListInterfaceXrefCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetInterfaceXrefCompleted;
        
        public event System.EventHandler<ListInterfaceCompletedEventArgs> ListInterfaceCompleted;
        
        public event System.EventHandler<ListPatientsCompletedEventArgs> ListPatientsCompleted;
        
        public event System.EventHandler<ListProceduresCompletedEventArgs> ListProceduresCompleted;
        
        public event System.EventHandler<ListProvidersCompletedEventArgs> ListProvidersCompleted;
        
        public event System.EventHandler<ListReferrersCompletedEventArgs> ListReferrersCompleted;
        
        public event System.EventHandler<MessagesSummaryCompletedEventArgs> MessagesSummaryCompleted;
        
        public event System.EventHandler<PhyCoderTotalsCompletedEventArgs> PhyCoderTotalsCompleted;
        
        public event System.EventHandler<PhyCoderReportsCompletedEventArgs> PhyCoderReportsCompleted;
        
        public event System.EventHandler<PhyCoderOrdersCompletedEventArgs> PhyCoderOrdersCompleted;
        
        public event System.EventHandler<GetDemographicsCompletedEventArgs> GetDemographicsCompleted;
        
        public event System.EventHandler<GetOrdersCompletedEventArgs> GetOrdersCompleted;
        
        public event System.EventHandler<GetReportCompletedEventArgs> GetReportCompleted;
        
        public event System.EventHandler<GetOrderCompletedEventArgs> GetOrderCompleted;
        
        public event System.EventHandler<GetReportsCompletedEventArgs> GetReportsCompleted;
        
        public event System.EventHandler<GetDuplicateReportsCompletedEventArgs> GetDuplicateReportsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetReportCompleted;
        
        public event System.EventHandler<UpdateReportCompletedEventArgs> UpdateReportCompleted;
        
        public event System.EventHandler<fSplitHL7GPMSCompletedEventArgs> fSplitHL7GPMSCompleted;
        
        public event System.EventHandler<GetReportsCodedPerDayCompletedEventArgs> GetReportsCodedPerDayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPendingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ClearPendingCompleted;
        
        public event System.EventHandler<ListICD9CompletedEventArgs> ListICD9Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetMessagesLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkDeletedCompleted;
        
        public event System.EventHandler<GetToCodeCompletedEventArgs> GetToCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetExamNumberCompleted;
        
        public event System.EventHandler<SetRadCompletedEventArgs> SetRadCompleted;
        
        public event System.EventHandler<BioImagingReportsCompletedEventArgs> BioImagingReportsCompleted;
        
        public event System.EventHandler<CoderTotalsCompletedEventArgs> CoderTotalsCompleted;
        
        public event System.EventHandler<GetExamCommentsCompletedEventArgs> GetExamCommentsCompleted;
        
        public event System.EventHandler<GetExamDocumentsCompletedEventArgs> GetExamDocumentsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetUserName(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserName(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string eRIS.eRISServiceReference.eRISService.EndGetUserName(System.IAsyncResult result) {
            return base.Channel.EndGetUserName(result);
        }
        
        private System.IAsyncResult OnBeginGetUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetUserName(callback, asyncState);
        }
        
        private object[] OnEndGetUserName(System.IAsyncResult result) {
            string retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserNameCompleted(object state) {
            if ((this.GetUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserNameCompleted(this, new GetUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserNameAsync() {
            this.GetUserNameAsync(null);
        }
        
        public void GetUserNameAsync(object userState) {
            if ((this.onBeginGetUserNameDelegate == null)) {
                this.onBeginGetUserNameDelegate = new BeginOperationDelegate(this.OnBeginGetUserName);
            }
            if ((this.onEndGetUserNameDelegate == null)) {
                this.onEndGetUserNameDelegate = new EndOperationDelegate(this.OnEndGetUserName);
            }
            if ((this.onGetUserNameCompletedDelegate == null)) {
                this.onGetUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserNameDelegate, null, this.onEndGetUserNameDelegate, this.onGetUserNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetCurrentWorkflow(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentWorkflow(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult> eRIS.eRISServiceReference.eRISService.EndGetCurrentWorkflow(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentWorkflow(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentWorkflow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetCurrentWorkflow(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentWorkflow(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetCurrentWorkflow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentWorkflowCompleted(object state) {
            if ((this.GetCurrentWorkflowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentWorkflowCompleted(this, new GetCurrentWorkflowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentWorkflowAsync() {
            this.GetCurrentWorkflowAsync(null);
        }
        
        public void GetCurrentWorkflowAsync(object userState) {
            if ((this.onBeginGetCurrentWorkflowDelegate == null)) {
                this.onBeginGetCurrentWorkflowDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentWorkflow);
            }
            if ((this.onEndGetCurrentWorkflowDelegate == null)) {
                this.onEndGetCurrentWorkflowDelegate = new EndOperationDelegate(this.OnEndGetCurrentWorkflow);
            }
            if ((this.onGetCurrentWorkflowCompletedDelegate == null)) {
                this.onGetCurrentWorkflowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentWorkflowCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentWorkflowDelegate, null, this.onEndGetCurrentWorkflowDelegate, this.onGetCurrentWorkflowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetCurrentWorkflowDetails(string chart, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentWorkflowDetails(chart, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult> eRIS.eRISServiceReference.eRISService.EndGetCurrentWorkflowDetails(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentWorkflowDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentWorkflowDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string chart = ((string)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetCurrentWorkflowDetails(chart, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentWorkflowDetails(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetCurrentWorkflowDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentWorkflowDetailsCompleted(object state) {
            if ((this.GetCurrentWorkflowDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentWorkflowDetailsCompleted(this, new GetCurrentWorkflowDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentWorkflowDetailsAsync(string chart) {
            this.GetCurrentWorkflowDetailsAsync(chart, null);
        }
        
        public void GetCurrentWorkflowDetailsAsync(string chart, object userState) {
            if ((this.onBeginGetCurrentWorkflowDetailsDelegate == null)) {
                this.onBeginGetCurrentWorkflowDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentWorkflowDetails);
            }
            if ((this.onEndGetCurrentWorkflowDetailsDelegate == null)) {
                this.onEndGetCurrentWorkflowDetailsDelegate = new EndOperationDelegate(this.OnEndGetCurrentWorkflowDetails);
            }
            if ((this.onGetCurrentWorkflowDetailsCompletedDelegate == null)) {
                this.onGetCurrentWorkflowDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentWorkflowDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentWorkflowDetailsDelegate, new object[] {
                        chart}, this.onEndGetCurrentWorkflowDetailsDelegate, this.onGetCurrentWorkflowDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetPermissions(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPermissions(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult> eRIS.eRISServiceReference.eRISService.EndGetPermissions(System.IAsyncResult result) {
            return base.Channel.EndGetPermissions(result);
        }
        
        private System.IAsyncResult OnBeginGetPermissions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetPermissions(id, callback, asyncState);
        }
        
        private object[] OnEndGetPermissions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetPermissions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPermissionsCompleted(object state) {
            if ((this.GetPermissionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPermissionsCompleted(this, new GetPermissionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPermissionsAsync(int id) {
            this.GetPermissionsAsync(id, null);
        }
        
        public void GetPermissionsAsync(int id, object userState) {
            if ((this.onBeginGetPermissionsDelegate == null)) {
                this.onBeginGetPermissionsDelegate = new BeginOperationDelegate(this.OnBeginGetPermissions);
            }
            if ((this.onEndGetPermissionsDelegate == null)) {
                this.onEndGetPermissionsDelegate = new EndOperationDelegate(this.OnEndGetPermissions);
            }
            if ((this.onGetPermissionsCompletedDelegate == null)) {
                this.onGetPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPermissionsDelegate, new object[] {
                        id}, this.onEndGetPermissionsDelegate, this.onGetPermissionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetPersonnel(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPersonnel(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult> eRIS.eRISServiceReference.eRISService.EndGetPersonnel(System.IAsyncResult result) {
            return base.Channel.EndGetPersonnel(result);
        }
        
        private System.IAsyncResult OnBeginGetPersonnel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetPersonnel(callback, asyncState);
        }
        
        private object[] OnEndGetPersonnel(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetPersonnel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonnelCompleted(object state) {
            if ((this.GetPersonnelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonnelCompleted(this, new GetPersonnelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonnelAsync() {
            this.GetPersonnelAsync(null);
        }
        
        public void GetPersonnelAsync(object userState) {
            if ((this.onBeginGetPersonnelDelegate == null)) {
                this.onBeginGetPersonnelDelegate = new BeginOperationDelegate(this.OnBeginGetPersonnel);
            }
            if ((this.onEndGetPersonnelDelegate == null)) {
                this.onEndGetPersonnelDelegate = new EndOperationDelegate(this.OnEndGetPersonnel);
            }
            if ((this.onGetPersonnelCompletedDelegate == null)) {
                this.onGetPersonnelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonnelCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonnelDelegate, null, this.onEndGetPersonnelDelegate, this.onGetPersonnelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult> eRIS.eRISServiceReference.eRISService.EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginLogin(string username, string password, string ipAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, ipAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult> eRIS.eRISServiceReference.eRISService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string ipAddress = ((string)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginLogin(username, password, ipAddress, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password, string ipAddress) {
            this.LoginAsync(username, password, ipAddress, null);
        }
        
        public void LoginAsync(string username, string password, string ipAddress, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password,
                        ipAddress}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetPermissions(
                    int id, 
                    bool isAdmin, 
                    bool isRISAdmin, 
                    bool isManager, 
                    bool isRadiologist, 
                    bool isRadiologistADI, 
                    bool isTech, 
                    bool isClerk, 
                    bool isTelerad, 
                    bool isPhysician, 
                    bool isPatient, 
                    bool isCoder, 
                    string ShortName, 
                    bool isCoderAssignable, 
                    int RadGroup, 
                    bool isCoderLimited, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSetPermissions(id, isAdmin, isRISAdmin, isManager, isRadiologist, isRadiologistADI, isTech, isClerk, isTelerad, isPhysician, isPatient, isCoder, ShortName, isCoderAssignable, RadGroup, isCoderLimited, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetPermissions(System.IAsyncResult result) {
            base.Channel.EndSetPermissions(result);
        }
        
        private System.IAsyncResult OnBeginSetPermissions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            bool isAdmin = ((bool)(inValues[1]));
            bool isRISAdmin = ((bool)(inValues[2]));
            bool isManager = ((bool)(inValues[3]));
            bool isRadiologist = ((bool)(inValues[4]));
            bool isRadiologistADI = ((bool)(inValues[5]));
            bool isTech = ((bool)(inValues[6]));
            bool isClerk = ((bool)(inValues[7]));
            bool isTelerad = ((bool)(inValues[8]));
            bool isPhysician = ((bool)(inValues[9]));
            bool isPatient = ((bool)(inValues[10]));
            bool isCoder = ((bool)(inValues[11]));
            string ShortName = ((string)(inValues[12]));
            bool isCoderAssignable = ((bool)(inValues[13]));
            int RadGroup = ((int)(inValues[14]));
            bool isCoderLimited = ((bool)(inValues[15]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetPermissions(id, isAdmin, isRISAdmin, isManager, isRadiologist, isRadiologistADI, isTech, isClerk, isTelerad, isPhysician, isPatient, isCoder, ShortName, isCoderAssignable, RadGroup, isCoderLimited, callback, asyncState);
        }
        
        private object[] OnEndSetPermissions(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetPermissions(result);
            return null;
        }
        
        private void OnSetPermissionsCompleted(object state) {
            if ((this.SetPermissionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPermissionsAsync(
                    int id, 
                    bool isAdmin, 
                    bool isRISAdmin, 
                    bool isManager, 
                    bool isRadiologist, 
                    bool isRadiologistADI, 
                    bool isTech, 
                    bool isClerk, 
                    bool isTelerad, 
                    bool isPhysician, 
                    bool isPatient, 
                    bool isCoder, 
                    string ShortName, 
                    bool isCoderAssignable, 
                    int RadGroup, 
                    bool isCoderLimited) {
            this.SetPermissionsAsync(id, isAdmin, isRISAdmin, isManager, isRadiologist, isRadiologistADI, isTech, isClerk, isTelerad, isPhysician, isPatient, isCoder, ShortName, isCoderAssignable, RadGroup, isCoderLimited, null);
        }
        
        public void SetPermissionsAsync(
                    int id, 
                    bool isAdmin, 
                    bool isRISAdmin, 
                    bool isManager, 
                    bool isRadiologist, 
                    bool isRadiologistADI, 
                    bool isTech, 
                    bool isClerk, 
                    bool isTelerad, 
                    bool isPhysician, 
                    bool isPatient, 
                    bool isCoder, 
                    string ShortName, 
                    bool isCoderAssignable, 
                    int RadGroup, 
                    bool isCoderLimited, 
                    object userState) {
            if ((this.onBeginSetPermissionsDelegate == null)) {
                this.onBeginSetPermissionsDelegate = new BeginOperationDelegate(this.OnBeginSetPermissions);
            }
            if ((this.onEndSetPermissionsDelegate == null)) {
                this.onEndSetPermissionsDelegate = new EndOperationDelegate(this.OnEndSetPermissions);
            }
            if ((this.onSetPermissionsCompletedDelegate == null)) {
                this.onSetPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPermissionsCompleted);
            }
            base.InvokeAsync(this.onBeginSetPermissionsDelegate, new object[] {
                        id,
                        isAdmin,
                        isRISAdmin,
                        isManager,
                        isRadiologist,
                        isRadiologistADI,
                        isTech,
                        isClerk,
                        isTelerad,
                        isPhysician,
                        isPatient,
                        isCoder,
                        ShortName,
                        isCoderAssignable,
                        RadGroup,
                        isCoderLimited}, this.onEndSetPermissionsDelegate, this.onSetPermissionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetStudiesReadPerDay(System.DateTime begDate, System.DateTime endDate, int group, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudiesReadPerDay(begDate, endDate, group, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult> eRIS.eRISServiceReference.eRISService.EndGetStudiesReadPerDay(System.IAsyncResult result) {
            return base.Channel.EndGetStudiesReadPerDay(result);
        }
        
        private System.IAsyncResult OnBeginGetStudiesReadPerDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            int group = ((int)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetStudiesReadPerDay(begDate, endDate, group, callback, asyncState);
        }
        
        private object[] OnEndGetStudiesReadPerDay(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetStudiesReadPerDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudiesReadPerDayCompleted(object state) {
            if ((this.GetStudiesReadPerDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudiesReadPerDayCompleted(this, new GetStudiesReadPerDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudiesReadPerDayAsync(System.DateTime begDate, System.DateTime endDate, int group) {
            this.GetStudiesReadPerDayAsync(begDate, endDate, group, null);
        }
        
        public void GetStudiesReadPerDayAsync(System.DateTime begDate, System.DateTime endDate, int group, object userState) {
            if ((this.onBeginGetStudiesReadPerDayDelegate == null)) {
                this.onBeginGetStudiesReadPerDayDelegate = new BeginOperationDelegate(this.OnBeginGetStudiesReadPerDay);
            }
            if ((this.onEndGetStudiesReadPerDayDelegate == null)) {
                this.onEndGetStudiesReadPerDayDelegate = new EndOperationDelegate(this.OnEndGetStudiesReadPerDay);
            }
            if ((this.onGetStudiesReadPerDayCompletedDelegate == null)) {
                this.onGetStudiesReadPerDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudiesReadPerDayCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudiesReadPerDayDelegate, new object[] {
                        begDate,
                        endDate,
                        group}, this.onEndGetStudiesReadPerDayDelegate, this.onGetStudiesReadPerDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetStudiesReadPerHour(System.DateTime begDate, System.DateTime endDate, int rad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudiesReadPerHour(begDate, endDate, rad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult> eRIS.eRISServiceReference.eRISService.EndGetStudiesReadPerHour(System.IAsyncResult result) {
            return base.Channel.EndGetStudiesReadPerHour(result);
        }
        
        private System.IAsyncResult OnBeginGetStudiesReadPerHour(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            int rad = ((int)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetStudiesReadPerHour(begDate, endDate, rad, callback, asyncState);
        }
        
        private object[] OnEndGetStudiesReadPerHour(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetStudiesReadPerHour(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudiesReadPerHourCompleted(object state) {
            if ((this.GetStudiesReadPerHourCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudiesReadPerHourCompleted(this, new GetStudiesReadPerHourCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudiesReadPerHourAsync(System.DateTime begDate, System.DateTime endDate, int rad) {
            this.GetStudiesReadPerHourAsync(begDate, endDate, rad, null);
        }
        
        public void GetStudiesReadPerHourAsync(System.DateTime begDate, System.DateTime endDate, int rad, object userState) {
            if ((this.onBeginGetStudiesReadPerHourDelegate == null)) {
                this.onBeginGetStudiesReadPerHourDelegate = new BeginOperationDelegate(this.OnBeginGetStudiesReadPerHour);
            }
            if ((this.onEndGetStudiesReadPerHourDelegate == null)) {
                this.onEndGetStudiesReadPerHourDelegate = new EndOperationDelegate(this.OnEndGetStudiesReadPerHour);
            }
            if ((this.onGetStudiesReadPerHourCompletedDelegate == null)) {
                this.onGetStudiesReadPerHourCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudiesReadPerHourCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudiesReadPerHourDelegate, new object[] {
                        begDate,
                        endDate,
                        rad}, this.onEndGetStudiesReadPerHourDelegate, this.onGetStudiesReadPerHourCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetRadGroup(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRadGroup(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult> eRIS.eRISServiceReference.eRISService.EndGetRadGroup(System.IAsyncResult result) {
            return base.Channel.EndGetRadGroup(result);
        }
        
        private System.IAsyncResult OnBeginGetRadGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetRadGroup(callback, asyncState);
        }
        
        private object[] OnEndGetRadGroup(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetRadGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRadGroupCompleted(object state) {
            if ((this.GetRadGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRadGroupCompleted(this, new GetRadGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRadGroupAsync() {
            this.GetRadGroupAsync(null);
        }
        
        public void GetRadGroupAsync(object userState) {
            if ((this.onBeginGetRadGroupDelegate == null)) {
                this.onBeginGetRadGroupDelegate = new BeginOperationDelegate(this.OnBeginGetRadGroup);
            }
            if ((this.onEndGetRadGroupDelegate == null)) {
                this.onEndGetRadGroupDelegate = new EndOperationDelegate(this.OnEndGetRadGroup);
            }
            if ((this.onGetRadGroupCompletedDelegate == null)) {
                this.onGetRadGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRadGroupCompleted);
            }
            base.InvokeAsync(this.onBeginGetRadGroupDelegate, null, this.onEndGetRadGroupDelegate, this.onGetRadGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginInsertUsersLog(int sourceID, int createdByID, int typeID, string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertUsersLog(sourceID, createdByID, typeID, description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndInsertUsersLog(System.IAsyncResult result) {
            base.Channel.EndInsertUsersLog(result);
        }
        
        private System.IAsyncResult OnBeginInsertUsersLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sourceID = ((int)(inValues[0]));
            int createdByID = ((int)(inValues[1]));
            int typeID = ((int)(inValues[2]));
            string description = ((string)(inValues[3]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginInsertUsersLog(sourceID, createdByID, typeID, description, callback, asyncState);
        }
        
        private object[] OnEndInsertUsersLog(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndInsertUsersLog(result);
            return null;
        }
        
        private void OnInsertUsersLogCompleted(object state) {
            if ((this.InsertUsersLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertUsersLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertUsersLogAsync(int sourceID, int createdByID, int typeID, string description) {
            this.InsertUsersLogAsync(sourceID, createdByID, typeID, description, null);
        }
        
        public void InsertUsersLogAsync(int sourceID, int createdByID, int typeID, string description, object userState) {
            if ((this.onBeginInsertUsersLogDelegate == null)) {
                this.onBeginInsertUsersLogDelegate = new BeginOperationDelegate(this.OnBeginInsertUsersLog);
            }
            if ((this.onEndInsertUsersLogDelegate == null)) {
                this.onEndInsertUsersLogDelegate = new EndOperationDelegate(this.OnEndInsertUsersLog);
            }
            if ((this.onInsertUsersLogCompletedDelegate == null)) {
                this.onInsertUsersLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertUsersLogCompleted);
            }
            base.InvokeAsync(this.onBeginInsertUsersLogDelegate, new object[] {
                        sourceID,
                        createdByID,
                        typeID,
                        description}, this.onEndInsertUsersLogDelegate, this.onInsertUsersLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetUsersLogPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersLogPerDay(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult> eRIS.eRISServiceReference.eRISService.EndGetUsersLogPerDay(System.IAsyncResult result) {
            return base.Channel.EndGetUsersLogPerDay(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersLogPerDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetUsersLogPerDay(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetUsersLogPerDay(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetUsersLogPerDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersLogPerDayCompleted(object state) {
            if ((this.GetUsersLogPerDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersLogPerDayCompleted(this, new GetUsersLogPerDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersLogPerDayAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetUsersLogPerDayAsync(begDate, endDate, null);
        }
        
        public void GetUsersLogPerDayAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetUsersLogPerDayDelegate == null)) {
                this.onBeginGetUsersLogPerDayDelegate = new BeginOperationDelegate(this.OnBeginGetUsersLogPerDay);
            }
            if ((this.onEndGetUsersLogPerDayDelegate == null)) {
                this.onEndGetUsersLogPerDayDelegate = new EndOperationDelegate(this.OnEndGetUsersLogPerDay);
            }
            if ((this.onGetUsersLogPerDayCompletedDelegate == null)) {
                this.onGetUsersLogPerDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersLogPerDayCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersLogPerDayDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetUsersLogPerDayDelegate, this.onGetUsersLogPerDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetUsersLogPerSource(int SourceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersLogPerSource(SourceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult> eRIS.eRISServiceReference.eRISService.EndGetUsersLogPerSource(System.IAsyncResult result) {
            return base.Channel.EndGetUsersLogPerSource(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersLogPerSource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int SourceID = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetUsersLogPerSource(SourceID, callback, asyncState);
        }
        
        private object[] OnEndGetUsersLogPerSource(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetUsersLogPerSource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersLogPerSourceCompleted(object state) {
            if ((this.GetUsersLogPerSourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersLogPerSourceCompleted(this, new GetUsersLogPerSourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersLogPerSourceAsync(int SourceID) {
            this.GetUsersLogPerSourceAsync(SourceID, null);
        }
        
        public void GetUsersLogPerSourceAsync(int SourceID, object userState) {
            if ((this.onBeginGetUsersLogPerSourceDelegate == null)) {
                this.onBeginGetUsersLogPerSourceDelegate = new BeginOperationDelegate(this.OnBeginGetUsersLogPerSource);
            }
            if ((this.onEndGetUsersLogPerSourceDelegate == null)) {
                this.onEndGetUsersLogPerSourceDelegate = new EndOperationDelegate(this.OnEndGetUsersLogPerSource);
            }
            if ((this.onGetUsersLogPerSourceCompletedDelegate == null)) {
                this.onGetUsersLogPerSourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersLogPerSourceCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersLogPerSourceDelegate, new object[] {
                        SourceID}, this.onEndGetUsersLogPerSourceDelegate, this.onGetUsersLogPerSourceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetUsersLogByUser(int userID, System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersLogByUser(userID, begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult> eRIS.eRISServiceReference.eRISService.EndGetUsersLogByUser(System.IAsyncResult result) {
            return base.Channel.EndGetUsersLogByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersLogByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            System.DateTime begDate = ((System.DateTime)(inValues[1]));
            System.DateTime endDate = ((System.DateTime)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetUsersLogByUser(userID, begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetUsersLogByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetUsersLogByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersLogByUserCompleted(object state) {
            if ((this.GetUsersLogByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersLogByUserCompleted(this, new GetUsersLogByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersLogByUserAsync(int userID, System.DateTime begDate, System.DateTime endDate) {
            this.GetUsersLogByUserAsync(userID, begDate, endDate, null);
        }
        
        public void GetUsersLogByUserAsync(int userID, System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetUsersLogByUserDelegate == null)) {
                this.onBeginGetUsersLogByUserDelegate = new BeginOperationDelegate(this.OnBeginGetUsersLogByUser);
            }
            if ((this.onEndGetUsersLogByUserDelegate == null)) {
                this.onEndGetUsersLogByUserDelegate = new EndOperationDelegate(this.OnEndGetUsersLogByUser);
            }
            if ((this.onGetUsersLogByUserCompletedDelegate == null)) {
                this.onGetUsersLogByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersLogByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersLogByUserDelegate, new object[] {
                        userID,
                        begDate,
                        endDate}, this.onEndGetUsersLogByUserDelegate, this.onGetUsersLogByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetMessagesLogPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessagesLogPerDay(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult> eRIS.eRISServiceReference.eRISService.EndGetMessagesLogPerDay(System.IAsyncResult result) {
            return base.Channel.EndGetMessagesLogPerDay(result);
        }
        
        private System.IAsyncResult OnBeginGetMessagesLogPerDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetMessagesLogPerDay(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetMessagesLogPerDay(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetMessagesLogPerDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessagesLogPerDayCompleted(object state) {
            if ((this.GetMessagesLogPerDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessagesLogPerDayCompleted(this, new GetMessagesLogPerDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessagesLogPerDayAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetMessagesLogPerDayAsync(begDate, endDate, null);
        }
        
        public void GetMessagesLogPerDayAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetMessagesLogPerDayDelegate == null)) {
                this.onBeginGetMessagesLogPerDayDelegate = new BeginOperationDelegate(this.OnBeginGetMessagesLogPerDay);
            }
            if ((this.onEndGetMessagesLogPerDayDelegate == null)) {
                this.onEndGetMessagesLogPerDayDelegate = new EndOperationDelegate(this.OnEndGetMessagesLogPerDay);
            }
            if ((this.onGetMessagesLogPerDayCompletedDelegate == null)) {
                this.onGetMessagesLogPerDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessagesLogPerDayCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessagesLogPerDayDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetMessagesLogPerDayDelegate, this.onGetMessagesLogPerDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetLayout(int id, string layout, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetLayout(id, layout, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetLayout(System.IAsyncResult result) {
            base.Channel.EndSetLayout(result);
        }
        
        private System.IAsyncResult OnBeginSetLayout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string layout = ((string)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetLayout(id, layout, callback, asyncState);
        }
        
        private object[] OnEndSetLayout(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetLayout(result);
            return null;
        }
        
        private void OnSetLayoutCompleted(object state) {
            if ((this.SetLayoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLayoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetLayoutAsync(int id, string layout) {
            this.SetLayoutAsync(id, layout, null);
        }
        
        public void SetLayoutAsync(int id, string layout, object userState) {
            if ((this.onBeginSetLayoutDelegate == null)) {
                this.onBeginSetLayoutDelegate = new BeginOperationDelegate(this.OnBeginSetLayout);
            }
            if ((this.onEndSetLayoutDelegate == null)) {
                this.onEndSetLayoutDelegate = new EndOperationDelegate(this.OnEndSetLayout);
            }
            if ((this.onSetLayoutCompletedDelegate == null)) {
                this.onSetLayoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLayoutCompleted);
            }
            base.InvokeAsync(this.onBeginSetLayoutDelegate, new object[] {
                        id,
                        layout}, this.onEndSetLayoutDelegate, this.onSetLayoutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetTurnaroundTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTurnaroundTime(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult> eRIS.eRISServiceReference.eRISService.EndGetTurnaroundTime(System.IAsyncResult result) {
            return base.Channel.EndGetTurnaroundTime(result);
        }
        
        private System.IAsyncResult OnBeginGetTurnaroundTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetTurnaroundTime(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTurnaroundTime(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetTurnaroundTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTurnaroundTimeCompleted(object state) {
            if ((this.GetTurnaroundTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTurnaroundTimeCompleted(this, new GetTurnaroundTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTurnaroundTimeAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetTurnaroundTimeAsync(begDate, endDate, null);
        }
        
        public void GetTurnaroundTimeAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetTurnaroundTimeDelegate == null)) {
                this.onBeginGetTurnaroundTimeDelegate = new BeginOperationDelegate(this.OnBeginGetTurnaroundTime);
            }
            if ((this.onEndGetTurnaroundTimeDelegate == null)) {
                this.onEndGetTurnaroundTimeDelegate = new EndOperationDelegate(this.OnEndGetTurnaroundTime);
            }
            if ((this.onGetTurnaroundTimeCompletedDelegate == null)) {
                this.onGetTurnaroundTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTurnaroundTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetTurnaroundTimeDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetTurnaroundTimeDelegate, this.onGetTurnaroundTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetInterpretationTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInterpretationTime(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult> eRIS.eRISServiceReference.eRISService.EndGetInterpretationTime(System.IAsyncResult result) {
            return base.Channel.EndGetInterpretationTime(result);
        }
        
        private System.IAsyncResult OnBeginGetInterpretationTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetInterpretationTime(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetInterpretationTime(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetInterpretationTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInterpretationTimeCompleted(object state) {
            if ((this.GetInterpretationTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInterpretationTimeCompleted(this, new GetInterpretationTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInterpretationTimeAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetInterpretationTimeAsync(begDate, endDate, null);
        }
        
        public void GetInterpretationTimeAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetInterpretationTimeDelegate == null)) {
                this.onBeginGetInterpretationTimeDelegate = new BeginOperationDelegate(this.OnBeginGetInterpretationTime);
            }
            if ((this.onEndGetInterpretationTimeDelegate == null)) {
                this.onEndGetInterpretationTimeDelegate = new EndOperationDelegate(this.OnEndGetInterpretationTime);
            }
            if ((this.onGetInterpretationTimeCompletedDelegate == null)) {
                this.onGetInterpretationTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInterpretationTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetInterpretationTimeDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetInterpretationTimeDelegate, this.onGetInterpretationTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetPatientLongWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatientLongWait(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult> eRIS.eRISServiceReference.eRISService.EndGetPatientLongWait(System.IAsyncResult result) {
            return base.Channel.EndGetPatientLongWait(result);
        }
        
        private System.IAsyncResult OnBeginGetPatientLongWait(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetPatientLongWait(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetPatientLongWait(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetPatientLongWait(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatientLongWaitCompleted(object state) {
            if ((this.GetPatientLongWaitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatientLongWaitCompleted(this, new GetPatientLongWaitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatientLongWaitAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetPatientLongWaitAsync(begDate, endDate, null);
        }
        
        public void GetPatientLongWaitAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetPatientLongWaitDelegate == null)) {
                this.onBeginGetPatientLongWaitDelegate = new BeginOperationDelegate(this.OnBeginGetPatientLongWait);
            }
            if ((this.onEndGetPatientLongWaitDelegate == null)) {
                this.onEndGetPatientLongWaitDelegate = new EndOperationDelegate(this.OnEndGetPatientLongWait);
            }
            if ((this.onGetPatientLongWaitCompletedDelegate == null)) {
                this.onGetPatientLongWaitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatientLongWaitCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatientLongWaitDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetPatientLongWaitDelegate, this.onGetPatientLongWaitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetPatientShortWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatientShortWait(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult> eRIS.eRISServiceReference.eRISService.EndGetPatientShortWait(System.IAsyncResult result) {
            return base.Channel.EndGetPatientShortWait(result);
        }
        
        private System.IAsyncResult OnBeginGetPatientShortWait(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetPatientShortWait(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetPatientShortWait(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetPatientShortWait(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatientShortWaitCompleted(object state) {
            if ((this.GetPatientShortWaitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatientShortWaitCompleted(this, new GetPatientShortWaitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatientShortWaitAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetPatientShortWaitAsync(begDate, endDate, null);
        }
        
        public void GetPatientShortWaitAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetPatientShortWaitDelegate == null)) {
                this.onBeginGetPatientShortWaitDelegate = new BeginOperationDelegate(this.OnBeginGetPatientShortWait);
            }
            if ((this.onEndGetPatientShortWaitDelegate == null)) {
                this.onEndGetPatientShortWaitDelegate = new EndOperationDelegate(this.OnEndGetPatientShortWait);
            }
            if ((this.onGetPatientShortWaitCompletedDelegate == null)) {
                this.onGetPatientShortWaitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatientShortWaitCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatientShortWaitDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetPatientShortWaitDelegate, this.onGetPatientShortWaitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetPatientWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatientWait(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult> eRIS.eRISServiceReference.eRISService.EndGetPatientWait(System.IAsyncResult result) {
            return base.Channel.EndGetPatientWait(result);
        }
        
        private System.IAsyncResult OnBeginGetPatientWait(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetPatientWait(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetPatientWait(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetPatientWait(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatientWaitCompleted(object state) {
            if ((this.GetPatientWaitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatientWaitCompleted(this, new GetPatientWaitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatientWaitAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetPatientWaitAsync(begDate, endDate, null);
        }
        
        public void GetPatientWaitAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetPatientWaitDelegate == null)) {
                this.onBeginGetPatientWaitDelegate = new BeginOperationDelegate(this.OnBeginGetPatientWait);
            }
            if ((this.onEndGetPatientWaitDelegate == null)) {
                this.onEndGetPatientWaitDelegate = new EndOperationDelegate(this.OnEndGetPatientWait);
            }
            if ((this.onGetPatientWaitCompletedDelegate == null)) {
                this.onGetPatientWaitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatientWaitCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatientWaitDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetPatientWaitDelegate, this.onGetPatientWaitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetCompletedPerTech(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompletedPerTech(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult> eRIS.eRISServiceReference.eRISService.EndGetCompletedPerTech(System.IAsyncResult result) {
            return base.Channel.EndGetCompletedPerTech(result);
        }
        
        private System.IAsyncResult OnBeginGetCompletedPerTech(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetCompletedPerTech(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetCompletedPerTech(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetCompletedPerTech(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompletedPerTechCompleted(object state) {
            if ((this.GetCompletedPerTechCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompletedPerTechCompleted(this, new GetCompletedPerTechCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompletedPerTechAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetCompletedPerTechAsync(begDate, endDate, null);
        }
        
        public void GetCompletedPerTechAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetCompletedPerTechDelegate == null)) {
                this.onBeginGetCompletedPerTechDelegate = new BeginOperationDelegate(this.OnBeginGetCompletedPerTech);
            }
            if ((this.onEndGetCompletedPerTechDelegate == null)) {
                this.onEndGetCompletedPerTechDelegate = new EndOperationDelegate(this.OnEndGetCompletedPerTech);
            }
            if ((this.onGetCompletedPerTechCompletedDelegate == null)) {
                this.onGetCompletedPerTechCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompletedPerTechCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompletedPerTechDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetCompletedPerTechDelegate, this.onGetCompletedPerTechCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetRegisteredPatients(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegisteredPatients(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult> eRIS.eRISServiceReference.eRISService.EndGetRegisteredPatients(System.IAsyncResult result) {
            return base.Channel.EndGetRegisteredPatients(result);
        }
        
        private System.IAsyncResult OnBeginGetRegisteredPatients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetRegisteredPatients(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetRegisteredPatients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetRegisteredPatients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRegisteredPatientsCompleted(object state) {
            if ((this.GetRegisteredPatientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegisteredPatientsCompleted(this, new GetRegisteredPatientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegisteredPatientsAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetRegisteredPatientsAsync(begDate, endDate, null);
        }
        
        public void GetRegisteredPatientsAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetRegisteredPatientsDelegate == null)) {
                this.onBeginGetRegisteredPatientsDelegate = new BeginOperationDelegate(this.OnBeginGetRegisteredPatients);
            }
            if ((this.onEndGetRegisteredPatientsDelegate == null)) {
                this.onEndGetRegisteredPatientsDelegate = new EndOperationDelegate(this.OnEndGetRegisteredPatients);
            }
            if ((this.onGetRegisteredPatientsCompletedDelegate == null)) {
                this.onGetRegisteredPatientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegisteredPatientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegisteredPatientsDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetRegisteredPatientsDelegate, this.onGetRegisteredPatientsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetRegistrationTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegistrationTime(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult> eRIS.eRISServiceReference.eRISService.EndGetRegistrationTime(System.IAsyncResult result) {
            return base.Channel.EndGetRegistrationTime(result);
        }
        
        private System.IAsyncResult OnBeginGetRegistrationTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetRegistrationTime(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetRegistrationTime(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetRegistrationTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRegistrationTimeCompleted(object state) {
            if ((this.GetRegistrationTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegistrationTimeCompleted(this, new GetRegistrationTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegistrationTimeAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetRegistrationTimeAsync(begDate, endDate, null);
        }
        
        public void GetRegistrationTimeAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetRegistrationTimeDelegate == null)) {
                this.onBeginGetRegistrationTimeDelegate = new BeginOperationDelegate(this.OnBeginGetRegistrationTime);
            }
            if ((this.onEndGetRegistrationTimeDelegate == null)) {
                this.onEndGetRegistrationTimeDelegate = new EndOperationDelegate(this.OnEndGetRegistrationTime);
            }
            if ((this.onGetRegistrationTimeCompletedDelegate == null)) {
                this.onGetRegistrationTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegistrationTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegistrationTimeDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetRegistrationTimeDelegate, this.onGetRegistrationTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetFirstLastAppointment(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFirstLastAppointment(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult> eRIS.eRISServiceReference.eRISService.EndGetFirstLastAppointment(System.IAsyncResult result) {
            return base.Channel.EndGetFirstLastAppointment(result);
        }
        
        private System.IAsyncResult OnBeginGetFirstLastAppointment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetFirstLastAppointment(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetFirstLastAppointment(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetFirstLastAppointment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFirstLastAppointmentCompleted(object state) {
            if ((this.GetFirstLastAppointmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFirstLastAppointmentCompleted(this, new GetFirstLastAppointmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFirstLastAppointmentAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetFirstLastAppointmentAsync(begDate, endDate, null);
        }
        
        public void GetFirstLastAppointmentAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetFirstLastAppointmentDelegate == null)) {
                this.onBeginGetFirstLastAppointmentDelegate = new BeginOperationDelegate(this.OnBeginGetFirstLastAppointment);
            }
            if ((this.onEndGetFirstLastAppointmentDelegate == null)) {
                this.onEndGetFirstLastAppointmentDelegate = new EndOperationDelegate(this.OnEndGetFirstLastAppointment);
            }
            if ((this.onGetFirstLastAppointmentCompletedDelegate == null)) {
                this.onGetFirstLastAppointmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFirstLastAppointmentCompleted);
            }
            base.InvokeAsync(this.onBeginGetFirstLastAppointmentDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetFirstLastAppointmentDelegate, this.onGetFirstLastAppointmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetScheduledPatients(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetScheduledPatients(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult> eRIS.eRISServiceReference.eRISService.EndGetScheduledPatients(System.IAsyncResult result) {
            return base.Channel.EndGetScheduledPatients(result);
        }
        
        private System.IAsyncResult OnBeginGetScheduledPatients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetScheduledPatients(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetScheduledPatients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetScheduledPatients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScheduledPatientsCompleted(object state) {
            if ((this.GetScheduledPatientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScheduledPatientsCompleted(this, new GetScheduledPatientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScheduledPatientsAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetScheduledPatientsAsync(begDate, endDate, null);
        }
        
        public void GetScheduledPatientsAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetScheduledPatientsDelegate == null)) {
                this.onBeginGetScheduledPatientsDelegate = new BeginOperationDelegate(this.OnBeginGetScheduledPatients);
            }
            if ((this.onEndGetScheduledPatientsDelegate == null)) {
                this.onEndGetScheduledPatientsDelegate = new EndOperationDelegate(this.OnEndGetScheduledPatients);
            }
            if ((this.onGetScheduledPatientsCompletedDelegate == null)) {
                this.onGetScheduledPatientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScheduledPatientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetScheduledPatientsDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetScheduledPatientsDelegate, this.onGetScheduledPatientsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetOrdersPending(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrdersPending(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult> eRIS.eRISServiceReference.eRISService.EndGetOrdersPending(System.IAsyncResult result) {
            return base.Channel.EndGetOrdersPending(result);
        }
        
        private System.IAsyncResult OnBeginGetOrdersPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetOrdersPending(id, callback, asyncState);
        }
        
        private object[] OnEndGetOrdersPending(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetOrdersPending(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrdersPendingCompleted(object state) {
            if ((this.GetOrdersPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrdersPendingCompleted(this, new GetOrdersPendingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrdersPendingAsync(int id) {
            this.GetOrdersPendingAsync(id, null);
        }
        
        public void GetOrdersPendingAsync(int id, object userState) {
            if ((this.onBeginGetOrdersPendingDelegate == null)) {
                this.onBeginGetOrdersPendingDelegate = new BeginOperationDelegate(this.OnBeginGetOrdersPending);
            }
            if ((this.onEndGetOrdersPendingDelegate == null)) {
                this.onEndGetOrdersPendingDelegate = new EndOperationDelegate(this.OnEndGetOrdersPending);
            }
            if ((this.onGetOrdersPendingCompletedDelegate == null)) {
                this.onGetOrdersPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrdersPendingCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrdersPendingDelegate, new object[] {
                        id}, this.onEndGetOrdersPendingDelegate, this.onGetOrdersPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListOrdersPending(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListOrdersPending(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult> eRIS.eRISServiceReference.eRISService.EndListOrdersPending(System.IAsyncResult result) {
            return base.Channel.EndListOrdersPending(result);
        }
        
        private System.IAsyncResult OnBeginListOrdersPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListOrdersPending(callback, asyncState);
        }
        
        private object[] OnEndListOrdersPending(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListOrdersPending(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListOrdersPendingCompleted(object state) {
            if ((this.ListOrdersPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListOrdersPendingCompleted(this, new ListOrdersPendingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListOrdersPendingAsync() {
            this.ListOrdersPendingAsync(null);
        }
        
        public void ListOrdersPendingAsync(object userState) {
            if ((this.onBeginListOrdersPendingDelegate == null)) {
                this.onBeginListOrdersPendingDelegate = new BeginOperationDelegate(this.OnBeginListOrdersPending);
            }
            if ((this.onEndListOrdersPendingDelegate == null)) {
                this.onEndListOrdersPendingDelegate = new EndOperationDelegate(this.OnEndListOrdersPending);
            }
            if ((this.onListOrdersPendingCompletedDelegate == null)) {
                this.onListOrdersPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListOrdersPendingCompleted);
            }
            base.InvokeAsync(this.onBeginListOrdersPendingDelegate, null, this.onEndListOrdersPendingDelegate, this.onListOrdersPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetOrdersPending(int id, char status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetOrdersPending(id, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetOrdersPending(System.IAsyncResult result) {
            base.Channel.EndSetOrdersPending(result);
        }
        
        private System.IAsyncResult OnBeginSetOrdersPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            char status = ((char)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetOrdersPending(id, status, callback, asyncState);
        }
        
        private object[] OnEndSetOrdersPending(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetOrdersPending(result);
            return null;
        }
        
        private void OnSetOrdersPendingCompleted(object state) {
            if ((this.SetOrdersPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetOrdersPendingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetOrdersPendingAsync(int id, char status) {
            this.SetOrdersPendingAsync(id, status, null);
        }
        
        public void SetOrdersPendingAsync(int id, char status, object userState) {
            if ((this.onBeginSetOrdersPendingDelegate == null)) {
                this.onBeginSetOrdersPendingDelegate = new BeginOperationDelegate(this.OnBeginSetOrdersPending);
            }
            if ((this.onEndSetOrdersPendingDelegate == null)) {
                this.onEndSetOrdersPendingDelegate = new EndOperationDelegate(this.OnEndSetOrdersPending);
            }
            if ((this.onSetOrdersPendingCompletedDelegate == null)) {
                this.onSetOrdersPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetOrdersPendingCompleted);
            }
            base.InvokeAsync(this.onBeginSetOrdersPendingDelegate, new object[] {
                        id,
                        status}, this.onEndSetOrdersPendingDelegate, this.onSetOrdersPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetInterfaceXref(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInterfaceXref(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult> eRIS.eRISServiceReference.eRISService.EndGetInterfaceXref(System.IAsyncResult result) {
            return base.Channel.EndGetInterfaceXref(result);
        }
        
        private System.IAsyncResult OnBeginGetInterfaceXref(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetInterfaceXref(id, callback, asyncState);
        }
        
        private object[] OnEndGetInterfaceXref(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetInterfaceXref(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInterfaceXrefCompleted(object state) {
            if ((this.GetInterfaceXrefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInterfaceXrefCompleted(this, new GetInterfaceXrefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInterfaceXrefAsync(int id) {
            this.GetInterfaceXrefAsync(id, null);
        }
        
        public void GetInterfaceXrefAsync(int id, object userState) {
            if ((this.onBeginGetInterfaceXrefDelegate == null)) {
                this.onBeginGetInterfaceXrefDelegate = new BeginOperationDelegate(this.OnBeginGetInterfaceXref);
            }
            if ((this.onEndGetInterfaceXrefDelegate == null)) {
                this.onEndGetInterfaceXrefDelegate = new EndOperationDelegate(this.OnEndGetInterfaceXref);
            }
            if ((this.onGetInterfaceXrefCompletedDelegate == null)) {
                this.onGetInterfaceXrefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInterfaceXrefCompleted);
            }
            base.InvokeAsync(this.onBeginGetInterfaceXrefDelegate, new object[] {
                        id}, this.onEndGetInterfaceXrefDelegate, this.onGetInterfaceXrefCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListInterfaceXref(char xType, string xFacility, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListInterfaceXref(xType, xFacility, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult> eRIS.eRISServiceReference.eRISService.EndListInterfaceXref(System.IAsyncResult result) {
            return base.Channel.EndListInterfaceXref(result);
        }
        
        private System.IAsyncResult OnBeginListInterfaceXref(object[] inValues, System.AsyncCallback callback, object asyncState) {
            char xType = ((char)(inValues[0]));
            string xFacility = ((string)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListInterfaceXref(xType, xFacility, callback, asyncState);
        }
        
        private object[] OnEndListInterfaceXref(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListInterfaceXref(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListInterfaceXrefCompleted(object state) {
            if ((this.ListInterfaceXrefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListInterfaceXrefCompleted(this, new ListInterfaceXrefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListInterfaceXrefAsync(char xType, string xFacility) {
            this.ListInterfaceXrefAsync(xType, xFacility, null);
        }
        
        public void ListInterfaceXrefAsync(char xType, string xFacility, object userState) {
            if ((this.onBeginListInterfaceXrefDelegate == null)) {
                this.onBeginListInterfaceXrefDelegate = new BeginOperationDelegate(this.OnBeginListInterfaceXref);
            }
            if ((this.onEndListInterfaceXrefDelegate == null)) {
                this.onEndListInterfaceXrefDelegate = new EndOperationDelegate(this.OnEndListInterfaceXref);
            }
            if ((this.onListInterfaceXrefCompletedDelegate == null)) {
                this.onListInterfaceXrefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListInterfaceXrefCompleted);
            }
            base.InvokeAsync(this.onBeginListInterfaceXrefDelegate, new object[] {
                        xType,
                        xFacility}, this.onEndListInterfaceXrefDelegate, this.onListInterfaceXrefCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetInterfaceXref(int id, char xType, string xFacility, string xSendingValue, string xReceivingValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetInterfaceXref(id, xType, xFacility, xSendingValue, xReceivingValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetInterfaceXref(System.IAsyncResult result) {
            base.Channel.EndSetInterfaceXref(result);
        }
        
        private System.IAsyncResult OnBeginSetInterfaceXref(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            char xType = ((char)(inValues[1]));
            string xFacility = ((string)(inValues[2]));
            string xSendingValue = ((string)(inValues[3]));
            string xReceivingValue = ((string)(inValues[4]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetInterfaceXref(id, xType, xFacility, xSendingValue, xReceivingValue, callback, asyncState);
        }
        
        private object[] OnEndSetInterfaceXref(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetInterfaceXref(result);
            return null;
        }
        
        private void OnSetInterfaceXrefCompleted(object state) {
            if ((this.SetInterfaceXrefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetInterfaceXrefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetInterfaceXrefAsync(int id, char xType, string xFacility, string xSendingValue, string xReceivingValue) {
            this.SetInterfaceXrefAsync(id, xType, xFacility, xSendingValue, xReceivingValue, null);
        }
        
        public void SetInterfaceXrefAsync(int id, char xType, string xFacility, string xSendingValue, string xReceivingValue, object userState) {
            if ((this.onBeginSetInterfaceXrefDelegate == null)) {
                this.onBeginSetInterfaceXrefDelegate = new BeginOperationDelegate(this.OnBeginSetInterfaceXref);
            }
            if ((this.onEndSetInterfaceXrefDelegate == null)) {
                this.onEndSetInterfaceXrefDelegate = new EndOperationDelegate(this.OnEndSetInterfaceXref);
            }
            if ((this.onSetInterfaceXrefCompletedDelegate == null)) {
                this.onSetInterfaceXrefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetInterfaceXrefCompleted);
            }
            base.InvokeAsync(this.onBeginSetInterfaceXrefDelegate, new object[] {
                        id,
                        xType,
                        xFacility,
                        xSendingValue,
                        xReceivingValue}, this.onEndSetInterfaceXrefDelegate, this.onSetInterfaceXrefCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListInterface(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListInterface(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult> eRIS.eRISServiceReference.eRISService.EndListInterface(System.IAsyncResult result) {
            return base.Channel.EndListInterface(result);
        }
        
        private System.IAsyncResult OnBeginListInterface(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListInterface(callback, asyncState);
        }
        
        private object[] OnEndListInterface(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListInterface(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListInterfaceCompleted(object state) {
            if ((this.ListInterfaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListInterfaceCompleted(this, new ListInterfaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListInterfaceAsync() {
            this.ListInterfaceAsync(null);
        }
        
        public void ListInterfaceAsync(object userState) {
            if ((this.onBeginListInterfaceDelegate == null)) {
                this.onBeginListInterfaceDelegate = new BeginOperationDelegate(this.OnBeginListInterface);
            }
            if ((this.onEndListInterfaceDelegate == null)) {
                this.onEndListInterfaceDelegate = new EndOperationDelegate(this.OnEndListInterface);
            }
            if ((this.onListInterfaceCompletedDelegate == null)) {
                this.onListInterfaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListInterfaceCompleted);
            }
            base.InvokeAsync(this.onBeginListInterfaceDelegate, null, this.onEndListInterfaceDelegate, this.onListInterfaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListPatients(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListPatients(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult> eRIS.eRISServiceReference.eRISService.EndListPatients(System.IAsyncResult result) {
            return base.Channel.EndListPatients(result);
        }
        
        private System.IAsyncResult OnBeginListPatients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListPatients(callback, asyncState);
        }
        
        private object[] OnEndListPatients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListPatients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListPatientsCompleted(object state) {
            if ((this.ListPatientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListPatientsCompleted(this, new ListPatientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListPatientsAsync() {
            this.ListPatientsAsync(null);
        }
        
        public void ListPatientsAsync(object userState) {
            if ((this.onBeginListPatientsDelegate == null)) {
                this.onBeginListPatientsDelegate = new BeginOperationDelegate(this.OnBeginListPatients);
            }
            if ((this.onEndListPatientsDelegate == null)) {
                this.onEndListPatientsDelegate = new EndOperationDelegate(this.OnEndListPatients);
            }
            if ((this.onListPatientsCompletedDelegate == null)) {
                this.onListPatientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListPatientsCompleted);
            }
            base.InvokeAsync(this.onBeginListPatientsDelegate, null, this.onEndListPatientsDelegate, this.onListPatientsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListProcedures(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListProcedures(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult> eRIS.eRISServiceReference.eRISService.EndListProcedures(System.IAsyncResult result) {
            return base.Channel.EndListProcedures(result);
        }
        
        private System.IAsyncResult OnBeginListProcedures(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListProcedures(callback, asyncState);
        }
        
        private object[] OnEndListProcedures(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListProcedures(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListProceduresCompleted(object state) {
            if ((this.ListProceduresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListProceduresCompleted(this, new ListProceduresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListProceduresAsync() {
            this.ListProceduresAsync(null);
        }
        
        public void ListProceduresAsync(object userState) {
            if ((this.onBeginListProceduresDelegate == null)) {
                this.onBeginListProceduresDelegate = new BeginOperationDelegate(this.OnBeginListProcedures);
            }
            if ((this.onEndListProceduresDelegate == null)) {
                this.onEndListProceduresDelegate = new EndOperationDelegate(this.OnEndListProcedures);
            }
            if ((this.onListProceduresCompletedDelegate == null)) {
                this.onListProceduresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListProceduresCompleted);
            }
            base.InvokeAsync(this.onBeginListProceduresDelegate, null, this.onEndListProceduresDelegate, this.onListProceduresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListProviders(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListProviders(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult> eRIS.eRISServiceReference.eRISService.EndListProviders(System.IAsyncResult result) {
            return base.Channel.EndListProviders(result);
        }
        
        private System.IAsyncResult OnBeginListProviders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListProviders(callback, asyncState);
        }
        
        private object[] OnEndListProviders(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListProviders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListProvidersCompleted(object state) {
            if ((this.ListProvidersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListProvidersCompleted(this, new ListProvidersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListProvidersAsync() {
            this.ListProvidersAsync(null);
        }
        
        public void ListProvidersAsync(object userState) {
            if ((this.onBeginListProvidersDelegate == null)) {
                this.onBeginListProvidersDelegate = new BeginOperationDelegate(this.OnBeginListProviders);
            }
            if ((this.onEndListProvidersDelegate == null)) {
                this.onEndListProvidersDelegate = new EndOperationDelegate(this.OnEndListProviders);
            }
            if ((this.onListProvidersCompletedDelegate == null)) {
                this.onListProvidersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListProvidersCompleted);
            }
            base.InvokeAsync(this.onBeginListProvidersDelegate, null, this.onEndListProvidersDelegate, this.onListProvidersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListReferrers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListReferrers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult> eRIS.eRISServiceReference.eRISService.EndListReferrers(System.IAsyncResult result) {
            return base.Channel.EndListReferrers(result);
        }
        
        private System.IAsyncResult OnBeginListReferrers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListReferrers(callback, asyncState);
        }
        
        private object[] OnEndListReferrers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListReferrers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListReferrersCompleted(object state) {
            if ((this.ListReferrersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListReferrersCompleted(this, new ListReferrersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListReferrersAsync() {
            this.ListReferrersAsync(null);
        }
        
        public void ListReferrersAsync(object userState) {
            if ((this.onBeginListReferrersDelegate == null)) {
                this.onBeginListReferrersDelegate = new BeginOperationDelegate(this.OnBeginListReferrers);
            }
            if ((this.onEndListReferrersDelegate == null)) {
                this.onEndListReferrersDelegate = new EndOperationDelegate(this.OnEndListReferrers);
            }
            if ((this.onListReferrersCompletedDelegate == null)) {
                this.onListReferrersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListReferrersCompleted);
            }
            base.InvokeAsync(this.onBeginListReferrersDelegate, null, this.onEndListReferrersDelegate, this.onListReferrersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginMessagesSummary(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMessagesSummary(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult> eRIS.eRISServiceReference.eRISService.EndMessagesSummary(System.IAsyncResult result) {
            return base.Channel.EndMessagesSummary(result);
        }
        
        private System.IAsyncResult OnBeginMessagesSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginMessagesSummary(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndMessagesSummary(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndMessagesSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMessagesSummaryCompleted(object state) {
            if ((this.MessagesSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MessagesSummaryCompleted(this, new MessagesSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MessagesSummaryAsync(System.DateTime begDate, System.DateTime endDate) {
            this.MessagesSummaryAsync(begDate, endDate, null);
        }
        
        public void MessagesSummaryAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginMessagesSummaryDelegate == null)) {
                this.onBeginMessagesSummaryDelegate = new BeginOperationDelegate(this.OnBeginMessagesSummary);
            }
            if ((this.onEndMessagesSummaryDelegate == null)) {
                this.onEndMessagesSummaryDelegate = new EndOperationDelegate(this.OnEndMessagesSummary);
            }
            if ((this.onMessagesSummaryCompletedDelegate == null)) {
                this.onMessagesSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMessagesSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginMessagesSummaryDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndMessagesSummaryDelegate, this.onMessagesSummaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginPhyCoderTotals(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPhyCoderTotals(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult> eRIS.eRISServiceReference.eRISService.EndPhyCoderTotals(System.IAsyncResult result) {
            return base.Channel.EndPhyCoderTotals(result);
        }
        
        private System.IAsyncResult OnBeginPhyCoderTotals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginPhyCoderTotals(userID, callback, asyncState);
        }
        
        private object[] OnEndPhyCoderTotals(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndPhyCoderTotals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPhyCoderTotalsCompleted(object state) {
            if ((this.PhyCoderTotalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PhyCoderTotalsCompleted(this, new PhyCoderTotalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PhyCoderTotalsAsync(int userID) {
            this.PhyCoderTotalsAsync(userID, null);
        }
        
        public void PhyCoderTotalsAsync(int userID, object userState) {
            if ((this.onBeginPhyCoderTotalsDelegate == null)) {
                this.onBeginPhyCoderTotalsDelegate = new BeginOperationDelegate(this.OnBeginPhyCoderTotals);
            }
            if ((this.onEndPhyCoderTotalsDelegate == null)) {
                this.onEndPhyCoderTotalsDelegate = new EndOperationDelegate(this.OnEndPhyCoderTotals);
            }
            if ((this.onPhyCoderTotalsCompletedDelegate == null)) {
                this.onPhyCoderTotalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPhyCoderTotalsCompleted);
            }
            base.InvokeAsync(this.onBeginPhyCoderTotalsDelegate, new object[] {
                        userID}, this.onEndPhyCoderTotalsDelegate, this.onPhyCoderTotalsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginPhyCoderReports(string SQL, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPhyCoderReports(SQL, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report> eRIS.eRISServiceReference.eRISService.EndPhyCoderReports(System.IAsyncResult result) {
            return base.Channel.EndPhyCoderReports(result);
        }
        
        private System.IAsyncResult OnBeginPhyCoderReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SQL = ((string)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginPhyCoderReports(SQL, callback, asyncState);
        }
        
        private object[] OnEndPhyCoderReports(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndPhyCoderReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPhyCoderReportsCompleted(object state) {
            if ((this.PhyCoderReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PhyCoderReportsCompleted(this, new PhyCoderReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PhyCoderReportsAsync(string SQL) {
            this.PhyCoderReportsAsync(SQL, null);
        }
        
        public void PhyCoderReportsAsync(string SQL, object userState) {
            if ((this.onBeginPhyCoderReportsDelegate == null)) {
                this.onBeginPhyCoderReportsDelegate = new BeginOperationDelegate(this.OnBeginPhyCoderReports);
            }
            if ((this.onEndPhyCoderReportsDelegate == null)) {
                this.onEndPhyCoderReportsDelegate = new EndOperationDelegate(this.OnEndPhyCoderReports);
            }
            if ((this.onPhyCoderReportsCompletedDelegate == null)) {
                this.onPhyCoderReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPhyCoderReportsCompleted);
            }
            base.InvokeAsync(this.onBeginPhyCoderReportsDelegate, new object[] {
                        SQL}, this.onEndPhyCoderReportsDelegate, this.onPhyCoderReportsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginPhyCoderOrders(string SQL, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPhyCoderOrders(SQL, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order> eRIS.eRISServiceReference.eRISService.EndPhyCoderOrders(System.IAsyncResult result) {
            return base.Channel.EndPhyCoderOrders(result);
        }
        
        private System.IAsyncResult OnBeginPhyCoderOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SQL = ((string)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginPhyCoderOrders(SQL, callback, asyncState);
        }
        
        private object[] OnEndPhyCoderOrders(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndPhyCoderOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPhyCoderOrdersCompleted(object state) {
            if ((this.PhyCoderOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PhyCoderOrdersCompleted(this, new PhyCoderOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PhyCoderOrdersAsync(string SQL) {
            this.PhyCoderOrdersAsync(SQL, null);
        }
        
        public void PhyCoderOrdersAsync(string SQL, object userState) {
            if ((this.onBeginPhyCoderOrdersDelegate == null)) {
                this.onBeginPhyCoderOrdersDelegate = new BeginOperationDelegate(this.OnBeginPhyCoderOrders);
            }
            if ((this.onEndPhyCoderOrdersDelegate == null)) {
                this.onEndPhyCoderOrdersDelegate = new EndOperationDelegate(this.OnEndPhyCoderOrders);
            }
            if ((this.onPhyCoderOrdersCompletedDelegate == null)) {
                this.onPhyCoderOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPhyCoderOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginPhyCoderOrdersDelegate, new object[] {
                        SQL}, this.onEndPhyCoderOrdersDelegate, this.onPhyCoderOrdersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetDemographics(string location, string mrn, string visit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDemographics(location, mrn, visit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult> eRIS.eRISServiceReference.eRISService.EndGetDemographics(System.IAsyncResult result) {
            return base.Channel.EndGetDemographics(result);
        }
        
        private System.IAsyncResult OnBeginGetDemographics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string location = ((string)(inValues[0]));
            string mrn = ((string)(inValues[1]));
            string visit = ((string)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetDemographics(location, mrn, visit, callback, asyncState);
        }
        
        private object[] OnEndGetDemographics(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetDemographics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDemographicsCompleted(object state) {
            if ((this.GetDemographicsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDemographicsCompleted(this, new GetDemographicsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDemographicsAsync(string location, string mrn, string visit) {
            this.GetDemographicsAsync(location, mrn, visit, null);
        }
        
        public void GetDemographicsAsync(string location, string mrn, string visit, object userState) {
            if ((this.onBeginGetDemographicsDelegate == null)) {
                this.onBeginGetDemographicsDelegate = new BeginOperationDelegate(this.OnBeginGetDemographics);
            }
            if ((this.onEndGetDemographicsDelegate == null)) {
                this.onEndGetDemographicsDelegate = new EndOperationDelegate(this.OnEndGetDemographics);
            }
            if ((this.onGetDemographicsCompletedDelegate == null)) {
                this.onGetDemographicsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDemographicsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDemographicsDelegate, new object[] {
                        location,
                        mrn,
                        visit}, this.onEndGetDemographicsDelegate, this.onGetDemographicsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetOrders(string location, string patientmrn, string visit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrders(location, patientmrn, visit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult> eRIS.eRISServiceReference.eRISService.EndGetOrders(System.IAsyncResult result) {
            return base.Channel.EndGetOrders(result);
        }
        
        private System.IAsyncResult OnBeginGetOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string location = ((string)(inValues[0]));
            string patientmrn = ((string)(inValues[1]));
            string visit = ((string)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetOrders(location, patientmrn, visit, callback, asyncState);
        }
        
        private object[] OnEndGetOrders(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrdersCompleted(object state) {
            if ((this.GetOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrdersAsync(string location, string patientmrn, string visit) {
            this.GetOrdersAsync(location, patientmrn, visit, null);
        }
        
        public void GetOrdersAsync(string location, string patientmrn, string visit, object userState) {
            if ((this.onBeginGetOrdersDelegate == null)) {
                this.onBeginGetOrdersDelegate = new BeginOperationDelegate(this.OnBeginGetOrders);
            }
            if ((this.onEndGetOrdersDelegate == null)) {
                this.onEndGetOrdersDelegate = new EndOperationDelegate(this.OnEndGetOrders);
            }
            if ((this.onGetOrdersCompletedDelegate == null)) {
                this.onGetOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrdersDelegate, new object[] {
                        location,
                        patientmrn,
                        visit}, this.onEndGetOrdersDelegate, this.onGetOrdersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetReport(int ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReport(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult> eRIS.eRISServiceReference.eRISService.EndGetReport(System.IAsyncResult result) {
            return base.Channel.EndGetReport(result);
        }
        
        private System.IAsyncResult OnBeginGetReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetReport(ID, callback, asyncState);
        }
        
        private object[] OnEndGetReport(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportCompleted(object state) {
            if ((this.GetReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportCompleted(this, new GetReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportAsync(int ID) {
            this.GetReportAsync(ID, null);
        }
        
        public void GetReportAsync(int ID, object userState) {
            if ((this.onBeginGetReportDelegate == null)) {
                this.onBeginGetReportDelegate = new BeginOperationDelegate(this.OnBeginGetReport);
            }
            if ((this.onEndGetReportDelegate == null)) {
                this.onEndGetReportDelegate = new EndOperationDelegate(this.OnEndGetReport);
            }
            if ((this.onGetReportCompletedDelegate == null)) {
                this.onGetReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportDelegate, new object[] {
                        ID}, this.onEndGetReportDelegate, this.onGetReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetOrder(int ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrder(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult> eRIS.eRISServiceReference.eRISService.EndGetOrder(System.IAsyncResult result) {
            return base.Channel.EndGetOrder(result);
        }
        
        private System.IAsyncResult OnBeginGetOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetOrder(ID, callback, asyncState);
        }
        
        private object[] OnEndGetOrder(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderCompleted(object state) {
            if ((this.GetOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderCompleted(this, new GetOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderAsync(int ID) {
            this.GetOrderAsync(ID, null);
        }
        
        public void GetOrderAsync(int ID, object userState) {
            if ((this.onBeginGetOrderDelegate == null)) {
                this.onBeginGetOrderDelegate = new BeginOperationDelegate(this.OnBeginGetOrder);
            }
            if ((this.onEndGetOrderDelegate == null)) {
                this.onEndGetOrderDelegate = new EndOperationDelegate(this.OnEndGetOrder);
            }
            if ((this.onGetOrderCompletedDelegate == null)) {
                this.onGetOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderDelegate, new object[] {
                        ID}, this.onEndGetOrderDelegate, this.onGetOrderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetReports(string location, string patientmrn, string examnumber, string visit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReports(location, patientmrn, examnumber, visit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult> eRIS.eRISServiceReference.eRISService.EndGetReports(System.IAsyncResult result) {
            return base.Channel.EndGetReports(result);
        }
        
        private System.IAsyncResult OnBeginGetReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string location = ((string)(inValues[0]));
            string patientmrn = ((string)(inValues[1]));
            string examnumber = ((string)(inValues[2]));
            string visit = ((string)(inValues[3]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetReports(location, patientmrn, examnumber, visit, callback, asyncState);
        }
        
        private object[] OnEndGetReports(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportsCompleted(object state) {
            if ((this.GetReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportsAsync(string location, string patientmrn, string examnumber, string visit) {
            this.GetReportsAsync(location, patientmrn, examnumber, visit, null);
        }
        
        public void GetReportsAsync(string location, string patientmrn, string examnumber, string visit, object userState) {
            if ((this.onBeginGetReportsDelegate == null)) {
                this.onBeginGetReportsDelegate = new BeginOperationDelegate(this.OnBeginGetReports);
            }
            if ((this.onEndGetReportsDelegate == null)) {
                this.onEndGetReportsDelegate = new EndOperationDelegate(this.OnEndGetReports);
            }
            if ((this.onGetReportsCompletedDelegate == null)) {
                this.onGetReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportsDelegate, new object[] {
                        location,
                        patientmrn,
                        examnumber,
                        visit}, this.onEndGetReportsDelegate, this.onGetReportsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetDuplicateReports(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDuplicateReports(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult> eRIS.eRISServiceReference.eRISService.EndGetDuplicateReports(System.IAsyncResult result) {
            return base.Channel.EndGetDuplicateReports(result);
        }
        
        private System.IAsyncResult OnBeginGetDuplicateReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetDuplicateReports(id, callback, asyncState);
        }
        
        private object[] OnEndGetDuplicateReports(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetDuplicateReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDuplicateReportsCompleted(object state) {
            if ((this.GetDuplicateReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDuplicateReportsCompleted(this, new GetDuplicateReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDuplicateReportsAsync(int id) {
            this.GetDuplicateReportsAsync(id, null);
        }
        
        public void GetDuplicateReportsAsync(int id, object userState) {
            if ((this.onBeginGetDuplicateReportsDelegate == null)) {
                this.onBeginGetDuplicateReportsDelegate = new BeginOperationDelegate(this.OnBeginGetDuplicateReports);
            }
            if ((this.onEndGetDuplicateReportsDelegate == null)) {
                this.onEndGetDuplicateReportsDelegate = new EndOperationDelegate(this.OnEndGetDuplicateReports);
            }
            if ((this.onGetDuplicateReportsCompletedDelegate == null)) {
                this.onGetDuplicateReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDuplicateReportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDuplicateReportsDelegate, new object[] {
                        id}, this.onEndGetDuplicateReportsDelegate, this.onGetDuplicateReportsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetReport(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSetReport(id, status, charge1, charge2, charge3, charge4, charge5, charge6, charge7, charge8, charge9, charge10, charge11, charge12, charge13, charge14, charge15, modifier1, modifier2, modifier3, modifier4, modifier5, modifier6, modifier7, modifier8, modifier9, modifier10, modifier11, modifier12, modifier13, modifier14, modifier15, codedby, notes, icd1, icd2, icd3, icd4, icd5, icd6, icd7, icd8, icd9, icd10, icd11, icd12, icd13, icd14, icd15, unit1, unit2, unit3, unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, unit15, assignedto, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, price11, price12, price13, price14, price15, dosage1, dosage2, dosage3, dosage4, dosage5, dosage6, dosage7, dosage8, dosage9, dosage10, dosage11, dosage12, dosage13, dosage14, dosage15, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetReport(System.IAsyncResult result) {
            base.Channel.EndSetReport(result);
        }
        
        private System.IAsyncResult OnBeginSetReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            char status = ((char)(inValues[1]));
            string charge1 = ((string)(inValues[2]));
            string charge2 = ((string)(inValues[3]));
            string charge3 = ((string)(inValues[4]));
            string charge4 = ((string)(inValues[5]));
            string charge5 = ((string)(inValues[6]));
            string charge6 = ((string)(inValues[7]));
            string charge7 = ((string)(inValues[8]));
            string charge8 = ((string)(inValues[9]));
            string charge9 = ((string)(inValues[10]));
            string charge10 = ((string)(inValues[11]));
            string charge11 = ((string)(inValues[12]));
            string charge12 = ((string)(inValues[13]));
            string charge13 = ((string)(inValues[14]));
            string charge14 = ((string)(inValues[15]));
            string charge15 = ((string)(inValues[16]));
            string modifier1 = ((string)(inValues[17]));
            string modifier2 = ((string)(inValues[18]));
            string modifier3 = ((string)(inValues[19]));
            string modifier4 = ((string)(inValues[20]));
            string modifier5 = ((string)(inValues[21]));
            string modifier6 = ((string)(inValues[22]));
            string modifier7 = ((string)(inValues[23]));
            string modifier8 = ((string)(inValues[24]));
            string modifier9 = ((string)(inValues[25]));
            string modifier10 = ((string)(inValues[26]));
            string modifier11 = ((string)(inValues[27]));
            string modifier12 = ((string)(inValues[28]));
            string modifier13 = ((string)(inValues[29]));
            string modifier14 = ((string)(inValues[30]));
            string modifier15 = ((string)(inValues[31]));
            int codedby = ((int)(inValues[32]));
            string notes = ((string)(inValues[33]));
            string icd1 = ((string)(inValues[34]));
            string icd2 = ((string)(inValues[35]));
            string icd3 = ((string)(inValues[36]));
            string icd4 = ((string)(inValues[37]));
            string icd5 = ((string)(inValues[38]));
            string icd6 = ((string)(inValues[39]));
            string icd7 = ((string)(inValues[40]));
            string icd8 = ((string)(inValues[41]));
            string icd9 = ((string)(inValues[42]));
            string icd10 = ((string)(inValues[43]));
            string icd11 = ((string)(inValues[44]));
            string icd12 = ((string)(inValues[45]));
            string icd13 = ((string)(inValues[46]));
            string icd14 = ((string)(inValues[47]));
            string icd15 = ((string)(inValues[48]));
            int unit1 = ((int)(inValues[49]));
            int unit2 = ((int)(inValues[50]));
            int unit3 = ((int)(inValues[51]));
            int unit4 = ((int)(inValues[52]));
            int unit5 = ((int)(inValues[53]));
            int unit6 = ((int)(inValues[54]));
            int unit7 = ((int)(inValues[55]));
            int unit8 = ((int)(inValues[56]));
            int unit9 = ((int)(inValues[57]));
            int unit10 = ((int)(inValues[58]));
            int unit11 = ((int)(inValues[59]));
            int unit12 = ((int)(inValues[60]));
            int unit13 = ((int)(inValues[61]));
            int unit14 = ((int)(inValues[62]));
            int unit15 = ((int)(inValues[63]));
            int assignedto = ((int)(inValues[64]));
            decimal price1 = ((decimal)(inValues[65]));
            decimal price2 = ((decimal)(inValues[66]));
            decimal price3 = ((decimal)(inValues[67]));
            decimal price4 = ((decimal)(inValues[68]));
            decimal price5 = ((decimal)(inValues[69]));
            decimal price6 = ((decimal)(inValues[70]));
            decimal price7 = ((decimal)(inValues[71]));
            decimal price8 = ((decimal)(inValues[72]));
            decimal price9 = ((decimal)(inValues[73]));
            decimal price10 = ((decimal)(inValues[74]));
            decimal price11 = ((decimal)(inValues[75]));
            decimal price12 = ((decimal)(inValues[76]));
            decimal price13 = ((decimal)(inValues[77]));
            decimal price14 = ((decimal)(inValues[78]));
            decimal price15 = ((decimal)(inValues[79]));
            string dosage1 = ((string)(inValues[80]));
            string dosage2 = ((string)(inValues[81]));
            string dosage3 = ((string)(inValues[82]));
            string dosage4 = ((string)(inValues[83]));
            string dosage5 = ((string)(inValues[84]));
            string dosage6 = ((string)(inValues[85]));
            string dosage7 = ((string)(inValues[86]));
            string dosage8 = ((string)(inValues[87]));
            string dosage9 = ((string)(inValues[88]));
            string dosage10 = ((string)(inValues[89]));
            string dosage11 = ((string)(inValues[90]));
            string dosage12 = ((string)(inValues[91]));
            string dosage13 = ((string)(inValues[92]));
            string dosage14 = ((string)(inValues[93]));
            string dosage15 = ((string)(inValues[94]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetReport(id, status, charge1, charge2, charge3, charge4, charge5, charge6, charge7, charge8, charge9, charge10, charge11, charge12, charge13, charge14, charge15, modifier1, modifier2, modifier3, modifier4, modifier5, modifier6, modifier7, modifier8, modifier9, modifier10, modifier11, modifier12, modifier13, modifier14, modifier15, codedby, notes, icd1, icd2, icd3, icd4, icd5, icd6, icd7, icd8, icd9, icd10, icd11, icd12, icd13, icd14, icd15, unit1, unit2, unit3, unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, unit15, assignedto, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, price11, price12, price13, price14, price15, dosage1, dosage2, dosage3, dosage4, dosage5, dosage6, dosage7, dosage8, dosage9, dosage10, dosage11, dosage12, dosage13, dosage14, dosage15, callback, asyncState);
        }
        
        private object[] OnEndSetReport(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetReport(result);
            return null;
        }
        
        private void OnSetReportCompleted(object state) {
            if ((this.SetReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetReportAsync(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15) {
            this.SetReportAsync(id, status, charge1, charge2, charge3, charge4, charge5, charge6, charge7, charge8, charge9, charge10, charge11, charge12, charge13, charge14, charge15, modifier1, modifier2, modifier3, modifier4, modifier5, modifier6, modifier7, modifier8, modifier9, modifier10, modifier11, modifier12, modifier13, modifier14, modifier15, codedby, notes, icd1, icd2, icd3, icd4, icd5, icd6, icd7, icd8, icd9, icd10, icd11, icd12, icd13, icd14, icd15, unit1, unit2, unit3, unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, unit15, assignedto, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, price11, price12, price13, price14, price15, dosage1, dosage2, dosage3, dosage4, dosage5, dosage6, dosage7, dosage8, dosage9, dosage10, dosage11, dosage12, dosage13, dosage14, dosage15, null);
        }
        
        public void SetReportAsync(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    object userState) {
            if ((this.onBeginSetReportDelegate == null)) {
                this.onBeginSetReportDelegate = new BeginOperationDelegate(this.OnBeginSetReport);
            }
            if ((this.onEndSetReportDelegate == null)) {
                this.onEndSetReportDelegate = new EndOperationDelegate(this.OnEndSetReport);
            }
            if ((this.onSetReportCompletedDelegate == null)) {
                this.onSetReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetReportCompleted);
            }
            base.InvokeAsync(this.onBeginSetReportDelegate, new object[] {
                        id,
                        status,
                        charge1,
                        charge2,
                        charge3,
                        charge4,
                        charge5,
                        charge6,
                        charge7,
                        charge8,
                        charge9,
                        charge10,
                        charge11,
                        charge12,
                        charge13,
                        charge14,
                        charge15,
                        modifier1,
                        modifier2,
                        modifier3,
                        modifier4,
                        modifier5,
                        modifier6,
                        modifier7,
                        modifier8,
                        modifier9,
                        modifier10,
                        modifier11,
                        modifier12,
                        modifier13,
                        modifier14,
                        modifier15,
                        codedby,
                        notes,
                        icd1,
                        icd2,
                        icd3,
                        icd4,
                        icd5,
                        icd6,
                        icd7,
                        icd8,
                        icd9,
                        icd10,
                        icd11,
                        icd12,
                        icd13,
                        icd14,
                        icd15,
                        unit1,
                        unit2,
                        unit3,
                        unit4,
                        unit5,
                        unit6,
                        unit7,
                        unit8,
                        unit9,
                        unit10,
                        unit11,
                        unit12,
                        unit13,
                        unit14,
                        unit15,
                        assignedto,
                        price1,
                        price2,
                        price3,
                        price4,
                        price5,
                        price6,
                        price7,
                        price8,
                        price9,
                        price10,
                        price11,
                        price12,
                        price13,
                        price14,
                        price15,
                        dosage1,
                        dosage2,
                        dosage3,
                        dosage4,
                        dosage5,
                        dosage6,
                        dosage7,
                        dosage8,
                        dosage9,
                        dosage10,
                        dosage11,
                        dosage12,
                        dosage13,
                        dosage14,
                        dosage15}, this.onEndSetReportDelegate, this.onSetReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginUpdateReport(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    string codingLocation, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateReport(id, status, charge1, charge2, charge3, charge4, charge5, charge6, charge7, charge8, charge9, charge10, charge11, charge12, charge13, charge14, charge15, modifier1, modifier2, modifier3, modifier4, modifier5, modifier6, modifier7, modifier8, modifier9, modifier10, modifier11, modifier12, modifier13, modifier14, modifier15, codedby, notes, icd1, icd2, icd3, icd4, icd5, icd6, icd7, icd8, icd9, icd10, icd11, icd12, icd13, icd14, icd15, unit1, unit2, unit3, unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, unit15, assignedto, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, price11, price12, price13, price14, price15, dosage1, dosage2, dosage3, dosage4, dosage5, dosage6, dosage7, dosage8, dosage9, dosage10, dosage11, dosage12, dosage13, dosage14, dosage15, codingLocation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult> eRIS.eRISServiceReference.eRISService.EndUpdateReport(System.IAsyncResult result) {
            return base.Channel.EndUpdateReport(result);
        }
        
        private System.IAsyncResult OnBeginUpdateReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            char status = ((char)(inValues[1]));
            string charge1 = ((string)(inValues[2]));
            string charge2 = ((string)(inValues[3]));
            string charge3 = ((string)(inValues[4]));
            string charge4 = ((string)(inValues[5]));
            string charge5 = ((string)(inValues[6]));
            string charge6 = ((string)(inValues[7]));
            string charge7 = ((string)(inValues[8]));
            string charge8 = ((string)(inValues[9]));
            string charge9 = ((string)(inValues[10]));
            string charge10 = ((string)(inValues[11]));
            string charge11 = ((string)(inValues[12]));
            string charge12 = ((string)(inValues[13]));
            string charge13 = ((string)(inValues[14]));
            string charge14 = ((string)(inValues[15]));
            string charge15 = ((string)(inValues[16]));
            string modifier1 = ((string)(inValues[17]));
            string modifier2 = ((string)(inValues[18]));
            string modifier3 = ((string)(inValues[19]));
            string modifier4 = ((string)(inValues[20]));
            string modifier5 = ((string)(inValues[21]));
            string modifier6 = ((string)(inValues[22]));
            string modifier7 = ((string)(inValues[23]));
            string modifier8 = ((string)(inValues[24]));
            string modifier9 = ((string)(inValues[25]));
            string modifier10 = ((string)(inValues[26]));
            string modifier11 = ((string)(inValues[27]));
            string modifier12 = ((string)(inValues[28]));
            string modifier13 = ((string)(inValues[29]));
            string modifier14 = ((string)(inValues[30]));
            string modifier15 = ((string)(inValues[31]));
            int codedby = ((int)(inValues[32]));
            string notes = ((string)(inValues[33]));
            string icd1 = ((string)(inValues[34]));
            string icd2 = ((string)(inValues[35]));
            string icd3 = ((string)(inValues[36]));
            string icd4 = ((string)(inValues[37]));
            string icd5 = ((string)(inValues[38]));
            string icd6 = ((string)(inValues[39]));
            string icd7 = ((string)(inValues[40]));
            string icd8 = ((string)(inValues[41]));
            string icd9 = ((string)(inValues[42]));
            string icd10 = ((string)(inValues[43]));
            string icd11 = ((string)(inValues[44]));
            string icd12 = ((string)(inValues[45]));
            string icd13 = ((string)(inValues[46]));
            string icd14 = ((string)(inValues[47]));
            string icd15 = ((string)(inValues[48]));
            int unit1 = ((int)(inValues[49]));
            int unit2 = ((int)(inValues[50]));
            int unit3 = ((int)(inValues[51]));
            int unit4 = ((int)(inValues[52]));
            int unit5 = ((int)(inValues[53]));
            int unit6 = ((int)(inValues[54]));
            int unit7 = ((int)(inValues[55]));
            int unit8 = ((int)(inValues[56]));
            int unit9 = ((int)(inValues[57]));
            int unit10 = ((int)(inValues[58]));
            int unit11 = ((int)(inValues[59]));
            int unit12 = ((int)(inValues[60]));
            int unit13 = ((int)(inValues[61]));
            int unit14 = ((int)(inValues[62]));
            int unit15 = ((int)(inValues[63]));
            int assignedto = ((int)(inValues[64]));
            decimal price1 = ((decimal)(inValues[65]));
            decimal price2 = ((decimal)(inValues[66]));
            decimal price3 = ((decimal)(inValues[67]));
            decimal price4 = ((decimal)(inValues[68]));
            decimal price5 = ((decimal)(inValues[69]));
            decimal price6 = ((decimal)(inValues[70]));
            decimal price7 = ((decimal)(inValues[71]));
            decimal price8 = ((decimal)(inValues[72]));
            decimal price9 = ((decimal)(inValues[73]));
            decimal price10 = ((decimal)(inValues[74]));
            decimal price11 = ((decimal)(inValues[75]));
            decimal price12 = ((decimal)(inValues[76]));
            decimal price13 = ((decimal)(inValues[77]));
            decimal price14 = ((decimal)(inValues[78]));
            decimal price15 = ((decimal)(inValues[79]));
            string dosage1 = ((string)(inValues[80]));
            string dosage2 = ((string)(inValues[81]));
            string dosage3 = ((string)(inValues[82]));
            string dosage4 = ((string)(inValues[83]));
            string dosage5 = ((string)(inValues[84]));
            string dosage6 = ((string)(inValues[85]));
            string dosage7 = ((string)(inValues[86]));
            string dosage8 = ((string)(inValues[87]));
            string dosage9 = ((string)(inValues[88]));
            string dosage10 = ((string)(inValues[89]));
            string dosage11 = ((string)(inValues[90]));
            string dosage12 = ((string)(inValues[91]));
            string dosage13 = ((string)(inValues[92]));
            string dosage14 = ((string)(inValues[93]));
            string dosage15 = ((string)(inValues[94]));
            string codingLocation = ((string)(inValues[95]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginUpdateReport(id, status, charge1, charge2, charge3, charge4, charge5, charge6, charge7, charge8, charge9, charge10, charge11, charge12, charge13, charge14, charge15, modifier1, modifier2, modifier3, modifier4, modifier5, modifier6, modifier7, modifier8, modifier9, modifier10, modifier11, modifier12, modifier13, modifier14, modifier15, codedby, notes, icd1, icd2, icd3, icd4, icd5, icd6, icd7, icd8, icd9, icd10, icd11, icd12, icd13, icd14, icd15, unit1, unit2, unit3, unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, unit15, assignedto, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, price11, price12, price13, price14, price15, dosage1, dosage2, dosage3, dosage4, dosage5, dosage6, dosage7, dosage8, dosage9, dosage10, dosage11, dosage12, dosage13, dosage14, dosage15, codingLocation, callback, asyncState);
        }
        
        private object[] OnEndUpdateReport(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndUpdateReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateReportCompleted(object state) {
            if ((this.UpdateReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateReportCompleted(this, new UpdateReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateReportAsync(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    string codingLocation) {
            this.UpdateReportAsync(id, status, charge1, charge2, charge3, charge4, charge5, charge6, charge7, charge8, charge9, charge10, charge11, charge12, charge13, charge14, charge15, modifier1, modifier2, modifier3, modifier4, modifier5, modifier6, modifier7, modifier8, modifier9, modifier10, modifier11, modifier12, modifier13, modifier14, modifier15, codedby, notes, icd1, icd2, icd3, icd4, icd5, icd6, icd7, icd8, icd9, icd10, icd11, icd12, icd13, icd14, icd15, unit1, unit2, unit3, unit4, unit5, unit6, unit7, unit8, unit9, unit10, unit11, unit12, unit13, unit14, unit15, assignedto, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, price11, price12, price13, price14, price15, dosage1, dosage2, dosage3, dosage4, dosage5, dosage6, dosage7, dosage8, dosage9, dosage10, dosage11, dosage12, dosage13, dosage14, dosage15, codingLocation, null);
        }
        
        public void UpdateReportAsync(
                    int id, 
                    char status, 
                    string charge1, 
                    string charge2, 
                    string charge3, 
                    string charge4, 
                    string charge5, 
                    string charge6, 
                    string charge7, 
                    string charge8, 
                    string charge9, 
                    string charge10, 
                    string charge11, 
                    string charge12, 
                    string charge13, 
                    string charge14, 
                    string charge15, 
                    string modifier1, 
                    string modifier2, 
                    string modifier3, 
                    string modifier4, 
                    string modifier5, 
                    string modifier6, 
                    string modifier7, 
                    string modifier8, 
                    string modifier9, 
                    string modifier10, 
                    string modifier11, 
                    string modifier12, 
                    string modifier13, 
                    string modifier14, 
                    string modifier15, 
                    int codedby, 
                    string notes, 
                    string icd1, 
                    string icd2, 
                    string icd3, 
                    string icd4, 
                    string icd5, 
                    string icd6, 
                    string icd7, 
                    string icd8, 
                    string icd9, 
                    string icd10, 
                    string icd11, 
                    string icd12, 
                    string icd13, 
                    string icd14, 
                    string icd15, 
                    int unit1, 
                    int unit2, 
                    int unit3, 
                    int unit4, 
                    int unit5, 
                    int unit6, 
                    int unit7, 
                    int unit8, 
                    int unit9, 
                    int unit10, 
                    int unit11, 
                    int unit12, 
                    int unit13, 
                    int unit14, 
                    int unit15, 
                    int assignedto, 
                    decimal price1, 
                    decimal price2, 
                    decimal price3, 
                    decimal price4, 
                    decimal price5, 
                    decimal price6, 
                    decimal price7, 
                    decimal price8, 
                    decimal price9, 
                    decimal price10, 
                    decimal price11, 
                    decimal price12, 
                    decimal price13, 
                    decimal price14, 
                    decimal price15, 
                    string dosage1, 
                    string dosage2, 
                    string dosage3, 
                    string dosage4, 
                    string dosage5, 
                    string dosage6, 
                    string dosage7, 
                    string dosage8, 
                    string dosage9, 
                    string dosage10, 
                    string dosage11, 
                    string dosage12, 
                    string dosage13, 
                    string dosage14, 
                    string dosage15, 
                    string codingLocation, 
                    object userState) {
            if ((this.onBeginUpdateReportDelegate == null)) {
                this.onBeginUpdateReportDelegate = new BeginOperationDelegate(this.OnBeginUpdateReport);
            }
            if ((this.onEndUpdateReportDelegate == null)) {
                this.onEndUpdateReportDelegate = new EndOperationDelegate(this.OnEndUpdateReport);
            }
            if ((this.onUpdateReportCompletedDelegate == null)) {
                this.onUpdateReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateReportCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateReportDelegate, new object[] {
                        id,
                        status,
                        charge1,
                        charge2,
                        charge3,
                        charge4,
                        charge5,
                        charge6,
                        charge7,
                        charge8,
                        charge9,
                        charge10,
                        charge11,
                        charge12,
                        charge13,
                        charge14,
                        charge15,
                        modifier1,
                        modifier2,
                        modifier3,
                        modifier4,
                        modifier5,
                        modifier6,
                        modifier7,
                        modifier8,
                        modifier9,
                        modifier10,
                        modifier11,
                        modifier12,
                        modifier13,
                        modifier14,
                        modifier15,
                        codedby,
                        notes,
                        icd1,
                        icd2,
                        icd3,
                        icd4,
                        icd5,
                        icd6,
                        icd7,
                        icd8,
                        icd9,
                        icd10,
                        icd11,
                        icd12,
                        icd13,
                        icd14,
                        icd15,
                        unit1,
                        unit2,
                        unit3,
                        unit4,
                        unit5,
                        unit6,
                        unit7,
                        unit8,
                        unit9,
                        unit10,
                        unit11,
                        unit12,
                        unit13,
                        unit14,
                        unit15,
                        assignedto,
                        price1,
                        price2,
                        price3,
                        price4,
                        price5,
                        price6,
                        price7,
                        price8,
                        price9,
                        price10,
                        price11,
                        price12,
                        price13,
                        price14,
                        price15,
                        dosage1,
                        dosage2,
                        dosage3,
                        dosage4,
                        dosage5,
                        dosage6,
                        dosage7,
                        dosage8,
                        dosage9,
                        dosage10,
                        dosage11,
                        dosage12,
                        dosage13,
                        dosage14,
                        dosage15,
                        codingLocation}, this.onEndUpdateReportDelegate, this.onUpdateReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginfSplitHL7GPMS(string location, string patientmrn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginfSplitHL7GPMS(location, patientmrn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult> eRIS.eRISServiceReference.eRISService.EndfSplitHL7GPMS(System.IAsyncResult result) {
            return base.Channel.EndfSplitHL7GPMS(result);
        }
        
        private System.IAsyncResult OnBeginfSplitHL7GPMS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string location = ((string)(inValues[0]));
            string patientmrn = ((string)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginfSplitHL7GPMS(location, patientmrn, callback, asyncState);
        }
        
        private object[] OnEndfSplitHL7GPMS(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndfSplitHL7GPMS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnfSplitHL7GPMSCompleted(object state) {
            if ((this.fSplitHL7GPMSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.fSplitHL7GPMSCompleted(this, new fSplitHL7GPMSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void fSplitHL7GPMSAsync(string location, string patientmrn) {
            this.fSplitHL7GPMSAsync(location, patientmrn, null);
        }
        
        public void fSplitHL7GPMSAsync(string location, string patientmrn, object userState) {
            if ((this.onBeginfSplitHL7GPMSDelegate == null)) {
                this.onBeginfSplitHL7GPMSDelegate = new BeginOperationDelegate(this.OnBeginfSplitHL7GPMS);
            }
            if ((this.onEndfSplitHL7GPMSDelegate == null)) {
                this.onEndfSplitHL7GPMSDelegate = new EndOperationDelegate(this.OnEndfSplitHL7GPMS);
            }
            if ((this.onfSplitHL7GPMSCompletedDelegate == null)) {
                this.onfSplitHL7GPMSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnfSplitHL7GPMSCompleted);
            }
            base.InvokeAsync(this.onBeginfSplitHL7GPMSDelegate, new object[] {
                        location,
                        patientmrn}, this.onEndfSplitHL7GPMSDelegate, this.onfSplitHL7GPMSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetReportsCodedPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportsCodedPerDay(begDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult> eRIS.eRISServiceReference.eRISService.EndGetReportsCodedPerDay(System.IAsyncResult result) {
            return base.Channel.EndGetReportsCodedPerDay(result);
        }
        
        private System.IAsyncResult OnBeginGetReportsCodedPerDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime begDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetReportsCodedPerDay(begDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetReportsCodedPerDay(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetReportsCodedPerDay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportsCodedPerDayCompleted(object state) {
            if ((this.GetReportsCodedPerDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportsCodedPerDayCompleted(this, new GetReportsCodedPerDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportsCodedPerDayAsync(System.DateTime begDate, System.DateTime endDate) {
            this.GetReportsCodedPerDayAsync(begDate, endDate, null);
        }
        
        public void GetReportsCodedPerDayAsync(System.DateTime begDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetReportsCodedPerDayDelegate == null)) {
                this.onBeginGetReportsCodedPerDayDelegate = new BeginOperationDelegate(this.OnBeginGetReportsCodedPerDay);
            }
            if ((this.onEndGetReportsCodedPerDayDelegate == null)) {
                this.onEndGetReportsCodedPerDayDelegate = new EndOperationDelegate(this.OnEndGetReportsCodedPerDay);
            }
            if ((this.onGetReportsCodedPerDayCompletedDelegate == null)) {
                this.onGetReportsCodedPerDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsCodedPerDayCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportsCodedPerDayDelegate, new object[] {
                        begDate,
                        endDate}, this.onEndGetReportsCodedPerDayDelegate, this.onGetReportsCodedPerDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetPending(int id, int codedby, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPending(id, codedby, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetPending(System.IAsyncResult result) {
            base.Channel.EndSetPending(result);
        }
        
        private System.IAsyncResult OnBeginSetPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            int codedby = ((int)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetPending(id, codedby, callback, asyncState);
        }
        
        private object[] OnEndSetPending(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetPending(result);
            return null;
        }
        
        private void OnSetPendingCompleted(object state) {
            if ((this.SetPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPendingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPendingAsync(int id, int codedby) {
            this.SetPendingAsync(id, codedby, null);
        }
        
        public void SetPendingAsync(int id, int codedby, object userState) {
            if ((this.onBeginSetPendingDelegate == null)) {
                this.onBeginSetPendingDelegate = new BeginOperationDelegate(this.OnBeginSetPending);
            }
            if ((this.onEndSetPendingDelegate == null)) {
                this.onEndSetPendingDelegate = new EndOperationDelegate(this.OnEndSetPending);
            }
            if ((this.onSetPendingCompletedDelegate == null)) {
                this.onSetPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPendingCompleted);
            }
            base.InvokeAsync(this.onBeginSetPendingDelegate, new object[] {
                        id,
                        codedby}, this.onEndSetPendingDelegate, this.onSetPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginClearPending(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearPending(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndClearPending(System.IAsyncResult result) {
            base.Channel.EndClearPending(result);
        }
        
        private System.IAsyncResult OnBeginClearPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginClearPending(id, callback, asyncState);
        }
        
        private object[] OnEndClearPending(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndClearPending(result);
            return null;
        }
        
        private void OnClearPendingCompleted(object state) {
            if ((this.ClearPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearPendingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearPendingAsync(int id) {
            this.ClearPendingAsync(id, null);
        }
        
        public void ClearPendingAsync(int id, object userState) {
            if ((this.onBeginClearPendingDelegate == null)) {
                this.onBeginClearPendingDelegate = new BeginOperationDelegate(this.OnBeginClearPending);
            }
            if ((this.onEndClearPendingDelegate == null)) {
                this.onEndClearPendingDelegate = new EndOperationDelegate(this.OnEndClearPending);
            }
            if ((this.onClearPendingCompletedDelegate == null)) {
                this.onClearPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearPendingCompleted);
            }
            base.InvokeAsync(this.onBeginClearPendingDelegate, new object[] {
                        id}, this.onEndClearPendingDelegate, this.onClearPendingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginListICD9(string code, string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListICD9(code, description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result> eRIS.eRISServiceReference.eRISService.EndListICD9(System.IAsyncResult result) {
            return base.Channel.EndListICD9(result);
        }
        
        private System.IAsyncResult OnBeginListICD9(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string code = ((string)(inValues[0]));
            string description = ((string)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginListICD9(code, description, callback, asyncState);
        }
        
        private object[] OnEndListICD9(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndListICD9(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListICD9Completed(object state) {
            if ((this.ListICD9Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListICD9Completed(this, new ListICD9CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListICD9Async(string code, string description) {
            this.ListICD9Async(code, description, null);
        }
        
        public void ListICD9Async(string code, string description, object userState) {
            if ((this.onBeginListICD9Delegate == null)) {
                this.onBeginListICD9Delegate = new BeginOperationDelegate(this.OnBeginListICD9);
            }
            if ((this.onEndListICD9Delegate == null)) {
                this.onEndListICD9Delegate = new EndOperationDelegate(this.OnEndListICD9);
            }
            if ((this.onListICD9CompletedDelegate == null)) {
                this.onListICD9CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListICD9Completed);
            }
            base.InvokeAsync(this.onBeginListICD9Delegate, new object[] {
                        code,
                        description}, this.onEndListICD9Delegate, this.onListICD9CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetMessagesLog(int sourceID, int typeID, string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetMessagesLog(sourceID, typeID, description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetMessagesLog(System.IAsyncResult result) {
            base.Channel.EndSetMessagesLog(result);
        }
        
        private System.IAsyncResult OnBeginSetMessagesLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sourceID = ((int)(inValues[0]));
            int typeID = ((int)(inValues[1]));
            string description = ((string)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetMessagesLog(sourceID, typeID, description, callback, asyncState);
        }
        
        private object[] OnEndSetMessagesLog(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetMessagesLog(result);
            return null;
        }
        
        private void OnSetMessagesLogCompleted(object state) {
            if ((this.SetMessagesLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetMessagesLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetMessagesLogAsync(int sourceID, int typeID, string description) {
            this.SetMessagesLogAsync(sourceID, typeID, description, null);
        }
        
        public void SetMessagesLogAsync(int sourceID, int typeID, string description, object userState) {
            if ((this.onBeginSetMessagesLogDelegate == null)) {
                this.onBeginSetMessagesLogDelegate = new BeginOperationDelegate(this.OnBeginSetMessagesLog);
            }
            if ((this.onEndSetMessagesLogDelegate == null)) {
                this.onEndSetMessagesLogDelegate = new EndOperationDelegate(this.OnEndSetMessagesLog);
            }
            if ((this.onSetMessagesLogCompletedDelegate == null)) {
                this.onSetMessagesLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMessagesLogCompleted);
            }
            base.InvokeAsync(this.onBeginSetMessagesLogDelegate, new object[] {
                        sourceID,
                        typeID,
                        description}, this.onEndSetMessagesLogDelegate, this.onSetMessagesLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginMarkDeleted(string loc, string exam, int codedby, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkDeleted(loc, exam, codedby, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndMarkDeleted(System.IAsyncResult result) {
            base.Channel.EndMarkDeleted(result);
        }
        
        private System.IAsyncResult OnBeginMarkDeleted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string loc = ((string)(inValues[0]));
            string exam = ((string)(inValues[1]));
            int codedby = ((int)(inValues[2]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginMarkDeleted(loc, exam, codedby, callback, asyncState);
        }
        
        private object[] OnEndMarkDeleted(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndMarkDeleted(result);
            return null;
        }
        
        private void OnMarkDeletedCompleted(object state) {
            if ((this.MarkDeletedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkDeletedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkDeletedAsync(string loc, string exam, int codedby) {
            this.MarkDeletedAsync(loc, exam, codedby, null);
        }
        
        public void MarkDeletedAsync(string loc, string exam, int codedby, object userState) {
            if ((this.onBeginMarkDeletedDelegate == null)) {
                this.onBeginMarkDeletedDelegate = new BeginOperationDelegate(this.OnBeginMarkDeleted);
            }
            if ((this.onEndMarkDeletedDelegate == null)) {
                this.onEndMarkDeletedDelegate = new EndOperationDelegate(this.OnEndMarkDeleted);
            }
            if ((this.onMarkDeletedCompletedDelegate == null)) {
                this.onMarkDeletedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkDeletedCompleted);
            }
            base.InvokeAsync(this.onBeginMarkDeletedDelegate, new object[] {
                        loc,
                        exam,
                        codedby}, this.onEndMarkDeletedDelegate, this.onMarkDeletedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetToCode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetToCode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult> eRIS.eRISServiceReference.eRISService.EndGetToCode(System.IAsyncResult result) {
            return base.Channel.EndGetToCode(result);
        }
        
        private System.IAsyncResult OnBeginGetToCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetToCode(callback, asyncState);
        }
        
        private object[] OnEndGetToCode(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetToCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetToCodeCompleted(object state) {
            if ((this.GetToCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetToCodeCompleted(this, new GetToCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetToCodeAsync() {
            this.GetToCodeAsync(null);
        }
        
        public void GetToCodeAsync(object userState) {
            if ((this.onBeginGetToCodeDelegate == null)) {
                this.onBeginGetToCodeDelegate = new BeginOperationDelegate(this.OnBeginGetToCode);
            }
            if ((this.onEndGetToCodeDelegate == null)) {
                this.onEndGetToCodeDelegate = new EndOperationDelegate(this.OnEndGetToCode);
            }
            if ((this.onGetToCodeCompletedDelegate == null)) {
                this.onGetToCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetToCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetToCodeDelegate, null, this.onEndGetToCodeDelegate, this.onGetToCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetExamNumber(int id, string exam, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetExamNumber(id, exam, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void eRIS.eRISServiceReference.eRISService.EndSetExamNumber(System.IAsyncResult result) {
            base.Channel.EndSetExamNumber(result);
        }
        
        private System.IAsyncResult OnBeginSetExamNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string exam = ((string)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetExamNumber(id, exam, callback, asyncState);
        }
        
        private object[] OnEndSetExamNumber(System.IAsyncResult result) {
            ((eRIS.eRISServiceReference.eRISService)(this)).EndSetExamNumber(result);
            return null;
        }
        
        private void OnSetExamNumberCompleted(object state) {
            if ((this.SetExamNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetExamNumberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetExamNumberAsync(int id, string exam) {
            this.SetExamNumberAsync(id, exam, null);
        }
        
        public void SetExamNumberAsync(int id, string exam, object userState) {
            if ((this.onBeginSetExamNumberDelegate == null)) {
                this.onBeginSetExamNumberDelegate = new BeginOperationDelegate(this.OnBeginSetExamNumber);
            }
            if ((this.onEndSetExamNumberDelegate == null)) {
                this.onEndSetExamNumberDelegate = new EndOperationDelegate(this.OnEndSetExamNumber);
            }
            if ((this.onSetExamNumberCompletedDelegate == null)) {
                this.onSetExamNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetExamNumberCompleted);
            }
            base.InvokeAsync(this.onBeginSetExamNumberDelegate, new object[] {
                        id,
                        exam}, this.onEndSetExamNumberDelegate, this.onSetExamNumberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginSetRad(int id, int rad, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRad(id, rad, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int eRIS.eRISServiceReference.eRISService.EndSetRad(System.IAsyncResult result) {
            return base.Channel.EndSetRad(result);
        }
        
        private System.IAsyncResult OnBeginSetRad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            int rad = ((int)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginSetRad(id, rad, callback, asyncState);
        }
        
        private object[] OnEndSetRad(System.IAsyncResult result) {
            int retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndSetRad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetRadCompleted(object state) {
            if ((this.SetRadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRadCompleted(this, new SetRadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRadAsync(int id, int rad) {
            this.SetRadAsync(id, rad, null);
        }
        
        public void SetRadAsync(int id, int rad, object userState) {
            if ((this.onBeginSetRadDelegate == null)) {
                this.onBeginSetRadDelegate = new BeginOperationDelegate(this.OnBeginSetRad);
            }
            if ((this.onEndSetRadDelegate == null)) {
                this.onEndSetRadDelegate = new EndOperationDelegate(this.OnEndSetRad);
            }
            if ((this.onSetRadCompletedDelegate == null)) {
                this.onSetRadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRadCompleted);
            }
            base.InvokeAsync(this.onBeginSetRadDelegate, new object[] {
                        id,
                        rad}, this.onEndSetRadDelegate, this.onSetRadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginBioImagingReports(string SQL, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBioImagingReports(SQL, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment> eRIS.eRISServiceReference.eRISService.EndBioImagingReports(System.IAsyncResult result) {
            return base.Channel.EndBioImagingReports(result);
        }
        
        private System.IAsyncResult OnBeginBioImagingReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string SQL = ((string)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginBioImagingReports(SQL, callback, asyncState);
        }
        
        private object[] OnEndBioImagingReports(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndBioImagingReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBioImagingReportsCompleted(object state) {
            if ((this.BioImagingReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BioImagingReportsCompleted(this, new BioImagingReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BioImagingReportsAsync(string SQL) {
            this.BioImagingReportsAsync(SQL, null);
        }
        
        public void BioImagingReportsAsync(string SQL, object userState) {
            if ((this.onBeginBioImagingReportsDelegate == null)) {
                this.onBeginBioImagingReportsDelegate = new BeginOperationDelegate(this.OnBeginBioImagingReports);
            }
            if ((this.onEndBioImagingReportsDelegate == null)) {
                this.onEndBioImagingReportsDelegate = new EndOperationDelegate(this.OnEndBioImagingReports);
            }
            if ((this.onBioImagingReportsCompletedDelegate == null)) {
                this.onBioImagingReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBioImagingReportsCompleted);
            }
            base.InvokeAsync(this.onBeginBioImagingReportsDelegate, new object[] {
                        SQL}, this.onEndBioImagingReportsDelegate, this.onBioImagingReportsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginCoderTotals(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoderTotals(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult> eRIS.eRISServiceReference.eRISService.EndCoderTotals(System.IAsyncResult result) {
            return base.Channel.EndCoderTotals(result);
        }
        
        private System.IAsyncResult OnBeginCoderTotals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginCoderTotals(userID, callback, asyncState);
        }
        
        private object[] OnEndCoderTotals(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndCoderTotals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoderTotalsCompleted(object state) {
            if ((this.CoderTotalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoderTotalsCompleted(this, new CoderTotalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoderTotalsAsync(int userID) {
            this.CoderTotalsAsync(userID, null);
        }
        
        public void CoderTotalsAsync(int userID, object userState) {
            if ((this.onBeginCoderTotalsDelegate == null)) {
                this.onBeginCoderTotalsDelegate = new BeginOperationDelegate(this.OnBeginCoderTotals);
            }
            if ((this.onEndCoderTotalsDelegate == null)) {
                this.onEndCoderTotalsDelegate = new EndOperationDelegate(this.OnEndCoderTotals);
            }
            if ((this.onCoderTotalsCompletedDelegate == null)) {
                this.onCoderTotalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoderTotalsCompleted);
            }
            base.InvokeAsync(this.onBeginCoderTotalsDelegate, new object[] {
                        userID}, this.onEndCoderTotalsDelegate, this.onCoderTotalsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetExamComments(int Exam, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExamComments(Exam, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult> eRIS.eRISServiceReference.eRISService.EndGetExamComments(System.IAsyncResult result) {
            return base.Channel.EndGetExamComments(result);
        }
        
        private System.IAsyncResult OnBeginGetExamComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Exam = ((int)(inValues[0]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetExamComments(Exam, callback, asyncState);
        }
        
        private object[] OnEndGetExamComments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetExamComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExamCommentsCompleted(object state) {
            if ((this.GetExamCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExamCommentsCompleted(this, new GetExamCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExamCommentsAsync(int Exam) {
            this.GetExamCommentsAsync(Exam, null);
        }
        
        public void GetExamCommentsAsync(int Exam, object userState) {
            if ((this.onBeginGetExamCommentsDelegate == null)) {
                this.onBeginGetExamCommentsDelegate = new BeginOperationDelegate(this.OnBeginGetExamComments);
            }
            if ((this.onEndGetExamCommentsDelegate == null)) {
                this.onEndGetExamCommentsDelegate = new EndOperationDelegate(this.OnEndGetExamComments);
            }
            if ((this.onGetExamCommentsCompletedDelegate == null)) {
                this.onGetExamCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExamCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetExamCommentsDelegate, new object[] {
                        Exam}, this.onEndGetExamCommentsDelegate, this.onGetExamCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult eRIS.eRISServiceReference.eRISService.BeginGetExamDocuments(string PatientMRN, int Exam, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExamDocuments(PatientMRN, Exam, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> eRIS.eRISServiceReference.eRISService.EndGetExamDocuments(System.IAsyncResult result) {
            return base.Channel.EndGetExamDocuments(result);
        }
        
        private System.IAsyncResult OnBeginGetExamDocuments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PatientMRN = ((string)(inValues[0]));
            int Exam = ((int)(inValues[1]));
            return ((eRIS.eRISServiceReference.eRISService)(this)).BeginGetExamDocuments(PatientMRN, Exam, callback, asyncState);
        }
        
        private object[] OnEndGetExamDocuments(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((eRIS.eRISServiceReference.eRISService)(this)).EndGetExamDocuments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExamDocumentsCompleted(object state) {
            if ((this.GetExamDocumentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExamDocumentsCompleted(this, new GetExamDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExamDocumentsAsync(string PatientMRN, int Exam) {
            this.GetExamDocumentsAsync(PatientMRN, Exam, null);
        }
        
        public void GetExamDocumentsAsync(string PatientMRN, int Exam, object userState) {
            if ((this.onBeginGetExamDocumentsDelegate == null)) {
                this.onBeginGetExamDocumentsDelegate = new BeginOperationDelegate(this.OnBeginGetExamDocuments);
            }
            if ((this.onEndGetExamDocumentsDelegate == null)) {
                this.onEndGetExamDocumentsDelegate = new EndOperationDelegate(this.OnEndGetExamDocuments);
            }
            if ((this.onGetExamDocumentsCompletedDelegate == null)) {
                this.onGetExamDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExamDocumentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetExamDocumentsDelegate, new object[] {
                        PatientMRN,
                        Exam}, this.onEndGetExamDocumentsDelegate, this.onGetExamDocumentsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override eRIS.eRISServiceReference.eRISService CreateChannel() {
            return new eRISServiceClientChannel(this);
        }
        
        private class eRISServiceClientChannel : ChannelBase<eRIS.eRISServiceReference.eRISService>, eRIS.eRISServiceReference.eRISService {
            
            public eRISServiceClientChannel(System.ServiceModel.ClientBase<eRIS.eRISServiceReference.eRISService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetUserName(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUserName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetUserName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentWorkflow(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentWorkflow", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult> EndGetCurrentWorkflow(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowResult>)(base.EndInvoke("GetCurrentWorkflow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentWorkflowDetails(string chart, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chart;
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentWorkflowDetails", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult> EndGetCurrentWorkflowDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCurrentWorkflowDetailsResult>)(base.EndInvoke("GetCurrentWorkflowDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPermissions(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPermissions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult> EndGetPermissions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPermissionsResult>)(base.EndInvoke("GetPermissions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPersonnel(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPersonnel", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult> EndGetPersonnel(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetPersonnelResult>)(base.EndInvoke("GetPersonnel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult> EndGetUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetUsersResult>)(base.EndInvoke("GetUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, string ipAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = password;
                _args[2] = ipAddress;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult> EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sLoginResult>)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetPermissions(
                        int id, 
                        bool isAdmin, 
                        bool isRISAdmin, 
                        bool isManager, 
                        bool isRadiologist, 
                        bool isRadiologistADI, 
                        bool isTech, 
                        bool isClerk, 
                        bool isTelerad, 
                        bool isPhysician, 
                        bool isPatient, 
                        bool isCoder, 
                        string ShortName, 
                        bool isCoderAssignable, 
                        int RadGroup, 
                        bool isCoderLimited, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[16];
                _args[0] = id;
                _args[1] = isAdmin;
                _args[2] = isRISAdmin;
                _args[3] = isManager;
                _args[4] = isRadiologist;
                _args[5] = isRadiologistADI;
                _args[6] = isTech;
                _args[7] = isClerk;
                _args[8] = isTelerad;
                _args[9] = isPhysician;
                _args[10] = isPatient;
                _args[11] = isCoder;
                _args[12] = ShortName;
                _args[13] = isCoderAssignable;
                _args[14] = RadGroup;
                _args[15] = isCoderLimited;
                System.IAsyncResult _result = base.BeginInvoke("SetPermissions", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetPermissions(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetPermissions", _args, result);
            }
            
            public System.IAsyncResult BeginGetStudiesReadPerDay(System.DateTime begDate, System.DateTime endDate, int group, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = begDate;
                _args[1] = endDate;
                _args[2] = group;
                System.IAsyncResult _result = base.BeginInvoke("GetStudiesReadPerDay", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult> EndGetStudiesReadPerDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerDayResult>)(base.EndInvoke("GetStudiesReadPerDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStudiesReadPerHour(System.DateTime begDate, System.DateTime endDate, int rad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = begDate;
                _args[1] = endDate;
                _args[2] = rad;
                System.IAsyncResult _result = base.BeginInvoke("GetStudiesReadPerHour", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult> EndGetStudiesReadPerHour(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sStudiesReadPerHourResult>)(base.EndInvoke("GetStudiesReadPerHour", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRadGroup(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRadGroup", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult> EndGetRadGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetRadGroupResult>)(base.EndInvoke("GetRadGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertUsersLog(int sourceID, int createdByID, int typeID, string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = sourceID;
                _args[1] = createdByID;
                _args[2] = typeID;
                _args[3] = description;
                System.IAsyncResult _result = base.BeginInvoke("InsertUsersLog", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertUsersLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertUsersLog", _args, result);
            }
            
            public System.IAsyncResult BeginGetUsersLogPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersLogPerDay", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult> EndGetUsersLogPerDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogPerDayResult>)(base.EndInvoke("GetUsersLogPerDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersLogPerSource(int SourceID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SourceID;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersLogPerSource", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult> EndGetUsersLogPerSource(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogBySourceResult>)(base.EndInvoke("GetUsersLogPerSource", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersLogByUser(int userID, System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userID;
                _args[1] = begDate;
                _args[2] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersLogByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult> EndGetUsersLogByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUsersLogByUserResult>)(base.EndInvoke("GetUsersLogByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMessagesLogPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetMessagesLogPerDay", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult> EndGetMessagesLogPerDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesLogPerDayResult>)(base.EndInvoke("GetMessagesLogPerDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetLayout(int id, string layout, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = layout;
                System.IAsyncResult _result = base.BeginInvoke("SetLayout", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetLayout(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetLayout", _args, result);
            }
            
            public System.IAsyncResult BeginGetTurnaroundTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetTurnaroundTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult> EndGetTurnaroundTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fTurnaroundTimeResult>)(base.EndInvoke("GetTurnaroundTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInterpretationTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetInterpretationTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult> EndGetInterpretationTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fInterpretationTimeResult>)(base.EndInvoke("GetInterpretationTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatientLongWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetPatientLongWait", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult> EndGetPatientLongWait(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientLongWaitResult>)(base.EndInvoke("GetPatientLongWait", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatientShortWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetPatientShortWait", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult> EndGetPatientShortWait(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientShortWaitResult>)(base.EndInvoke("GetPatientShortWait", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatientWait(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetPatientWait", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult> EndGetPatientWait(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fPatientWaitResult>)(base.EndInvoke("GetPatientWait", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompletedPerTech(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetCompletedPerTech", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult> EndGetCompletedPerTech(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fCompletedPerTechResult>)(base.EndInvoke("GetCompletedPerTech", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRegisteredPatients(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetRegisteredPatients", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult> EndGetRegisteredPatients(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegisteredPatientsResult>)(base.EndInvoke("GetRegisteredPatients", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRegistrationTime(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetRegistrationTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult> EndGetRegistrationTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fRegistrationTimeResult>)(base.EndInvoke("GetRegistrationTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFirstLastAppointment(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetFirstLastAppointment", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult> EndGetFirstLastAppointment(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fFirstLastAppointmentResult>)(base.EndInvoke("GetFirstLastAppointment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetScheduledPatients(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetScheduledPatients", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult> EndGetScheduledPatients(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fScheduledPatientsResult>)(base.EndInvoke("GetScheduledPatients", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrdersPending(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetOrdersPending", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult> EndGetOrdersPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersPendingResult>)(base.EndInvoke("GetOrdersPending", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListOrdersPending(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListOrdersPending", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult> EndListOrdersPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListOrdersPendingResult>)(base.EndInvoke("ListOrdersPending", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetOrdersPending(int id, char status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = status;
                System.IAsyncResult _result = base.BeginInvoke("SetOrdersPending", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetOrdersPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetOrdersPending", _args, result);
            }
            
            public System.IAsyncResult BeginGetInterfaceXref(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetInterfaceXref", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult> EndGetInterfaceXref(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetInterfaceXrefResult>)(base.EndInvoke("GetInterfaceXref", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListInterfaceXref(char xType, string xFacility, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = xType;
                _args[1] = xFacility;
                System.IAsyncResult _result = base.BeginInvoke("ListInterfaceXref", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult> EndListInterfaceXref(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceXrefResult>)(base.EndInvoke("ListInterfaceXref", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetInterfaceXref(int id, char xType, string xFacility, string xSendingValue, string xReceivingValue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = id;
                _args[1] = xType;
                _args[2] = xFacility;
                _args[3] = xSendingValue;
                _args[4] = xReceivingValue;
                System.IAsyncResult _result = base.BeginInvoke("SetInterfaceXref", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetInterfaceXref(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetInterfaceXref", _args, result);
            }
            
            public System.IAsyncResult BeginListInterface(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListInterface", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult> EndListInterface(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListInterfaceResult>)(base.EndInvoke("ListInterface", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListPatients(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListPatients", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult> EndListPatients(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListPatientsResult>)(base.EndInvoke("ListPatients", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListProcedures(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListProcedures", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult> EndListProcedures(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProceduresResult>)(base.EndInvoke("ListProcedures", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListProviders(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListProviders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult> EndListProviders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListProvidersResult>)(base.EndInvoke("ListProviders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListReferrers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListReferrers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult> EndListReferrers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListReferrersResult>)(base.EndInvoke("ListReferrers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMessagesSummary(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("MessagesSummary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult> EndMessagesSummary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sMessagesSummaryResult>)(base.EndInvoke("MessagesSummary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPhyCoderTotals(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("PhyCoderTotals", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult> EndPhyCoderTotals(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sPhyCoderTotalsResult>)(base.EndInvoke("PhyCoderTotals", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPhyCoderReports(string SQL, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SQL;
                System.IAsyncResult _result = base.BeginInvoke("PhyCoderReports", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report> EndPhyCoderReports(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Report>)(base.EndInvoke("PhyCoderReports", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPhyCoderOrders(string SQL, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SQL;
                System.IAsyncResult _result = base.BeginInvoke("PhyCoderOrders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order> EndPhyCoderOrders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.Order>)(base.EndInvoke("PhyCoderOrders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDemographics(string location, string mrn, string visit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = location;
                _args[1] = mrn;
                _args[2] = visit;
                System.IAsyncResult _result = base.BeginInvoke("GetDemographics", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult> EndGetDemographics(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetDemographicsResult>)(base.EndInvoke("GetDemographics", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrders(string location, string patientmrn, string visit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = location;
                _args[1] = patientmrn;
                _args[2] = visit;
                System.IAsyncResult _result = base.BeginInvoke("GetOrders", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult> EndGetOrders(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrdersResult>)(base.EndInvoke("GetOrders", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReport(int ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetReport", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult> EndGetReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportResult>)(base.EndInvoke("GetReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrder(int ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetOrder", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult> EndGetOrder(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetOrderResult>)(base.EndInvoke("GetOrder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReports(string location, string patientmrn, string examnumber, string visit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = location;
                _args[1] = patientmrn;
                _args[2] = examnumber;
                _args[3] = visit;
                System.IAsyncResult _result = base.BeginInvoke("GetReports", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult> EndGetReports(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetReportsResult>)(base.EndInvoke("GetReports", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDuplicateReports(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetDuplicateReports", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult> EndGetDuplicateReports(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sDuplicateReportsResult>)(base.EndInvoke("GetDuplicateReports", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetReport(
                        int id, 
                        char status, 
                        string charge1, 
                        string charge2, 
                        string charge3, 
                        string charge4, 
                        string charge5, 
                        string charge6, 
                        string charge7, 
                        string charge8, 
                        string charge9, 
                        string charge10, 
                        string charge11, 
                        string charge12, 
                        string charge13, 
                        string charge14, 
                        string charge15, 
                        string modifier1, 
                        string modifier2, 
                        string modifier3, 
                        string modifier4, 
                        string modifier5, 
                        string modifier6, 
                        string modifier7, 
                        string modifier8, 
                        string modifier9, 
                        string modifier10, 
                        string modifier11, 
                        string modifier12, 
                        string modifier13, 
                        string modifier14, 
                        string modifier15, 
                        int codedby, 
                        string notes, 
                        string icd1, 
                        string icd2, 
                        string icd3, 
                        string icd4, 
                        string icd5, 
                        string icd6, 
                        string icd7, 
                        string icd8, 
                        string icd9, 
                        string icd10, 
                        string icd11, 
                        string icd12, 
                        string icd13, 
                        string icd14, 
                        string icd15, 
                        int unit1, 
                        int unit2, 
                        int unit3, 
                        int unit4, 
                        int unit5, 
                        int unit6, 
                        int unit7, 
                        int unit8, 
                        int unit9, 
                        int unit10, 
                        int unit11, 
                        int unit12, 
                        int unit13, 
                        int unit14, 
                        int unit15, 
                        int assignedto, 
                        decimal price1, 
                        decimal price2, 
                        decimal price3, 
                        decimal price4, 
                        decimal price5, 
                        decimal price6, 
                        decimal price7, 
                        decimal price8, 
                        decimal price9, 
                        decimal price10, 
                        decimal price11, 
                        decimal price12, 
                        decimal price13, 
                        decimal price14, 
                        decimal price15, 
                        string dosage1, 
                        string dosage2, 
                        string dosage3, 
                        string dosage4, 
                        string dosage5, 
                        string dosage6, 
                        string dosage7, 
                        string dosage8, 
                        string dosage9, 
                        string dosage10, 
                        string dosage11, 
                        string dosage12, 
                        string dosage13, 
                        string dosage14, 
                        string dosage15, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[95];
                _args[0] = id;
                _args[1] = status;
                _args[2] = charge1;
                _args[3] = charge2;
                _args[4] = charge3;
                _args[5] = charge4;
                _args[6] = charge5;
                _args[7] = charge6;
                _args[8] = charge7;
                _args[9] = charge8;
                _args[10] = charge9;
                _args[11] = charge10;
                _args[12] = charge11;
                _args[13] = charge12;
                _args[14] = charge13;
                _args[15] = charge14;
                _args[16] = charge15;
                _args[17] = modifier1;
                _args[18] = modifier2;
                _args[19] = modifier3;
                _args[20] = modifier4;
                _args[21] = modifier5;
                _args[22] = modifier6;
                _args[23] = modifier7;
                _args[24] = modifier8;
                _args[25] = modifier9;
                _args[26] = modifier10;
                _args[27] = modifier11;
                _args[28] = modifier12;
                _args[29] = modifier13;
                _args[30] = modifier14;
                _args[31] = modifier15;
                _args[32] = codedby;
                _args[33] = notes;
                _args[34] = icd1;
                _args[35] = icd2;
                _args[36] = icd3;
                _args[37] = icd4;
                _args[38] = icd5;
                _args[39] = icd6;
                _args[40] = icd7;
                _args[41] = icd8;
                _args[42] = icd9;
                _args[43] = icd10;
                _args[44] = icd11;
                _args[45] = icd12;
                _args[46] = icd13;
                _args[47] = icd14;
                _args[48] = icd15;
                _args[49] = unit1;
                _args[50] = unit2;
                _args[51] = unit3;
                _args[52] = unit4;
                _args[53] = unit5;
                _args[54] = unit6;
                _args[55] = unit7;
                _args[56] = unit8;
                _args[57] = unit9;
                _args[58] = unit10;
                _args[59] = unit11;
                _args[60] = unit12;
                _args[61] = unit13;
                _args[62] = unit14;
                _args[63] = unit15;
                _args[64] = assignedto;
                _args[65] = price1;
                _args[66] = price2;
                _args[67] = price3;
                _args[68] = price4;
                _args[69] = price5;
                _args[70] = price6;
                _args[71] = price7;
                _args[72] = price8;
                _args[73] = price9;
                _args[74] = price10;
                _args[75] = price11;
                _args[76] = price12;
                _args[77] = price13;
                _args[78] = price14;
                _args[79] = price15;
                _args[80] = dosage1;
                _args[81] = dosage2;
                _args[82] = dosage3;
                _args[83] = dosage4;
                _args[84] = dosage5;
                _args[85] = dosage6;
                _args[86] = dosage7;
                _args[87] = dosage8;
                _args[88] = dosage9;
                _args[89] = dosage10;
                _args[90] = dosage11;
                _args[91] = dosage12;
                _args[92] = dosage13;
                _args[93] = dosage14;
                _args[94] = dosage15;
                System.IAsyncResult _result = base.BeginInvoke("SetReport", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetReport", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateReport(
                        int id, 
                        char status, 
                        string charge1, 
                        string charge2, 
                        string charge3, 
                        string charge4, 
                        string charge5, 
                        string charge6, 
                        string charge7, 
                        string charge8, 
                        string charge9, 
                        string charge10, 
                        string charge11, 
                        string charge12, 
                        string charge13, 
                        string charge14, 
                        string charge15, 
                        string modifier1, 
                        string modifier2, 
                        string modifier3, 
                        string modifier4, 
                        string modifier5, 
                        string modifier6, 
                        string modifier7, 
                        string modifier8, 
                        string modifier9, 
                        string modifier10, 
                        string modifier11, 
                        string modifier12, 
                        string modifier13, 
                        string modifier14, 
                        string modifier15, 
                        int codedby, 
                        string notes, 
                        string icd1, 
                        string icd2, 
                        string icd3, 
                        string icd4, 
                        string icd5, 
                        string icd6, 
                        string icd7, 
                        string icd8, 
                        string icd9, 
                        string icd10, 
                        string icd11, 
                        string icd12, 
                        string icd13, 
                        string icd14, 
                        string icd15, 
                        int unit1, 
                        int unit2, 
                        int unit3, 
                        int unit4, 
                        int unit5, 
                        int unit6, 
                        int unit7, 
                        int unit8, 
                        int unit9, 
                        int unit10, 
                        int unit11, 
                        int unit12, 
                        int unit13, 
                        int unit14, 
                        int unit15, 
                        int assignedto, 
                        decimal price1, 
                        decimal price2, 
                        decimal price3, 
                        decimal price4, 
                        decimal price5, 
                        decimal price6, 
                        decimal price7, 
                        decimal price8, 
                        decimal price9, 
                        decimal price10, 
                        decimal price11, 
                        decimal price12, 
                        decimal price13, 
                        decimal price14, 
                        decimal price15, 
                        string dosage1, 
                        string dosage2, 
                        string dosage3, 
                        string dosage4, 
                        string dosage5, 
                        string dosage6, 
                        string dosage7, 
                        string dosage8, 
                        string dosage9, 
                        string dosage10, 
                        string dosage11, 
                        string dosage12, 
                        string dosage13, 
                        string dosage14, 
                        string dosage15, 
                        string codingLocation, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[96];
                _args[0] = id;
                _args[1] = status;
                _args[2] = charge1;
                _args[3] = charge2;
                _args[4] = charge3;
                _args[5] = charge4;
                _args[6] = charge5;
                _args[7] = charge6;
                _args[8] = charge7;
                _args[9] = charge8;
                _args[10] = charge9;
                _args[11] = charge10;
                _args[12] = charge11;
                _args[13] = charge12;
                _args[14] = charge13;
                _args[15] = charge14;
                _args[16] = charge15;
                _args[17] = modifier1;
                _args[18] = modifier2;
                _args[19] = modifier3;
                _args[20] = modifier4;
                _args[21] = modifier5;
                _args[22] = modifier6;
                _args[23] = modifier7;
                _args[24] = modifier8;
                _args[25] = modifier9;
                _args[26] = modifier10;
                _args[27] = modifier11;
                _args[28] = modifier12;
                _args[29] = modifier13;
                _args[30] = modifier14;
                _args[31] = modifier15;
                _args[32] = codedby;
                _args[33] = notes;
                _args[34] = icd1;
                _args[35] = icd2;
                _args[36] = icd3;
                _args[37] = icd4;
                _args[38] = icd5;
                _args[39] = icd6;
                _args[40] = icd7;
                _args[41] = icd8;
                _args[42] = icd9;
                _args[43] = icd10;
                _args[44] = icd11;
                _args[45] = icd12;
                _args[46] = icd13;
                _args[47] = icd14;
                _args[48] = icd15;
                _args[49] = unit1;
                _args[50] = unit2;
                _args[51] = unit3;
                _args[52] = unit4;
                _args[53] = unit5;
                _args[54] = unit6;
                _args[55] = unit7;
                _args[56] = unit8;
                _args[57] = unit9;
                _args[58] = unit10;
                _args[59] = unit11;
                _args[60] = unit12;
                _args[61] = unit13;
                _args[62] = unit14;
                _args[63] = unit15;
                _args[64] = assignedto;
                _args[65] = price1;
                _args[66] = price2;
                _args[67] = price3;
                _args[68] = price4;
                _args[69] = price5;
                _args[70] = price6;
                _args[71] = price7;
                _args[72] = price8;
                _args[73] = price9;
                _args[74] = price10;
                _args[75] = price11;
                _args[76] = price12;
                _args[77] = price13;
                _args[78] = price14;
                _args[79] = price15;
                _args[80] = dosage1;
                _args[81] = dosage2;
                _args[82] = dosage3;
                _args[83] = dosage4;
                _args[84] = dosage5;
                _args[85] = dosage6;
                _args[86] = dosage7;
                _args[87] = dosage8;
                _args[88] = dosage9;
                _args[89] = dosage10;
                _args[90] = dosage11;
                _args[91] = dosage12;
                _args[92] = dosage13;
                _args[93] = dosage14;
                _args[94] = dosage15;
                _args[95] = codingLocation;
                System.IAsyncResult _result = base.BeginInvoke("UpdateReport", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult> EndUpdateReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sUpdateReportResult>)(base.EndInvoke("UpdateReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginfSplitHL7GPMS(string location, string patientmrn, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = location;
                _args[1] = patientmrn;
                System.IAsyncResult _result = base.BeginInvoke("fSplitHL7GPMS", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult> EndfSplitHL7GPMS(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.fSplitHL7GPMSResult>)(base.EndInvoke("fSplitHL7GPMS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReportsCodedPerDay(System.DateTime begDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = begDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetReportsCodedPerDay", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult> EndGetReportsCodedPerDay(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sReportsCodedPerDayResult>)(base.EndInvoke("GetReportsCodedPerDay", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetPending(int id, int codedby, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = codedby;
                System.IAsyncResult _result = base.BeginInvoke("SetPending", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetPending", _args, result);
            }
            
            public System.IAsyncResult BeginClearPending(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("ClearPending", _args, callback, asyncState);
                return _result;
            }
            
            public void EndClearPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ClearPending", _args, result);
            }
            
            public System.IAsyncResult BeginListICD9(string code, string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = code;
                _args[1] = description;
                System.IAsyncResult _result = base.BeginInvoke("ListICD9", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result> EndListICD9(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sListICD9Result>)(base.EndInvoke("ListICD9", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetMessagesLog(int sourceID, int typeID, string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = sourceID;
                _args[1] = typeID;
                _args[2] = description;
                System.IAsyncResult _result = base.BeginInvoke("SetMessagesLog", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetMessagesLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetMessagesLog", _args, result);
            }
            
            public System.IAsyncResult BeginMarkDeleted(string loc, string exam, int codedby, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = loc;
                _args[1] = exam;
                _args[2] = codedby;
                System.IAsyncResult _result = base.BeginInvoke("MarkDeleted", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMarkDeleted(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MarkDeleted", _args, result);
            }
            
            public System.IAsyncResult BeginGetToCode(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetToCode", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult> EndGetToCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sToCodeResult>)(base.EndInvoke("GetToCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetExamNumber(int id, string exam, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = exam;
                System.IAsyncResult _result = base.BeginInvoke("SetExamNumber", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetExamNumber(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetExamNumber", _args, result);
            }
            
            public System.IAsyncResult BeginSetRad(int id, int rad, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = rad;
                System.IAsyncResult _result = base.BeginInvoke("SetRad", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSetRad(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SetRad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBioImagingReports(string SQL, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SQL;
                System.IAsyncResult _result = base.BeginInvoke("BioImagingReports", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment> EndBioImagingReports(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.bAppointment>)(base.EndInvoke("BioImagingReports", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoderTotals(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("CoderTotals", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult> EndCoderTotals(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sCoderTotalsResult>)(base.EndInvoke("CoderTotals", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExamComments(int Exam, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Exam;
                System.IAsyncResult _result = base.BeginInvoke("GetExamComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult> EndGetExamComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult> _result = ((System.Collections.ObjectModel.ObservableCollection<eRIS.eRISServiceReference.sGetExamCommentsResult>)(base.EndInvoke("GetExamComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExamDocuments(string PatientMRN, int Exam, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = PatientMRN;
                _args[1] = Exam;
                System.IAsyncResult _result = base.BeginInvoke("GetExamDocuments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndGetExamDocuments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("GetExamDocuments", _args, result)));
                return _result;
            }
        }
    }
}
